{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","base64","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=770e7e8819793eb4","-C","extra-filename=-770e7e8819793eb4","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--extern","byteorder=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libbyteorder-3c33cdda8c6439a8.rmeta","--extern","safemem=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libsafemem-96a04576a2712e70.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libbase64-770e7e8819793eb4.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[6558137000883203684,13053550833040180612]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[16929710598040131471,9781611388421019446]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/line_wrap.rs","num":16,"id":{"name":"safemem","disambiguator":[9110549664141974230,14371468164544854285]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":0,"byte_end":7415,"line_start":1,"line_end":220,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":104},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3489,"byte_end":3495,"line_start":73,"line_end":73,"column_start":18,"column_end":24},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":106},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3497,"byte_end":3510,"line_start":73,"line_end":73,"column_start":26,"column_end":39},"alias_span":null,"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":108},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3512,"byte_end":3529,"line_start":73,"line_end":73,"column_start":41,"column_end":58},"alias_span":null,"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3531,"byte_end":3550,"line_start":73,"line_end":73,"column_start":60,"column_end":79},"alias_span":null,"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3583,"byte_end":3589,"line_start":76,"line_end":76,"column_start":18,"column_end":24},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3591,"byte_end":3604,"line_start":76,"line_end":76,"column_start":26,"column_end":39},"alias_span":null,"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3606,"byte_end":3623,"line_start":76,"line_end":76,"column_start":41,"column_end":58},"alias_span":null,"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3625,"byte_end":3644,"line_start":76,"line_end":76,"column_start":60,"column_end":79},"alias_span":null,"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":217},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3646,"byte_end":3657,"line_start":76,"line_end":76,"column_start":81,"column_end":92},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":0,"byte_end":7415,"line_start":1,"line_end":220,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":37},{"krate":0,"index":71},{"krate":0,"index":77},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":123},{"krate":0,"index":128},{"krate":0,"index":171},{"krate":0,"index":233},{"krate":0,"index":243},{"krate":0,"index":242},{"krate":0,"index":240},{"krate":0,"index":177},{"krate":0,"index":245},{"krate":0,"index":253},{"krate":0,"index":252},{"krate":0,"index":250},{"krate":0,"index":182},{"krate":0,"index":255},{"krate":0,"index":265},{"krate":0,"index":264},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":275},{"krate":0,"index":274},{"krate":0,"index":272},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_results,\n       variant_size_differences, warnings)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3150,"byte_end":3316,"line_start":58,"line_end":61,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/chunked_encoder.rs","byte_start":7625,"byte_end":7630,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":199},{"krate":0,"index":204},{"krate":0,"index":202},{"krate":0,"index":48},{"krate":0,"index":52},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":66}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":200},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":26255,"byte_end":26272,"line_start":24,"line_end":24,"column_start":5,"column_end":22},"name":"InvalidLineLength","qualname":"::display::DisplayError::InvalidLineLength","value":"DisplayError::InvalidLineLength","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" If wrapping is configured, the line length must be a multiple of 4, and must not be absurdly\n large (currently capped at 1024, subject to change).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":199},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":26074,"byte_end":26086,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DisplayError","qualname":"::display::DisplayError","value":"DisplayError::{InvalidLineLength}","parent":null,"children":[{"krate":0,"index":200}],"decl_id":null,"docs":" Errors that can occur initializing a Base64Display.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":26381,"byte_end":26394,"line_start":28,"line_end":28,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":26561,"byte_end":26572,"line_start":35,"line_end":35,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"fn (bytes: &[u8], config: Config) -> Result<Base64Display, DisplayError>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":27043,"byte_end":27051,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"standard","qualname":"<Base64Display>::standard","value":"fn (bytes: &[u8]) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for creating a `Base64Display` with the `STANDARD` configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":27283,"byte_end":27291,"line_start":52,"line_end":52,"column_start":12,"column_end":20},"name":"url_safe","qualname":"<Base64Display>::url_safe","value":"fn (bytes: &[u8]) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for creating a `Base64Display` with the `URL_SAFE` configuration.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":104},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/encode.rs","byte_start":82693,"byte_end":82699,"line_start":18,"line_end":18,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"fn <T> (input: &T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":106},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/encode.rs","byte_start":83160,"byte_end":83173,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"fn <T> (input: &T, config: Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/encode.rs","byte_start":83984,"byte_end":84001,"line_start":67,"line_end":67,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"fn <T> (input: &T, config: Config, buf: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":110},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/encode.rs","byte_start":85637,"byte_end":85656,"line_start":123,"line_end":123,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":218},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109413,"byte_end":109424,"line_start":25,"line_end":25,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":222},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109485,"byte_end":109498,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":217},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109303,"byte_end":109314,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"DecodeError::{InvalidByte, InvalidLength}","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":222}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":152},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":110513,"byte_end":110519,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"fn <T> (input: &T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":154},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":111073,"byte_end":111086,"line_start":88,"line_end":88,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"fn <T> (input: &T, config: Config) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":157},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":111930,"byte_end":111947,"line_start":118,"line_end":118,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"fn <T> (input: &T, config: Config, buffer: &mut Vec<u8>) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":160},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":113389,"byte_end":113408,"line_start":160,"line_end":160,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3836,"byte_end":3844,"line_start":85,"line_end":85,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3904,"byte_end":3911,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":238},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4028,"byte_end":4033,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::CharacterSet::Crypt","value":"CharacterSet::Crypt","parent":{"krate":0,"index":233},"children":[],"decl_id":null,"docs":" The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":233},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3763,"byte_end":3775,"line_start":83,"line_end":83,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"CharacterSet::{Standard, UrlSafe, Crypt}","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":246},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4729,"byte_end":4731,"line_start":114,"line_end":114,"column_start":5,"column_end":7},"name":"LF","qualname":"::LineEnding::LF","value":"LineEnding::LF","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Unix-style \\n\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":248},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4764,"byte_end":4768,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::LineEnding::CRLF","value":"LineEnding::CRLF","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" Windows-style \\r\\n\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":245},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4690,"byte_end":4700,"line_start":112,"line_end":112,"column_start":10,"column_end":20},"name":"LineEnding","qualname":"::LineEnding","value":"LineEnding::{LF, CRLF}","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248}],"decl_id":null,"docs":" Line ending used in optional line wrapping.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":256},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":5032,"byte_end":5038,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"NoWrap","qualname":"::LineWrap::NoWrap","value":"LineWrap::NoWrap","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Don't wrap.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":258},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":5130,"byte_end":5134,"line_start":134,"line_end":134,"column_start":5,"column_end":9},"name":"Wrap","qualname":"::LineWrap::Wrap","value":"LineWrap::Wrap(usize, LineEnding)","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Wrap lines with the specified length and line ending. The length must be > 0.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":255},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4997,"byte_end":5005,"line_start":130,"line_end":130,"column_start":10,"column_end":18},"name":"LineWrap","qualname":"::LineWrap","value":"LineWrap::{NoWrap, Wrap}","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":258}],"decl_id":null,"docs":" Line wrap configuration.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":267},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":5257,"byte_end":5263,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":5784,"byte_end":5787,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (char_set: CharacterSet, pad: bool, strip_whitespace: bool, input_line_wrap: LineWrap) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":186},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":6252,"byte_end":6260,"line_start":175,"line_end":175,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":187},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":6453,"byte_end":6468,"line_start":183,"line_end":183,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":188},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":6665,"byte_end":6669,"line_start":191,"line_end":191,"column_start":11,"column_end":15},"name":"MIME","qualname":"::MIME","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per standards for MIME encoded messages\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":189},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":6877,"byte_end":6885,"line_start":199,"line_end":199,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":7076,"byte_end":7091,"line_start":207,"line_end":207,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":7275,"byte_end":7280,"line_start":215,"line_end":215,"column_start":11,"column_end":16},"name":"CRYPT","qualname":"::CRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per `crypt(3)` requirements\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/chunked_encoder.rs","byte_start":8197,"byte_end":8211,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":26471,"byte_end":26484,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":27442,"byte_end":27455,"line_start":57,"line_end":57,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":27776,"byte_end":27789,"line_start":68,"line_end":68,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109525,"byte_end":109536,"line_start":30,"line_end":30,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109900,"byte_end":109911,"line_start":41,"line_end":41,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4043,"byte_end":4055,"line_start":92,"line_end":92,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4778,"byte_end":4788,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":5733,"byte_end":5739,"line_start":152,"line_end":152,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":3372,"byte_end":3379,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":37}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/chunked_encoder.rs","byte_start":8197,"byte_end":8211,"line_start":29,"line_end":29,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":26471,"byte_end":26484,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":27442,"byte_end":27455,"line_start":57,"line_end":57,"column_start":22,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":48},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/display.rs","byte_start":27776,"byte_end":27789,"line_start":68,"line_end":68,"column_start":51,"column_end":64},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":62},"to":{"krate":0,"index":23}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109525,"byte_end":109536,"line_start":30,"line_end":30,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":217},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/decode.rs","byte_start":109900,"byte_end":109911,"line_start":41,"line_end":41,"column_start":23,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":217},"to":{"krate":1,"index":1558}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4043,"byte_end":4055,"line_start":92,"line_end":92,"column_start":6,"column_end":18},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":4778,"byte_end":4788,"line_start":119,"line_end":119,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.9.3/src/lib.rs","byte_start":5733,"byte_end":5739,"line_start":152,"line_end":152,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":267},"to":{"krate":4294967295,"index":4294967295}}]}