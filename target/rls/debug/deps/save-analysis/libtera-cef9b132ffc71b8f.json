{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tera","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=cef9b132ffc71b8f","-C","extra-filename=-cef9b132ffc71b8f","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--extern","chrono=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libchrono-b25bf44124b43a69.rmeta","--extern","error_chain=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/liberror_chain-fe11892645922f96.rmeta","--extern","glob=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libglob-cb124d5c603a8d08.rmeta","--extern","humansize=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libhumansize-b06a22225321c50e.rmeta","--extern","lazy_static=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/liblazy_static-52f4edc0e3aa6b18.rmeta","--extern","pest=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libpest-56761164f5cbbc07.rmeta","--extern","pest_derive=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libpest_derive-2d6d5aec34802771.so","--extern","regex=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libregex-2bed1447f8456bb5.rmeta","--extern","serde=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libserde-e4937eaf6dc84bac.rmeta","--extern","serde_json=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libserde_json-1ccffe85dcd8069c.rmeta","--extern","slug=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libslug-be494e07fa215bff.rmeta","--extern","unic_segment=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libunic_segment-c51c30e56c84fdf9.rmeta","--extern","url=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/liburl-19c201bdc12a4233.rmeta","--cap-lints","allow","-L","native=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/build/backtrace-sys-c5f62013673422d6/out","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libtera-cef9b132ffc71b8f.rmeta"},"prelude":{"crate_id":{"name":"tera","disambiguator":[11731642380544233572,4345062875466133260]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"<::alloc::macros::format macros>","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":15,"id":{"name":"glob","disambiguator":[17790603242126306424,13626591600606148311]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":16,"id":{"name":"pest","disambiguator":[11010133351463150997,7124165009757611249]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":17,"id":{"name":"ucd_trie","disambiguator":[2683682794824494694,5814034519640716580]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":18,"id":{"name":"serde","disambiguator":[10372407434365742225,11121587653223998768]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":19,"id":{"name":"serde_json","disambiguator":[1000933002760019673,8129785679040264628]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":20,"id":{"name":"itoa","disambiguator":[17339288070024955613,5360377298043042211]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":21,"id":{"name":"ryu","disambiguator":[5994448995245965686,10766611570149093]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":22,"id":{"name":"pest_derive","disambiguator":[11194670590780302219,16526299828168688255]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":23,"id":{"name":"error_chain","disambiguator":[3269093617940870636,523152646429742252]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":24,"id":{"name":"backtrace","disambiguator":[9482354207889555053,12304407039484636796]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":25,"id":{"name":"rustc_demangle","disambiguator":[4833200830398230986,14550622804253452797]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":26,"id":{"name":"cfg_if","disambiguator":[13847854054909782822,7162271722131127361]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":27,"id":{"name":"backtrace_sys","disambiguator":[10331134354676288318,14890903717125336409]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[11017835551169623119,13275532129668103129]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":29,"id":{"name":"regex","disambiguator":[18159175670962935386,2052806547381982509]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":30,"id":{"name":"aho_corasick","disambiguator":[13246844706452902710,6800798942021281068]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":31,"id":{"name":"memchr","disambiguator":[12160049870115632086,12629332403044151026]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":32,"id":{"name":"regex_syntax","disambiguator":[18445337015329056969,2169589241987448270]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":33,"id":{"name":"thread_local","disambiguator":[5655968975464274579,7820253842575092186]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":34,"id":{"name":"lazy_static","disambiguator":[3602112774424056391,9172973058702272592]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":35,"id":{"name":"slug","disambiguator":[7151495428478150484,7845733706891971874]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":36,"id":{"name":"deunicode","disambiguator":[1944876741319548274,10866341410617565127]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":37,"id":{"name":"chrono","disambiguator":[8271254301744893675,2933654884158185631]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":38,"id":{"name":"time","disambiguator":[17110143350307628242,3335504035279660345]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":39,"id":{"name":"num_integer","disambiguator":[4649767724279522325,13471523115661383319]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":40,"id":{"name":"num_traits","disambiguator":[3627904315340171164,7083878352906136835]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":41,"id":{"name":"humansize","disambiguator":[5249442092718587560,10545961919166845278]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":42,"id":{"name":"url","disambiguator":[1980568042705648263,10246703420563967693]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":43,"id":{"name":"matches","disambiguator":[6410930627264028859,13619116456228542381]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":44,"id":{"name":"idna","disambiguator":[10378433206922792260,13657374398210597147]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":45,"id":{"name":"unicode_bidi","disambiguator":[11705279506054357711,18421000031372589156]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":46,"id":{"name":"unicode_normalization","disambiguator":[12034709842482363358,6344861357375427152]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":47,"id":{"name":"smallvec","disambiguator":[5240122063181865918,4175801499735234232]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":48,"id":{"name":"percent_encoding","disambiguator":[4821450245090839808,1565117168875151916]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":49,"id":{"name":"unic_segment","disambiguator":[3233993213743043105,13707962305641969594]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":50,"id":{"name":"unic_ucd_segment","disambiguator":[11792525015691725285,6351744568215740989]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":51,"id":{"name":"unic_char_property","disambiguator":[12679837634336423972,13801099218943451881]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":52,"id":{"name":"unic_char_range","disambiguator":[7959199748288694421,11757982635690883334]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":53,"id":{"name":"unic_ucd_version","disambiguator":[1933193199106920936,5444207993132429203]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","num":54,"id":{"name":"unic_common","disambiguator":[709598175939983431,16656611501706083850]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":0,"byte_end":1653,"line_start":1,"line_end":66,"column_start":1,"column_end":21}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1082,"byte_end":1090,"line_start":50,"line_end":50,"column_start":28,"column_end":36},"alias_span":null,"name":"FilterFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1121,"byte_end":1129,"line_start":51,"line_end":51,"column_start":30,"column_end":38},"alias_span":null,"name":"GlobalFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":155},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1158,"byte_end":1166,"line_start":52,"line_end":52,"column_start":28,"column_end":36},"alias_span":null,"name":"TesterFn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1185,"byte_end":1192,"line_start":53,"line_end":53,"column_start":18,"column_end":25},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":742},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1211,"byte_end":1216,"line_start":54,"line_end":54,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":750},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1218,"byte_end":1227,"line_start":54,"line_end":54,"column_start":25,"column_end":34},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":675},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1229,"byte_end":1235,"line_start":54,"line_end":54,"column_start":36,"column_end":42},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1663},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1369,"byte_end":1379,"line_start":57,"line_end":57,"column_start":29,"column_end":39},"alias_span":null,"name":"from_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1661},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1381,"byte_end":1389,"line_start":57,"line_end":57,"column_start":41,"column_end":49},"alias_span":null,"name":"to_value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":458},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1391,"byte_end":1394,"line_start":57,"line_end":57,"column_start":51,"column_end":54},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":2667},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1396,"byte_end":1402,"line_start":57,"line_end":57,"column_start":56,"column_end":62},"alias_span":null,"name":"Number","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":2094},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1404,"byte_end":1409,"line_start":57,"line_end":57,"column_start":64,"column_end":69},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2438},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1445,"byte_end":1453,"line_start":59,"line_end":59,"column_start":19,"column_end":27},"alias_span":null,"name":"Template","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":559},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1469,"byte_end":1473,"line_start":60,"line_end":60,"column_start":15,"column_end":19},"alias_span":null,"name":"Tera","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1490,"byte_end":1501,"line_start":61,"line_end":61,"column_start":16,"column_end":27},"alias_span":null,"name":"escape_html","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":1649,"byte_end":1652,"line_start":66,"line_end":66,"column_start":17,"column_end":20},"alias_span":null,"name":"ast","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":0,"byte_end":1653,"line_start":1,"line_end":66,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":176},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":285},{"krate":0,"index":475},{"krate":0,"index":517},{"krate":0,"index":530},{"krate":0,"index":619},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":629},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638}],"decl_id":null,"docs":" # Tera\n Tera is a template engine based on [Jinja2](http://jinja.pocoo.org/)\n and the [Django template language](https://docs.djangoproject.com/en/1.9/topics/templates/).","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/lib.rs","byte_start":318,"byte_end":340,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":134},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/filters/mod.rs","byte_start":3718,"byte_end":3726,"line_start":13,"line_end":13,"column_start":10,"column_end":18},"name":"FilterFn","qualname":"::builtins::filters::FilterFn","value":"fn(Value, HashMap<String, Value>) -> Result<Value>","parent":null,"children":[],"decl_id":null,"docs":" The filter function type definition\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":143},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/functions.rs","byte_start":52877,"byte_end":52885,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"GlobalFn","qualname":"::builtins::functions::GlobalFn","value":"Box<Fn(HashMap<String, Value>) -> Result<Value> + Sync + Send>","parent":null,"children":[],"decl_id":null,"docs":" The global function type definition\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":155},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/testers.rs","byte_start":58901,"byte_end":58909,"line_start":7,"line_end":7,"column_start":10,"column_end":18},"name":"TesterFn","qualname":"::builtins::testers::TesterFn","value":"fn(Option<Value>, Vec<Value>) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" The tester function type definition\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":69251,"byte_end":69258,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context {  }","parent":null,"children":[{"krate":0,"index":667}],"decl_id":null,"docs":" The struct that holds the context of a template rendering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":69362,"byte_end":69365,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Context>::new","value":"fn () -> Context","parent":null,"children":[],"decl_id":null,"docs":" Initializes an empty context\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":69591,"byte_end":69594,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"add","qualname":"<Context>::add","value":"fn <T> (&mut self, key: &str, val: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.11.15\", note =\n             \"Use `insert` instead to keep consistency with std collections\")","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":69453,"byte_end":69579,"line_start":26,"line_end":29,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70011,"byte_end":70017,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"insert","qualname":"<Context>::insert","value":"fn <T> (&mut self, key: &str, val: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Converts the `val` parameter to `Value` and insert it into the context","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70177,"byte_end":70184,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"as_json","qualname":"<Context>::as_json","value":"fn (&self) -> TeraResult<Value>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70722,"byte_end":70728,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"extend","qualname":"<Context>::extend","value":"fn (&mut self, mut source: Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends the data of the `source` parameter to `self`, overwriting existing keys.\n The source context will be dropped.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":226},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ast","qualname":"::parser::ast","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":1952},{"krate":0,"index":1961},{"krate":0,"index":1960},{"krate":0,"index":1958},{"krate":0,"index":1955},{"krate":0,"index":229},{"krate":0,"index":1963},{"krate":0,"index":1980},{"krate":0,"index":1978},{"krate":0,"index":1976},{"krate":0,"index":1974},{"krate":0,"index":231},{"krate":0,"index":1981},{"krate":0,"index":2004},{"krate":0,"index":2002},{"krate":0,"index":2000},{"krate":0,"index":1998},{"krate":0,"index":233},{"krate":0,"index":2005},{"krate":0,"index":2013},{"krate":0,"index":2011},{"krate":0,"index":2008},{"krate":0,"index":2015},{"krate":0,"index":2024},{"krate":0,"index":2022},{"krate":0,"index":2019},{"krate":0,"index":2026},{"krate":0,"index":2035},{"krate":0,"index":2033},{"krate":0,"index":2030},{"krate":0,"index":2037},{"krate":0,"index":2044},{"krate":0,"index":2042},{"krate":0,"index":2039},{"krate":0,"index":2046},{"krate":0,"index":2088},{"krate":0,"index":2086},{"krate":0,"index":2083},{"krate":0,"index":2090},{"krate":0,"index":2099},{"krate":0,"index":2097},{"krate":0,"index":2094},{"krate":0,"index":235},{"krate":0,"index":2101},{"krate":0,"index":2110},{"krate":0,"index":2108},{"krate":0,"index":2105},{"krate":0,"index":2112},{"krate":0,"index":2120},{"krate":0,"index":2118},{"krate":0,"index":2115},{"krate":0,"index":2122},{"krate":0,"index":2131},{"krate":0,"index":2129},{"krate":0,"index":2126},{"krate":0,"index":2133},{"krate":0,"index":2142},{"krate":0,"index":2140},{"krate":0,"index":2137},{"krate":0,"index":2144},{"krate":0,"index":2153},{"krate":0,"index":2151},{"krate":0,"index":2148},{"krate":0,"index":2155},{"krate":0,"index":2163},{"krate":0,"index":2161},{"krate":0,"index":2158},{"krate":0,"index":2165},{"krate":0,"index":2175},{"krate":0,"index":2173},{"krate":0,"index":2170},{"krate":0,"index":2177},{"krate":0,"index":2185},{"krate":0,"index":2183},{"krate":0,"index":2180},{"krate":0,"index":2187},{"krate":0,"index":2253},{"krate":0,"index":2251},{"krate":0,"index":2248}],"decl_id":null,"docs":" The AST of Tera\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1952},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":112977,"byte_end":112979,"line_start":6,"line_end":6,"column_start":12,"column_end":14},"name":"WS","qualname":"::parser::ast::WS","value":"WS { left, right }","parent":null,"children":[{"krate":0,"index":1953},{"krate":0,"index":1954}],"decl_id":null,"docs":" Whether to remove the whitespace of a `{% %}` tag\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113025,"byte_end":113029,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"left","qualname":"::parser::ast::WS::left","value":"bool","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" `true` if the tag is `{%-`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113080,"byte_end":113085,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"name":"right","qualname":"::parser::ast::WS::right","value":"bool","parent":{"krate":0,"index":1952},"children":[],"decl_id":null,"docs":" `true` if the tag is `-%}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1964},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113297,"byte_end":113300,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Add","qualname":"::parser::ast::MathOperator::Add","value":"MathOperator::Add","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" +\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1966},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113316,"byte_end":113319,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"Sub","qualname":"::parser::ast::MathOperator::Sub","value":"MathOperator::Sub","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" -\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1968},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113335,"byte_end":113338,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"Mul","qualname":"::parser::ast::MathOperator::Mul","value":"MathOperator::Mul","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" *\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1970},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113354,"byte_end":113357,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Div","qualname":"::parser::ast::MathOperator::Div","value":"MathOperator::Div","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" /\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1972},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113373,"byte_end":113379,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Modulo","qualname":"::parser::ast::MathOperator::Modulo","value":"MathOperator::Modulo","parent":{"krate":0,"index":1963},"children":[],"decl_id":null,"docs":" %\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1963},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113268,"byte_end":113280,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"MathOperator","qualname":"::parser::ast::MathOperator","value":"MathOperator::{Add, Sub, Mul, Div, Modulo}","parent":null,"children":[{"krate":0,"index":1964},{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1972}],"decl_id":null,"docs":" All math operators\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1982},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113905,"byte_end":113907,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"Gt","qualname":"::parser::ast::LogicOperator::Gt","value":"LogicOperator::Gt","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" >\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1984},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113924,"byte_end":113927,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Gte","qualname":"::parser::ast::LogicOperator::Gte","value":"LogicOperator::Gte","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" >=\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1986},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113943,"byte_end":113945,"line_start":58,"line_end":58,"column_start":5,"column_end":7},"name":"Lt","qualname":"::parser::ast::LogicOperator::Lt","value":"LogicOperator::Lt","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" <\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1988},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113962,"byte_end":113965,"line_start":60,"line_end":60,"column_start":5,"column_end":8},"name":"Lte","qualname":"::parser::ast::LogicOperator::Lte","value":"LogicOperator::Lte","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" <=\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1990},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113982,"byte_end":113984,"line_start":62,"line_end":62,"column_start":5,"column_end":7},"name":"Eq","qualname":"::parser::ast::LogicOperator::Eq","value":"LogicOperator::Eq","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" ==\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1992},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114001,"byte_end":114006,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"NotEq","qualname":"::parser::ast::LogicOperator::NotEq","value":"LogicOperator::NotEq","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" !=\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1994},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114024,"byte_end":114027,"line_start":66,"line_end":66,"column_start":5,"column_end":8},"name":"And","qualname":"::parser::ast::LogicOperator::And","value":"LogicOperator::And","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" and\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1996},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114044,"byte_end":114046,"line_start":68,"line_end":68,"column_start":5,"column_end":7},"name":"Or","qualname":"::parser::ast::LogicOperator::Or","value":"LogicOperator::Or","parent":{"krate":0,"index":1981},"children":[],"decl_id":null,"docs":" or\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1981},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113875,"byte_end":113888,"line_start":52,"line_end":52,"column_start":10,"column_end":23},"name":"LogicOperator","qualname":"::parser::ast::LogicOperator","value":"LogicOperator::{Gt, Gte, Lt, Lte, Eq, NotEq, And, Or}","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1984},{"krate":0,"index":1986},{"krate":0,"index":1988},{"krate":0,"index":1990},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1996}],"decl_id":null,"docs":" All logic operators\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2005},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114709,"byte_end":114721,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"FunctionCall","qualname":"::parser::ast::FunctionCall","value":"FunctionCall { name, args }","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007}],"decl_id":null,"docs":" A function call, can be a filter or a global function\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2006},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114765,"byte_end":114769,"line_start":94,"line_end":94,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::FunctionCall::name","value":"std::string::String","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" The name of the function\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2007},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114834,"byte_end":114838,"line_start":96,"line_end":96,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::FunctionCall::args","value":"std::collections::HashMap<std::string::String, parser::ast::Expr>","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" The args of the function: key -> value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114942,"byte_end":114950,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"MathExpr","qualname":"::parser::ast::MathExpr","value":"MathExpr { lhs, rhs, operator }","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"decl_id":null,"docs":" A mathematical expression\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2016},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115006,"byte_end":115009,"line_start":103,"line_end":103,"column_start":9,"column_end":12},"name":"lhs","qualname":"::parser::ast::MathExpr::lhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":" The left hand side of the expression\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2017},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115076,"byte_end":115079,"line_start":105,"line_end":105,"column_start":9,"column_end":12},"name":"rhs","qualname":"::parser::ast::MathExpr::rhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":" The right hand side of the expression\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2018},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115126,"byte_end":115134,"line_start":107,"line_end":107,"column_start":9,"column_end":17},"name":"operator","qualname":"::parser::ast::MathExpr::operator","value":"parser::ast::MathOperator","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":" The operator used\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2026},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115224,"byte_end":115233,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"LogicExpr","qualname":"::parser::ast::LogicExpr","value":"LogicExpr { lhs, rhs, operator }","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029}],"decl_id":null,"docs":" A logical expression\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2027},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115289,"byte_end":115292,"line_start":114,"line_end":114,"column_start":9,"column_end":12},"name":"lhs","qualname":"::parser::ast::LogicExpr::lhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" The left hand side of the expression\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2028},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115359,"byte_end":115362,"line_start":116,"line_end":116,"column_start":9,"column_end":12},"name":"rhs","qualname":"::parser::ast::LogicExpr::rhs","value":"std::boxed::Box<parser::ast::Expr>","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" The right hand side of the expression\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2029},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115409,"byte_end":115417,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"operator","qualname":"::parser::ast::LogicExpr::operator","value":"parser::ast::LogicOperator","parent":{"krate":0,"index":2026},"children":[],"decl_id":null,"docs":" The operator used\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2037},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115548,"byte_end":115560,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"StringConcat","qualname":"::parser::ast::StringConcat","value":"StringConcat { values }","parent":null,"children":[{"krate":0,"index":2038}],"decl_id":null,"docs":" Can only be a combination of string + ident or ident + ident\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2038},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115626,"byte_end":115632,"line_start":125,"line_end":125,"column_start":9,"column_end":15},"name":"values","qualname":"::parser::ast::StringConcat::values","value":"std::vec::Vec<parser::ast::ExprVal>","parent":{"krate":0,"index":2037},"children":[],"decl_id":null,"docs":" All the values we're concatening into a string\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2047},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115810,"byte_end":115816,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"String","qualname":"::parser::ast::ExprVal::String","value":"ExprVal::String(String)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2050},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115830,"byte_end":115833,"line_start":133,"line_end":133,"column_start":5,"column_end":8},"name":"Int","qualname":"::parser::ast::ExprVal::Int","value":"ExprVal::Int(i64)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2053},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115844,"byte_end":115849,"line_start":134,"line_end":134,"column_start":5,"column_end":10},"name":"Float","qualname":"::parser::ast::ExprVal::Float","value":"ExprVal::Float(f64)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2056},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115860,"byte_end":115864,"line_start":135,"line_end":135,"column_start":5,"column_end":9},"name":"Bool","qualname":"::parser::ast::ExprVal::Bool","value":"ExprVal::Bool(bool)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2059},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115876,"byte_end":115881,"line_start":136,"line_end":136,"column_start":5,"column_end":10},"name":"Ident","qualname":"::parser::ast::ExprVal::Ident","value":"ExprVal::Ident(String)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2062},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115895,"byte_end":115899,"line_start":137,"line_end":137,"column_start":5,"column_end":9},"name":"Math","qualname":"::parser::ast::ExprVal::Math","value":"ExprVal::Math(MathExpr)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2065},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115915,"byte_end":115920,"line_start":138,"line_end":138,"column_start":5,"column_end":10},"name":"Logic","qualname":"::parser::ast::ExprVal::Logic","value":"ExprVal::Logic(LogicExpr)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115937,"byte_end":115941,"line_start":139,"line_end":139,"column_start":5,"column_end":9},"name":"Test","qualname":"::parser::ast::ExprVal::Test","value":"ExprVal::Test(Test)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2071},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115953,"byte_end":115962,"line_start":140,"line_end":140,"column_start":5,"column_end":14},"name":"MacroCall","qualname":"::parser::ast::ExprVal::MacroCall","value":"ExprVal::MacroCall(MacroCall)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2074},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115979,"byte_end":115991,"line_start":141,"line_end":141,"column_start":5,"column_end":17},"name":"FunctionCall","qualname":"::parser::ast::ExprVal::FunctionCall","value":"ExprVal::FunctionCall(FunctionCall)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2077},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116102,"byte_end":116107,"line_start":144,"line_end":144,"column_start":5,"column_end":10},"name":"Array","qualname":"::parser::ast::ExprVal::Array","value":"ExprVal::Array(Vec<Expr>)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2080},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116124,"byte_end":116136,"line_start":145,"line_end":145,"column_start":5,"column_end":17},"name":"StringConcat","qualname":"::parser::ast::ExprVal::StringConcat","value":"ExprVal::StringConcat(StringConcat)","parent":{"krate":0,"index":2046},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2046},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115796,"byte_end":115803,"line_start":131,"line_end":131,"column_start":10,"column_end":17},"name":"ExprVal","qualname":"::parser::ast::ExprVal","value":"ExprVal::{String, Int, Float, Bool, Ident, Math, Logic, Test, MacroCall, FunctionCall, Array, StringConcat}","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059},{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2074},{"krate":0,"index":2077},{"krate":0,"index":2080}],"decl_id":null,"docs":" An expression is the node found in variable block, kwargs and conditions.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":115764,"byte_end":115786,"line_start":130,"line_end":130,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2090},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116287,"byte_end":116291,"line_start":151,"line_end":151,"column_start":12,"column_end":16},"name":"Expr","qualname":"::parser::ast::Expr","value":"Expr { val, negated, filters }","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093}],"decl_id":null,"docs":" An expression is a value that can be negated and followed by\n optional filters\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116343,"byte_end":116346,"line_start":153,"line_end":153,"column_start":9,"column_end":12},"name":"val","qualname":"::parser::ast::Expr::val","value":"parser::ast::ExprVal","parent":{"krate":0,"index":2090},"children":[],"decl_id":null,"docs":" The expression we are evaluating\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2092},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116392,"byte_end":116399,"line_start":155,"line_end":155,"column_start":9,"column_end":16},"name":"negated","qualname":"::parser::ast::Expr::negated","value":"bool","parent":{"krate":0,"index":2090},"children":[],"decl_id":null,"docs":" Is it using `not`?\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2093},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116458,"byte_end":116465,"line_start":157,"line_end":157,"column_start":9,"column_end":16},"name":"filters","qualname":"::parser::ast::Expr::filters","value":"std::vec::Vec<parser::ast::FunctionCall>","parent":{"krate":0,"index":2090},"children":[],"decl_id":null,"docs":" List of filters used on that value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116544,"byte_end":116547,"line_start":162,"line_end":162,"column_start":12,"column_end":15},"name":"new","qualname":"<Expr>::new","value":"fn (val: ExprVal) -> Expr","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic Expr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116678,"byte_end":116689,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"new_negated","qualname":"<Expr>::new_negated","value":"fn (val: ExprVal) -> Expr","parent":null,"children":[],"decl_id":null,"docs":" Create a new negated Expr\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116835,"byte_end":116847,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"with_filters","qualname":"<Expr>::with_filters","value":"fn (val: ExprVal, filters: Vec<FunctionCall>) -> Expr","parent":null,"children":[],"decl_id":null,"docs":" Create a new basic Expr with some filters\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117027,"byte_end":117045,"line_start":177,"line_end":177,"column_start":12,"column_end":30},"name":"has_default_filter","qualname":"<Expr>::has_default_filter","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the expr has a default filter as first filter\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2101},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117269,"byte_end":117273,"line_start":188,"line_end":188,"column_start":12,"column_end":16},"name":"Test","qualname":"::parser::ast::Test","value":"Test { ident, name, args }","parent":null,"children":[{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2104}],"decl_id":null,"docs":" A test node `if my_var is odd`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117322,"byte_end":117327,"line_start":190,"line_end":190,"column_start":9,"column_end":14},"name":"ident","qualname":"::parser::ast::Test::ident","value":"std::string::String","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Which expression is evaluated\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2103},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117370,"byte_end":117374,"line_start":192,"line_end":192,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::Test::name","value":"std::string::String","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Name of the test\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2104},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117435,"byte_end":117439,"line_start":194,"line_end":194,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::Test::args","value":"std::vec::Vec<parser::ast::Expr>","parent":{"krate":0,"index":2101},"children":[],"decl_id":null,"docs":" Any optional arg given to the test\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2112},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117586,"byte_end":117599,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"FilterSection","qualname":"::parser::ast::FilterSection","value":"FilterSection { filter, body }","parent":null,"children":[{"krate":0,"index":2113},{"krate":0,"index":2114}],"decl_id":null,"docs":" A filter section node `{{ filter name(param=\"value\") }} content {{ endfilter }}`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2113},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117640,"byte_end":117646,"line_start":201,"line_end":201,"column_start":9,"column_end":15},"name":"filter","qualname":"::parser::ast::FilterSection::filter","value":"parser::ast::FunctionCall","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" The filter call itsel\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2114},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117694,"byte_end":117698,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::FilterSection::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":2112},"children":[],"decl_id":null,"docs":" The filter body\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2122},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117818,"byte_end":117821,"line_start":208,"line_end":208,"column_start":12,"column_end":15},"name":"Set","qualname":"::parser::ast::Set","value":"Set { key, value, global }","parent":null,"children":[{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":2125}],"decl_id":null,"docs":" Set a variable in the context `{% set val = \"hey\" %}`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2123},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117879,"byte_end":117882,"line_start":210,"line_end":210,"column_start":9,"column_end":12},"name":"key","qualname":"::parser::ast::Set::key","value":"std::string::String","parent":{"krate":0,"index":2122},"children":[],"decl_id":null,"docs":" The name for that value in the context\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2124},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":117928,"byte_end":117933,"line_start":212,"line_end":212,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::ast::Set::value","value":"parser::ast::Expr","parent":{"krate":0,"index":2122},"children":[],"decl_id":null,"docs":" The value to assign\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2125},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118056,"byte_end":118062,"line_start":215,"line_end":215,"column_start":9,"column_end":15},"name":"global","qualname":"::parser::ast::Set::global","value":"bool","parent":{"krate":0,"index":2122},"children":[],"decl_id":null,"docs":" Whether we want to set the variable globally or locally\n global_set is only useful in loops\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2133},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118173,"byte_end":118182,"line_start":220,"line_end":220,"column_start":12,"column_end":21},"name":"MacroCall","qualname":"::parser::ast::MacroCall","value":"MacroCall { namespace, name, args }","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136}],"decl_id":null,"docs":" A call to a namespaced macro `macros::my_macro()`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2134},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118247,"byte_end":118256,"line_start":222,"line_end":222,"column_start":9,"column_end":18},"name":"namespace","qualname":"::parser::ast::MacroCall::namespace","value":"std::string::String","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The namespace we're looking for that macro in\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2135},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118297,"byte_end":118301,"line_start":224,"line_end":224,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::MacroCall::name","value":"std::string::String","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The macro name\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2136},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118366,"byte_end":118370,"line_start":226,"line_end":226,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::MacroCall::args","value":"std::collections::HashMap<std::string::String, parser::ast::Expr>","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" The args for that macro: name -> value\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2144},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118467,"byte_end":118482,"line_start":231,"line_end":231,"column_start":12,"column_end":27},"name":"MacroDefinition","qualname":"::parser::ast::MacroDefinition","value":"MacroDefinition { name, args, body }","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147}],"decl_id":null,"docs":" A Macro definition\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2145},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118516,"byte_end":118520,"line_start":233,"line_end":233,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::MacroDefinition::name","value":"std::string::String","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":" The macro name\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2146},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118602,"byte_end":118606,"line_start":235,"line_end":235,"column_start":9,"column_end":13},"name":"args","qualname":"::parser::ast::MacroDefinition::args","value":"std::collections::HashMap<std::string::String, std::option::Option<parser::ast::Expr>>","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":" The args for that macro: name -> optional default value\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118673,"byte_end":118677,"line_start":237,"line_end":237,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::MacroDefinition::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":2144},"children":[],"decl_id":null,"docs":" The macro content\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2155},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118762,"byte_end":118767,"line_start":242,"line_end":242,"column_start":12,"column_end":17},"name":"Block","qualname":"::parser::ast::Block","value":"Block { name, body }","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157}],"decl_id":null,"docs":" A block definition\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2156},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118801,"byte_end":118805,"line_start":244,"line_end":244,"column_start":9,"column_end":13},"name":"name","qualname":"::parser::ast::Block::name","value":"std::string::String","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" The block name\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2157},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118849,"byte_end":118853,"line_start":246,"line_end":246,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::Block::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" The block content\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2165},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":118963,"byte_end":118970,"line_start":251,"line_end":251,"column_start":12,"column_end":19},"name":"Forloop","qualname":"::parser::ast::Forloop","value":"Forloop { key, value, container, body }","parent":null,"children":[{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169}],"decl_id":null,"docs":" A forloop: can be over values or key/values\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2166},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119059,"byte_end":119062,"line_start":253,"line_end":253,"column_start":9,"column_end":12},"name":"key","qualname":"::parser::ast::Forloop::key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":" Name of the key in the loop (only when iterating on map-like objects)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2167},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119149,"byte_end":119154,"line_start":255,"line_end":255,"column_start":9,"column_end":14},"name":"value","qualname":"::parser::ast::Forloop::value","value":"std::string::String","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":" Name of the local variable for the value in the loop\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2168},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119209,"byte_end":119218,"line_start":257,"line_end":257,"column_start":9,"column_end":18},"name":"container","qualname":"::parser::ast::Forloop::container","value":"parser::ast::Expr","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":" Expression being iterated on\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2169},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119271,"byte_end":119275,"line_start":259,"line_end":259,"column_start":9,"column_end":13},"name":"body","qualname":"::parser::ast::Forloop::body","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":" What's in the forloop itself\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2177},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119394,"byte_end":119396,"line_start":264,"line_end":264,"column_start":12,"column_end":14},"name":"If","qualname":"::parser::ast::If","value":"If { conditions, otherwise }","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"decl_id":null,"docs":" An if/elif/else condition with their respective body\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2178},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119465,"byte_end":119475,"line_start":266,"line_end":266,"column_start":9,"column_end":19},"name":"conditions","qualname":"::parser::ast::If::conditions","value":"std::vec::Vec<(parser::ast::WS, parser::ast::Expr, std::vec::Vec<parser::ast::Node>)>","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" First item if the if, all the ones after are elif\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2179},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119547,"byte_end":119556,"line_start":268,"line_end":268,"column_start":9,"column_end":18},"name":"otherwise","qualname":"::parser::ast::If::otherwise","value":"std::option::Option<(parser::ast::WS, std::vec::Vec<parser::ast::Node>)>","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":" The optional `else` block\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119729,"byte_end":119734,"line_start":275,"line_end":275,"column_start":5,"column_end":10},"name":"Super","qualname":"::parser::ast::Node::Super","value":"Node::Super","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A call to `{{ super() }}` in a block\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119766,"byte_end":119770,"line_start":278,"line_end":278,"column_start":5,"column_end":9},"name":"Text","qualname":"::parser::ast::Node::Text","value":"Node::Text(String)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" Some actual text\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2193},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119808,"byte_end":119821,"line_start":280,"line_end":280,"column_start":5,"column_end":18},"name":"VariableBlock","qualname":"::parser::ast::Node::VariableBlock","value":"Node::VariableBlock(Expr)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A `{{ }}` block\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119882,"byte_end":119897,"line_start":282,"line_end":282,"column_start":5,"column_end":20},"name":"MacroDefinition","qualname":"::parser::ast::Node::MacroDefinition","value":"Node::MacroDefinition(WS, MacroDefinition, WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A `{% macro hello() %}...{% endmacro %}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2201},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120004,"byte_end":120011,"line_start":285,"line_end":285,"column_start":5,"column_end":12},"name":"Extends","qualname":"::parser::ast::Node::Extends","value":"Node::Extends(WS, String)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The `{% extends \"blabla.html\" %}` node, contains the template name\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2205},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120104,"byte_end":120111,"line_start":287,"line_end":287,"column_start":5,"column_end":12},"name":"Include","qualname":"::parser::ast::Node::Include","value":"Node::Include(WS, String)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The `{% include \"blabla.html\" %}` node, contains the template name\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2209},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120180,"byte_end":120191,"line_start":289,"line_end":289,"column_start":5,"column_end":16},"name":"ImportMacro","qualname":"::parser::ast::Node::ImportMacro","value":"Node::ImportMacro(WS, String, String)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The `{% import \"macros.html\" as macros %}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120261,"byte_end":120264,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"Set","qualname":"::parser::ast::Node::Set","value":"Node::Set(WS, Set)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The `{% set val = something %}` tag\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2218},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120336,"byte_end":120339,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"Raw","qualname":"::parser::ast::Node::Raw","value":"Node::Raw(WS, String, WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The text between `{% raw %}` and `{% endraw %}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120451,"byte_end":120464,"line_start":297,"line_end":297,"column_start":5,"column_end":18},"name":"FilterSection","qualname":"::parser::ast::Node::FilterSection","value":"Node::FilterSection(WS, FilterSection, WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A filter section node `{{ filter name(param=\"value\") }} content {{ endfilter }}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2228},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120539,"byte_end":120544,"line_start":299,"line_end":299,"column_start":5,"column_end":10},"name":"Block","qualname":"::parser::ast::Node::Block","value":"Node::Block(WS, Block, WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A `{% block name %}...{% endblock %}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120613,"byte_end":120620,"line_start":301,"line_end":301,"column_start":5,"column_end":12},"name":"Forloop","qualname":"::parser::ast::Node::Forloop","value":"Node::Forloop(WS, Forloop, WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A `{% for i in items %}...{% endfor %}`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120724,"byte_end":120726,"line_start":304,"line_end":304,"column_start":5,"column_end":7},"name":"If","qualname":"::parser::ast::Node::If","value":"Node::If(If, WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" A if/elif/else block, WS for the if/elif/else is directly in the struct\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120771,"byte_end":120776,"line_start":307,"line_end":307,"column_start":5,"column_end":10},"name":"Break","qualname":"::parser::ast::Node::Break","value":"Node::Break(WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The `{% break %}` tag\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":120819,"byte_end":120827,"line_start":309,"line_end":309,"column_start":5,"column_end":13},"name":"Continue","qualname":"::parser::ast::Node::Continue","value":"Node::Continue(WS)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":" The `{% continue %}` tag\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2187},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":119673,"byte_end":119677,"line_start":273,"line_end":273,"column_start":10,"column_end":14},"name":"Node","qualname":"::parser::ast::Node","value":"Node::{Super, Text, VariableBlock, MacroDefinition, Extends, Include, ImportMacro, Set, Raw, FilterSection, Block, Forloop, If, Break, Continue}","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2201},{"krate":0,"index":2205},{"krate":0,"index":2209},{"krate":0,"index":2214},{"krate":0,"index":2218},{"krate":0,"index":2223},{"krate":0,"index":2228},{"krate":0,"index":2233},{"krate":0,"index":2238},{"krate":0,"index":2242},{"krate":0,"index":2245}],"decl_id":null,"docs":" All Tera nodes that can be encountered\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2438},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193160,"byte_end":193168,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"Template","qualname":"::template::Template","value":"Template { name, path, ast, from_extend, macros, imported_macro_files, parent, blocks, parents, blocks_definitions }","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448}],"decl_id":null,"docs":" This is the parsed equivalent of a template file.\n It also does some pre-processing to ensure it does as less as possible at runtime\n Not mean to be used directly.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2439},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193242,"byte_end":193246,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::template::Template::name","value":"std::string::String","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Name of the template, usually very similar to the path\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2440},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193394,"byte_end":193398,"line_start":16,"line_end":16,"column_start":9,"column_end":13},"name":"path","qualname":"::template::Template::path","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Original path of the file. A template doesn't necessarily have\n a file associated with it though so it's optional.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2441},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193469,"byte_end":193472,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"name":"ast","qualname":"::template::Template::ast","value":"std::vec::Vec<parser::ast::Node>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Parsed AST, after whitespace removal\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2442},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193626,"byte_end":193637,"line_start":21,"line_end":21,"column_start":9,"column_end":20},"name":"from_extend","qualname":"::template::Template::from_extend","value":"bool","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Whether this template came from a call to `Tera::extend`, so we do\n not remove it when we are doing a template reload\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2443},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193714,"byte_end":193720,"line_start":24,"line_end":24,"column_start":9,"column_end":15},"name":"macros","qualname":"::template::Template::macros","value":"std::collections::HashMap<std::string::String, parser::ast::MacroDefinition>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Macros defined in that file: name -> definition ast\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2444},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193831,"byte_end":193851,"line_start":26,"line_end":26,"column_start":9,"column_end":29},"name":"imported_macro_files","qualname":"::template::Template::imported_macro_files","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" (filename, namespace) for the macros imported in that file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2445},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":193961,"byte_end":193967,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"name":"parent","qualname":"::template::Template::parent","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Only used during initial parsing. Rendering will use `self.parents`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2446},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":194080,"byte_end":194086,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"blocks","qualname":"::template::Template::blocks","value":"std::collections::HashMap<std::string::String, parser::ast::Block>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" Only used during initial parsing. Rendering will use `self.blocks_definitions`\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2447},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":194266,"byte_end":194273,"line_start":35,"line_end":35,"column_start":9,"column_end":16},"name":"parents","qualname":"::template::Template::parents","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" The full list of parent templates\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2448},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":194776,"byte_end":194794,"line_start":42,"line_end":42,"column_start":9,"column_end":27},"name":"blocks_definitions","qualname":"::template::Template::blocks_definitions","value":"std::collections::HashMap<std::string::String, std::vec::Vec<(std::string::String, parser::ast::Block)>>","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" The definition of all the blocks for the current template and the definition of those blocks\n in parent templates if there are some.\n Needed for super() to work without having to find them each time.\n The type corresponds to the following `block_name -> [(template name, definition)]`\n The order of the Vec is from the first in hierarchy to the current template and the template\n name is needed in order to load its macros if necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":194905,"byte_end":194908,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<Template>::new","value":"fn (tpl_name: &str, tpl_path: Option<String>, input: &str) -> Result<Template>","parent":null,"children":[],"decl_id":null,"docs":" Parse the template string given\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":199413,"byte_end":199417,"line_start":23,"line_end":23,"column_start":12,"column_end":16},"name":"Tera","qualname":"::tera::Tera","value":"Tera { templates, filters, testers, global_functions, autoescape_suffixes }","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" The main point of interaction in this library.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":561},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":199571,"byte_end":199580,"line_start":28,"line_end":28,"column_start":9,"column_end":18},"name":"templates","qualname":"::tera::Tera::templates","value":"std::collections::HashMap<std::string::String, template::Template>","parent":{"krate":0,"index":559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":562},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":199636,"byte_end":199643,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"filters","qualname":"::tera::Tera::filters","value":"std::collections::HashMap<std::string::String, fn(serde_json::Value, std::collections::HashMap<std::string::String, serde_json::Value>) -> std::result::Result<serde_json::Value, errors::Error>>","parent":{"krate":0,"index":559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":563},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":199699,"byte_end":199706,"line_start":32,"line_end":32,"column_start":9,"column_end":16},"name":"testers","qualname":"::tera::Tera::testers","value":"std::collections::HashMap<std::string::String, fn(std::option::Option<serde_json::Value>, std::vec::Vec<serde_json::Value>) -> std::result::Result<bool, errors::Error>>","parent":{"krate":0,"index":559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":564},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":199762,"byte_end":199778,"line_start":34,"line_end":34,"column_start":9,"column_end":25},"name":"global_functions","qualname":"::tera::Tera::global_functions","value":"std::collections::HashMap<std::string::String, std::boxed::Box<(dyn std::ops::Fn(std::collections::HashMap<std::string::String, serde_json::Value>) -> std::result::Result<serde_json::Value, errors::Error> + std::marker::Send + std::marker::Sync + 'static)>>","parent":{"krate":0,"index":559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":565},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":199942,"byte_end":199961,"line_start":38,"line_end":38,"column_start":9,"column_end":28},"name":"autoescape_suffixes","qualname":"::tera::Tera::autoescape_suffixes","value":"std::vec::Vec<&'static str>","parent":{"krate":0,"index":559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":201329,"byte_end":201332,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<Tera>::new","value":"fn (dir: &str) -> Result<Tera>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of Tera, containing all the parsed templates found in the `dir` glob","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":202126,"byte_end":202131,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"parse","qualname":"<Tera>::parse","value":"fn (dir: &str) -> Result<Tera>","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of Tera, containing all the parsed templates found in the `dir` glob\n The difference with `Tera::new` is that it won't build the inheritance chains automatically\n so you are free to modify the templates if you need to.\n You will NOT get a working Tera instance using `Tera::parse`, you will need to call\n `tera.build_inheritance_chains()` to make it usable","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":205607,"byte_end":205631,"line_start":188,"line_end":188,"column_start":12,"column_end":36},"name":"build_inheritance_chains","qualname":"<Tera>::build_inheritance_chains","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" We need to know the hierarchy of templates to be able to render multiple extends level\n This happens at compile-time to avoid checking it every time we want to render a template\n This also checks for soundness issues in the inheritance chains, such as missing template or\n circular extends.\n It also builds the block inheritance chain and detects when super() is called in a place\n where it can't possibly work","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":209243,"byte_end":209260,"line_start":277,"line_end":277,"column_start":12,"column_end":29},"name":"check_macro_files","qualname":"<Tera>::check_macro_files","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" We keep track of macro files loaded in each Template so we can know whether one or them\n is missing and error accordingly before the user tries to render a template.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":210447,"byte_end":210453,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"name":"render","qualname":"<Tera>::render","value":"fn <T> (&self, template_name: &str, data: &T) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Renders a Tera template given an object that implements `Serialize`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":211746,"byte_end":211753,"line_start":339,"line_end":339,"column_start":12,"column_end":19},"name":"one_off","qualname":"<Tera>::one_off","value":"fn <T> (input: &str, data: &T, autoescape: bool) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Renders a one off template (for example a template coming from a user input) given a `Context`\n or an object that implements `Serialize`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":212091,"byte_end":212103,"line_start":351,"line_end":351,"column_start":12,"column_end":24},"name":"get_template","qualname":"<Tera>::get_template","value":"fn (&self, template_name: &str) -> Result<&Template>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":212070,"byte_end":212079,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":212727,"byte_end":212743,"line_start":367,"line_end":367,"column_start":12,"column_end":28},"name":"add_raw_template","qualname":"<Tera>::add_raw_template","value":"fn (&mut self, name: &str, content: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a single template to the Tera instance","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":213440,"byte_end":213457,"line_start":387,"line_end":387,"column_start":12,"column_end":29},"name":"add_raw_templates","qualname":"<Tera>::add_raw_templates","value":"fn (&mut self, templates: Vec<(&str, &str)>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add all the templates given to the Tera instance","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":214477,"byte_end":214494,"line_start":411,"line_end":411,"column_start":12,"column_end":29},"name":"add_template_file","qualname":"<Tera>::add_template_file","value":"fn <P> (&mut self, path: P, name: Option<&str>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add a single template from a path to the Tera instance. The default name for the template is\n the path given, but this can be renamed with the `name` parameter","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":215286,"byte_end":215304,"line_start":430,"line_end":430,"column_start":12,"column_end":30},"name":"add_template_files","qualname":"<Tera>::add_template_files","value":"fn <P> (&mut self, files: Vec<(P, Option<&str>)>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Add several templates from paths to the Tera instance. The default name for the template is\n the path given, but this can be renamed with the second parameter of the tuple","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":215631,"byte_end":215641,"line_start":444,"line_end":444,"column_start":12,"column_end":22},"name":"get_filter","qualname":"<Tera>::get_filter","value":"fn (&self, filter_name: &str) -> Result<&FilterFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":215610,"byte_end":215619,"line_start":443,"line_end":443,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216080,"byte_end":216095,"line_start":458,"line_end":458,"column_start":12,"column_end":27},"name":"register_filter","qualname":"<Tera>::register_filter","value":"fn (&mut self, name: &str, filter: FilterFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register a filter with Tera.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216245,"byte_end":216255,"line_start":464,"line_end":464,"column_start":12,"column_end":22},"name":"get_tester","qualname":"<Tera>::get_tester","value":"fn (&self, tester_name: &str) -> Result<&TesterFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216224,"byte_end":216233,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216687,"byte_end":216702,"line_start":478,"line_end":478,"column_start":12,"column_end":27},"name":"register_tester","qualname":"<Tera>::register_tester","value":"fn (&mut self, name: &str, tester: TesterFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register a tester with Tera.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216926,"byte_end":216945,"line_start":485,"line_end":485,"column_start":12,"column_end":31},"name":"get_global_function","qualname":"<Tera>::get_global_function","value":"fn (&self, fn_name: &str) -> Result<&GlobalFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216831,"byte_end":216840,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.11.16\", note = \"Use `get_function` instead\")","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":216845,"byte_end":216914,"line_start":484,"line_end":484,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":217203,"byte_end":217215,"line_start":494,"line_end":494,"column_start":12,"column_end":24},"name":"get_function","qualname":"<Tera>::get_function","value":"fn (&self, fn_name: &str) -> Result<&GlobalFn>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":217182,"byte_end":217191,"line_start":493,"line_end":493,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":217753,"byte_end":217777,"line_start":508,"line_end":508,"column_start":12,"column_end":36},"name":"register_global_function","qualname":"<Tera>::register_global_function","value":"fn (&mut self, name: &str, function: GlobalFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register a global function with Tera.","sig":null,"attributes":[{"value":"deprecated(since = \"0.11.16\", note = \"Use `register_function` instead\")","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":217667,"byte_end":217741,"line_start":507,"line_end":507,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":218121,"byte_end":218138,"line_start":519,"line_end":519,"column_start":12,"column_end":29},"name":"register_function","qualname":"<Tera>::register_function","value":"fn (&mut self, name: &str, function: GlobalFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register a function with Tera.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":221546,"byte_end":221559,"line_start":594,"line_end":594,"column_start":12,"column_end":25},"name":"autoescape_on","qualname":"<Tera>::autoescape_on","value":"fn (&mut self, suffixes: Vec<&'static str>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Select which suffix(es) to automatically do HTML escaping on,\n`[\".html\", \".htm\", \".xml\"]` by default.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":221698,"byte_end":221711,"line_start":600,"line_end":600,"column_start":12,"column_end":25},"name":"get_escape_fn","qualname":"<Tera>::get_escape_fn","value":"fn (&self) -> &EscapeFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":221677,"byte_end":221686,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":222360,"byte_end":222373,"line_start":618,"line_end":618,"column_start":12,"column_end":25},"name":"set_escape_fn","qualname":"<Tera>::set_escape_fn","value":"fn (&mut self, function: EscapeFn) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set user-defined function which applied to a rendered content.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":222522,"byte_end":222537,"line_start":623,"line_end":623,"column_start":12,"column_end":27},"name":"reset_escape_fn","qualname":"<Tera>::reset_escape_fn","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reset escape function to default `tera::escape_html`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":222978,"byte_end":222989,"line_start":633,"line_end":633,"column_start":12,"column_end":23},"name":"full_reload","qualname":"<Tera>::full_reload","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Re-parse all templates found in the glob given to Tera\n Use this when you are watching a directory and want to reload everything,\n for example when a file is added.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":223726,"byte_end":223732,"line_start":653,"line_end":653,"column_start":12,"column_end":18},"name":"extend","qualname":"<Tera>::extend","value":"fn (&mut self, other: &Tera) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Use that method when you want to add a given Tera instance templates/filters/testers\n to your own. If a template/filter/tester with the same name already exists in your instance,\n it will not be overwritten.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/utils.rs","byte_start":236274,"byte_end":236285,"line_start":18,"line_end":18,"column_start":8,"column_end":19},"name":"escape_html","qualname":"::utils::escape_html","value":"fn (input: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escape HTML following [OWASP](https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet)","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/utils.rs","byte_start":236209,"byte_end":236218,"line_start":17,"line_end":17,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/filters/string.rs","byte_start":40805,"byte_end":40817,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/filters/string.rs","byte_start":40952,"byte_end":40964,"line_start":127,"line_end":127,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":69304,"byte_end":69311,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70833,"byte_end":70840,"line_start":67,"line_end":67,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70924,"byte_end":70931,"line_start":73,"line_end":73,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":71348,"byte_end":71353,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":72238,"byte_end":72243,"line_start":118,"line_end":118,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":72524,"byte_end":72529,"line_start":132,"line_end":132,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113113,"byte_end":113115,"line_start":13,"line_end":13,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113406,"byte_end":113418,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114073,"byte_end":114086,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116494,"byte_end":116498,"line_start":160,"line_end":160,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/call_stack.rs","byte_start":132247,"byte_end":132258,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/call_stack.rs","byte_start":132877,"byte_end":132886,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/for_loop.rs","byte_start":140557,"byte_end":140570,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/for_loop.rs","byte_start":142263,"byte_end":142270,"line_start":79,"line_end":79,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/macros.rs","byte_start":146068,"byte_end":146083,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/processor.rs","byte_start":153922,"byte_end":153931,"line_start":114,"line_end":114,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/stack_frame.rs","byte_start":185116,"byte_end":185126,"line_start":60,"line_end":60,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/mod.rs","byte_start":129098,"byte_end":129106,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":189969,"byte_end":189979,"line_start":8,"line_end":8,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190168,"byte_end":190178,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190196,"byte_end":190206,"line_start":20,"line_end":20,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190573,"byte_end":190583,"line_start":34,"line_end":34,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190946,"byte_end":190952,"line_start":47,"line_end":47,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":191182,"byte_end":191190,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":191612,"byte_end":191621,"line_start":72,"line_end":72,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":192137,"byte_end":192146,"line_start":90,"line_end":90,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":194843,"byte_end":194851,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":200034,"byte_end":200038,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":575},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":224525,"byte_end":224529,"line_start":679,"line_end":679,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":225120,"byte_end":225124,"line_start":699,"line_end":699,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/mod.rs","byte_start":74494,"byte_end":74497,"line_start":18,"line_end":18,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":226}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/filters/string.rs","byte_start":40805,"byte_end":40817,"line_start":120,"line_end":120,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":661},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/builtins/filters/string.rs","byte_start":40952,"byte_end":40964,"line_start":127,"line_end":127,"column_start":20,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":661},"to":{"krate":48,"index":17}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":69304,"byte_end":69311,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":666},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70833,"byte_end":70840,"line_start":67,"line_end":67,"column_start":18,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":666},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":70924,"byte_end":70931,"line_start":73,"line_end":73,"column_start":20,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":666},"to":{"krate":18,"index":1637}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":71348,"byte_end":71353,"line_start":89,"line_end":89,"column_start":22,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":19,"index":2094},"to":{"krate":0,"index":201}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":72238,"byte_end":72243,"line_start":118,"line_end":118,"column_start":22,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":19,"index":2094},"to":{"krate":0,"index":205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/context.rs","byte_start":72524,"byte_end":72529,"line_start":132,"line_end":132,"column_start":22,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":19,"index":2094},"to":{"krate":0,"index":209}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113113,"byte_end":113115,"line_start":13,"line_end":13,"column_start":18,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1952},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":113406,"byte_end":113418,"line_start":34,"line_end":34,"column_start":23,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1963},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":114073,"byte_end":114086,"line_start":71,"line_end":71,"column_start":23,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1981},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/parser/ast.rs","byte_start":116494,"byte_end":116498,"line_start":160,"line_end":160,"column_start":6,"column_end":10},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2090},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/call_stack.rs","byte_start":132247,"byte_end":132258,"line_start":19,"line_end":19,"column_start":10,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/call_stack.rs","byte_start":132877,"byte_end":132886,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/for_loop.rs","byte_start":140557,"byte_end":140570,"line_start":36,"line_end":36,"column_start":10,"column_end":23},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/for_loop.rs","byte_start":142263,"byte_end":142270,"line_start":79,"line_end":79,"column_start":10,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2335},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/macros.rs","byte_start":146068,"byte_end":146083,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/processor.rs","byte_start":153922,"byte_end":153931,"line_start":114,"line_end":114,"column_start":10,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/stack_frame.rs","byte_start":185116,"byte_end":185126,"line_start":60,"line_end":60,"column_start":10,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/renderer/mod.rs","byte_start":129098,"byte_end":129106,"line_start":31,"line_end":31,"column_start":10,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":189969,"byte_end":189979,"line_start":8,"line_end":8,"column_start":6,"column_end":16},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190168,"byte_end":190178,"line_start":18,"line_end":18,"column_start":13,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2394},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190196,"byte_end":190206,"line_start":20,"line_end":20,"column_start":14,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2394},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190478,"byte_end":190481,"line_start":30,"line_end":30,"column_start":23,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2065},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190484,"byte_end":190489,"line_start":30,"line_end":30,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190492,"byte_end":190497,"line_start":30,"line_end":30,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2163},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190573,"byte_end":190583,"line_start":34,"line_end":34,"column_start":21,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2394},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":190946,"byte_end":190952,"line_start":47,"line_end":47,"column_start":21,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":5,"index":4320},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":191182,"byte_end":191190,"line_start":55,"line_end":55,"column_start":21,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2411},"to":{"krate":0,"index":484}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":191612,"byte_end":191621,"line_start":72,"line_end":72,"column_start":21,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/sort_utils.rs","byte_start":192137,"byte_end":192146,"line_start":90,"line_end":90,"column_start":38,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2432},"to":{"krate":0,"index":508}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/template.rs","byte_start":194843,"byte_end":194851,"line_start":45,"line_end":45,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":200034,"byte_end":200038,"line_start":43,"line_end":43,"column_start":6,"column_end":10},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":224525,"byte_end":224529,"line_start":679,"line_end":679,"column_start":18,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":559},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/tera-0.11.20/src/tera.rs","byte_start":225120,"byte_end":225124,"line_start":699,"line_end":699,"column_start":21,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":559},"to":{"krate":2,"index":7442}}]}