{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rocket","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"private-cookies\"","-C","metadata=889ec1d59403d33f","-C","extra-filename=-889ec1d59403d33f","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--extern","atty=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libatty-20ec60795f9eb63f.rmeta","--extern","base64=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libbase64-fbe7fec95bee97f0.rmeta","--extern","log=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/liblog-09e83b28bcac5b0d.rmeta","--extern","memchr=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libmemchr-6437d070eb76c140.rmeta","--extern","num_cpus=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libnum_cpus-b8fb8b5b85e853a9.rmeta","--extern","pear=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libpear-244ca94271cec746.rmeta","--extern","rocket_codegen=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/librocket_codegen-6906e47c559ce6b0.so","--extern","rocket_http=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/librocket_http-c6c07ce1f84b458c.rmeta","--extern","state=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libstate-099a6e05c9d9b6f7.rmeta","--extern","time=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libtime-133b162eb05fae41.rmeta","--extern","toml=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libtoml-483250eb724e3b84.rmeta","--extern","yansi=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libyansi-e594455698afd999.rmeta","--cap-lints","allow","-L","native=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/build/ring-9775fe6aaf99593c/out","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/librocket-889ec1d59403d33f.rmeta"},"prelude":{"crate_id":{"name":"rocket","disambiguator":[2031726640699572400,13507362416582144744]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"<::alloc::macros::format macros>","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":15,"id":{"name":"rocket_codegen","disambiguator":[9785173560769076381,2929939678964964831]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":16,"id":{"name":"rocket_http","disambiguator":[1134225220371814917,17426977998138513813]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":17,"id":{"name":"pear","disambiguator":[18247081922896706498,6450665917479550090]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":18,"id":{"name":"pear_codegen","disambiguator":[15405620718590437849,15422168369784244211]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":19,"id":{"name":"percent_encoding","disambiguator":[4821450245090839808,1565117168875151916]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":20,"id":{"name":"smallvec","disambiguator":[5240122063181865918,4175801499735234232]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":21,"id":{"name":"cookie","disambiguator":[12252739187106416747,14908535683656561778]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":22,"id":{"name":"url","disambiguator":[1980568042705648263,10246703420563967693]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":23,"id":{"name":"matches","disambiguator":[6410930627264028859,13619116456228542381]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":24,"id":{"name":"idna","disambiguator":[10378433206922792260,13657374398210597147]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":25,"id":{"name":"unicode_bidi","disambiguator":[11705279506054357711,18421000031372589156]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":26,"id":{"name":"unicode_normalization","disambiguator":[12034709842482363358,6344861357375427152]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":27,"id":{"name":"time","disambiguator":[17110143350307628242,3335504035279660345]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":28,"id":{"name":"libc","disambiguator":[11017835551169623119,13275532129668103129]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":29,"id":{"name":"ring","disambiguator":[11783639620217896589,2123942081442498591]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":30,"id":{"name":"lazy_static","disambiguator":[3602112774424056391,9172973058702272592]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":31,"id":{"name":"untrusted","disambiguator":[10286470288128969153,13584830343341793702]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":32,"id":{"name":"base64","disambiguator":[6558137000883203684,13053550833040180612]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":33,"id":{"name":"byteorder","disambiguator":[16929710598040131471,9781611388421019446]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":34,"id":{"name":"safemem","disambiguator":[9110549664141974230,14371468164544854285]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":35,"id":{"name":"indexmap","disambiguator":[2800041353741556846,13787611938293833366]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":36,"id":{"name":"state","disambiguator":[820550998208493461,7991458591439209322]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":37,"id":{"name":"unicode_xid","disambiguator":[13991982847358129371,16035509806518684361]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":38,"id":{"name":"hyper","disambiguator":[13955770151019591687,9476051021984939998]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":39,"id":{"name":"unicase","disambiguator":[9065106230765904763,8927079882701914365]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":40,"id":{"name":"httparse","disambiguator":[13764159085015637075,16577902481667488942]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":41,"id":{"name":"num_cpus","disambiguator":[16035676055193682801,12694451882209448723]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":42,"id":{"name":"traitobject","disambiguator":[9047779350401953915,3991299006244966798]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":43,"id":{"name":"typeable","disambiguator":[6949166364781293425,9403763786485864315]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":44,"id":{"name":"language_tags","disambiguator":[15576798282351276239,8904952451567614274]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":45,"id":{"name":"mime","disambiguator":[986505519791900187,4416595615305269125]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":46,"id":{"name":"log","disambiguator":[12020646139856624836,970099694631424138]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":47,"id":{"name":"log","disambiguator":[5620416260777549947,11435147764548135674]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":48,"id":{"name":"cfg_if","disambiguator":[13847854054909782822,7162271722131127361]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":49,"id":{"name":"yansi","disambiguator":[4524229742435039814,7006629198954008757]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":50,"id":{"name":"toml","disambiguator":[2344336160138096847,14844585539949826498]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":51,"id":{"name":"serde","disambiguator":[10372407434365742225,11121587653223998768]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":52,"id":{"name":"memchr","disambiguator":[12160049870115632086,12629332403044151026]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":53,"id":{"name":"base64","disambiguator":[10615808937852175665,10290537651751936661]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","num":54,"id":{"name":"atty","disambiguator":[451452232839695205,2017992581268413050]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":0,"byte_end":4867,"line_start":1,"line_end":164,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3347,"byte_end":3348,"line_start":100,"line_end":100,"column_start":40,"column_end":41},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/mod.rs","byte_start":15351,"byte_end":15364,"line_start":104,"line_end":104,"column_start":25,"column_end":38},"alias_span":null,"name":"LocalResponse","value":"","parent":{"krate":0,"index":71}},{"kind":"Use","ref_id":{"krate":0,"index":92},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/mod.rs","byte_start":15366,"byte_end":15378,"line_start":104,"line_end":104,"column_start":40,"column_end":52},"alias_span":null,"name":"LocalRequest","value":"","parent":{"krate":0,"index":71}},{"kind":"Use","ref_id":{"krate":0,"index":151},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/mod.rs","byte_start":15403,"byte_end":15409,"line_start":105,"line_end":105,"column_start":23,"column_end":29},"alias_span":null,"name":"Client","value":"","parent":{"krate":0,"index":71}},{"kind":"Use","ref_id":{"krate":15,"index":541},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46831,"byte_end":46839,"line_start":13,"line_end":13,"column_start":41,"column_end":49},"alias_span":null,"name":"FromForm","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":15,"index":540},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46841,"byte_end":46854,"line_start":13,"line_end":13,"column_start":51,"column_end":64},"alias_span":null,"name":"FromFormValue","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2176},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46881,"byte_end":46888,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":622},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46919,"byte_end":46930,"line_start":16,"line_end":16,"column_start":30,"column_end":41},"alias_span":null,"name":"FromRequest","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46932,"byte_end":46939,"line_start":16,"line_end":16,"column_start":43,"column_end":50},"alias_span":null,"name":"Outcome","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46964,"byte_end":46973,"line_start":17,"line_end":17,"column_start":23,"column_end":32},"alias_span":null,"name":"FromParam","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":46975,"byte_end":46987,"line_start":17,"line_end":17,"column_start":34,"column_end":46},"alias_span":null,"name":"FromSegments","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47011,"byte_end":47019,"line_start":18,"line_end":18,"column_start":22,"column_end":30},"alias_span":null,"name":"FromForm","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":461},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47021,"byte_end":47034,"line_start":18,"line_end":18,"column_start":32,"column_end":45},"alias_span":null,"name":"FromFormValue","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2500},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47058,"byte_end":47062,"line_start":19,"line_end":19,"column_start":22,"column_end":26},"alias_span":null,"name":"Form","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2444},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47064,"byte_end":47075,"line_start":19,"line_end":19,"column_start":28,"column_end":39},"alias_span":null,"name":"LenientForm","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2313},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47077,"byte_end":47086,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"alias_span":null,"name":"FormItems","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2324},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47088,"byte_end":47096,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"FormItem","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47120,"byte_end":47129,"line_start":20,"line_end":20,"column_start":22,"column_end":31},"alias_span":null,"name":"FormError","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2451},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47131,"byte_end":47145,"line_start":20,"line_end":20,"column_start":33,"column_end":47},"alias_span":null,"name":"FormParseError","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2483},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47147,"byte_end":47160,"line_start":20,"line_end":20,"column_start":49,"column_end":62},"alias_span":null,"name":"FormDataError","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2507},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47184,"byte_end":47189,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":2542},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47213,"byte_end":47218,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":710},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47220,"byte_end":47229,"line_start":22,"line_end":22,"column_start":30,"column_end":39},"alias_span":null,"name":"FromQuery","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":1055},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":47273,"byte_end":47285,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"alias_span":null,"name":"FlashMessage","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":15,"index":542},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164011,"byte_end":164020,"line_start":34,"line_end":34,"column_start":40,"column_end":49},"alias_span":null,"name":"Responder","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":2585},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164048,"byte_end":164056,"line_start":36,"line_end":36,"column_start":26,"column_end":34},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":949},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164058,"byte_end":164073,"line_start":36,"line_end":36,"column_start":36,"column_end":51},"alias_span":null,"name":"ResponseBuilder","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":2564},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164075,"byte_end":164079,"line_start":36,"line_end":36,"column_start":53,"column_end":57},"alias_span":null,"name":"Body","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164081,"byte_end":164099,"line_start":36,"line_end":36,"column_start":59,"column_end":77},"alias_span":null,"name":"DEFAULT_CHUNK_SIZE","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164127,"byte_end":164136,"line_start":37,"line_end":37,"column_start":26,"column_end":35},"alias_span":null,"name":"Responder","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":2552},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164162,"byte_end":164170,"line_start":38,"line_end":38,"column_start":25,"column_end":33},"alias_span":null,"name":"Redirect","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":2593},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164193,"byte_end":164198,"line_start":39,"line_end":39,"column_start":22,"column_end":27},"alias_span":null,"name":"Flash","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":2558},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164226,"byte_end":164235,"line_start":40,"line_end":40,"column_start":27,"column_end":36},"alias_span":null,"name":"NamedFile","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":900},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164259,"byte_end":164265,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":2602},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164305,"byte_end":164312,"line_start":42,"line_end":42,"column_start":39,"column_end":46},"alias_span":null,"name":"Content","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":3024},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275728,"byte_end":275734,"line_start":200,"line_end":200,"column_start":30,"column_end":36},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":50,"index":31},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275758,"byte_end":275763,"line_start":201,"line_end":201,"column_start":23,"column_end":28},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":50,"index":32},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275765,"byte_end":275770,"line_start":201,"line_end":201,"column_start":30,"column_end":35},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":50,"index":1184},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275772,"byte_end":275777,"line_start":201,"line_end":201,"column_start":37,"column_end":42},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":50,"index":1283},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275779,"byte_end":275787,"line_start":201,"line_end":201,"column_start":44,"column_end":52},"alias_span":null,"name":"Datetime","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":2868},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275811,"byte_end":275822,"line_start":202,"line_end":202,"column_start":22,"column_end":33},"alias_span":null,"name":"ConfigError","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":2913},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275851,"byte_end":275862,"line_start":203,"line_end":203,"column_start":28,"column_end":39},"alias_span":null,"name":"Environment","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":2932},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275886,"byte_end":275892,"line_start":204,"line_end":204,"column_start":23,"column_end":29},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":2955},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275917,"byte_end":275930,"line_start":205,"line_end":205,"column_start":24,"column_end":37},"alias_span":null,"name":"ConfigBuilder","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":2154},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":275948,"byte_end":275960,"line_start":206,"line_end":206,"column_start":17,"column_end":29},"alias_span":null,"name":"LoggingLevel","value":"","parent":{"krate":0,"index":1231}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379214,"byte_end":379218,"line_start":8,"line_end":8,"column_start":21,"column_end":25},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1569},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379247,"byte_end":379257,"line_start":9,"line_end":9,"column_start":28,"column_end":38},"alias_span":null,"name":"DataStream","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1636},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379285,"byte_end":379293,"line_start":10,"line_end":10,"column_start":27,"column_end":35},"alias_span":null,"name":"FromData","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1650},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379295,"byte_end":379309,"line_start":10,"line_end":10,"column_start":37,"column_end":51},"alias_span":null,"name":"FromDataSimple","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1608},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379311,"byte_end":379318,"line_start":10,"line_end":10,"column_start":53,"column_end":60},"alias_span":null,"name":"Outcome","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1619},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379320,"byte_end":379329,"line_start":10,"line_end":10,"column_start":62,"column_end":71},"alias_span":null,"name":"Transform","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1633},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":379331,"byte_end":379342,"line_start":10,"line_end":10,"column_start":73,"column_end":84},"alias_span":null,"name":"Transformed","value":"","parent":{"krate":0,"index":1512}},{"kind":"Use","ref_id":{"krate":0,"index":1768},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":425803,"byte_end":425808,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"alias_span":null,"name":"AdHoc","value":"","parent":{"krate":0,"index":1728}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":425836,"byte_end":425840,"line_start":58,"line_end":58,"column_start":27,"column_end":31},"alias_span":null,"name":"Info","value":"","parent":{"krate":0,"index":1728}},{"kind":"Use","ref_id":{"krate":0,"index":3055},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":425842,"byte_end":425846,"line_start":58,"line_end":58,"column_start":33,"column_end":37},"alias_span":null,"name":"Kind","value":"","parent":{"krate":0,"index":1728}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3347,"byte_end":3348,"line_start":100,"line_end":100,"column_start":40,"column_end":41},"alias_span":null,"name":"*","value":"ContentType, Cookie, Status, HeaderMap, MediaType, RawStr, Header, private, route, StatusClass, Accept, uri, Method, hyper, Cookies, uncased, ext","parent":{"krate":0,"index":1876}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/mod.rs","byte_start":463471,"byte_end":463476,"line_start":6,"line_end":6,"column_start":22,"column_end":27},"alias_span":null,"name":"Route","value":"","parent":{"krate":0,"index":1878}},{"kind":"Use","ref_id":{"krate":0,"index":2585},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4205,"byte_end":4213,"line_start":144,"line_end":144,"column_start":34,"column_end":42},"alias_span":null,"name":"Response","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1705},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4248,"byte_end":4255,"line_start":145,"line_end":145,"column_start":34,"column_end":41},"alias_span":null,"name":"Handler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1720},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4257,"byte_end":4269,"line_start":145,"line_end":145,"column_start":43,"column_end":55},"alias_span":null,"name":"ErrorHandler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2086},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4305,"byte_end":4320,"line_start":146,"line_end":146,"column_start":34,"column_end":49},"alias_span":null,"name":"StaticRouteInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2093},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4322,"byte_end":4337,"line_start":146,"line_end":146,"column_start":51,"column_end":66},"alias_span":null,"name":"StaticCatchInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2815},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4372,"byte_end":4379,"line_start":147,"line_end":147,"column_start":33,"column_end":40},"alias_span":null,"name":"Outcome","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1539},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4410,"byte_end":4414,"line_start":148,"line_end":148,"column_start":30,"column_end":34},"alias_span":null,"name":"Data","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2932},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4447,"byte_end":4453,"line_start":149,"line_end":149,"column_start":32,"column_end":38},"alias_span":null,"name":"Config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3091},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4471,"byte_end":4476,"line_start":150,"line_end":150,"column_start":17,"column_end":22},"alias_span":null,"name":"Route","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2176},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4496,"byte_end":4503,"line_start":151,"line_end":151,"column_start":19,"column_end":26},"alias_span":null,"name":"Request","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2507},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4505,"byte_end":4510,"line_start":151,"line_end":151,"column_start":28,"column_end":33},"alias_span":null,"name":"State","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2103},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4530,"byte_end":4537,"line_start":152,"line_end":152,"column_start":18,"column_end":25},"alias_span":null,"name":"Catcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2022},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4555,"byte_end":4561,"line_start":153,"line_end":153,"column_start":17,"column_end":23},"alias_span":null,"name":"Rocket","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":0,"byte_end":4867,"line_start":1,"line_end":164,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":71},{"krate":0,"index":195},{"krate":0,"index":761},{"krate":0,"index":1151},{"krate":0,"index":1231},{"krate":0,"index":1512},{"krate":0,"index":1694},{"krate":0,"index":1728},{"krate":0,"index":1832},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1975},{"krate":0,"index":2074},{"krate":0,"index":2096},{"krate":0,"index":2130},{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2140},{"krate":0,"index":2143},{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153}],"decl_id":null,"docs":" # Rocket - Core API Documentation","sig":null,"attributes":[{"value":"feature(specialization)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"feature(decl_macro)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":28,"byte_end":51,"line_start":2,"line_end":2,"column_start":1,"column_end":24}},{"value":"feature(try_trait)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":52,"byte_end":74,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"feature(never_type)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":75,"byte_end":98,"line_start":4,"line_end":4,"column_start":1,"column_end":24}},{"value":"feature(proc_macro_hygiene)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":99,"byte_end":130,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"feature(crate_visibility_modifier)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":131,"byte_end":169,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"feature(label_break_value)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":170,"byte_end":200,"line_start":7,"line_end":7,"column_start":1,"column_end":31}},{"value":"recursion_limit = \"256\"","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":202,"byte_end":227,"line_start":9,"line_end":9,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"logger","qualname":"::logger","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":2154},{"krate":0,"index":2170},{"krate":0,"index":2168},{"krate":0,"index":2166},{"krate":0,"index":2164},{"krate":0,"index":2163},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175}],"decl_id":null,"docs":" Rocket's logging infrastructure.\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3671,"byte_end":3683,"line_start":116,"line_end":116,"column_start":16,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5254,"byte_end":5262,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Critical","qualname":"::logger::LoggingLevel::Critical","value":"LoggingLevel::Critical","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":" Only shows errors, warnings, and launch information.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5329,"byte_end":5335,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Normal","qualname":"::logger::LoggingLevel::Normal","value":"LoggingLevel::Normal","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":" Shows everything except debug and trace information.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5367,"byte_end":5372,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Debug","qualname":"::logger::LoggingLevel::Debug","value":"LoggingLevel::Debug","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":" Shows everything.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2161},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5401,"byte_end":5404,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Off","qualname":"::logger::LoggingLevel::Off","value":"LoggingLevel::Off","parent":{"krate":0,"index":2154},"children":[],"decl_id":null,"docs":" Shows nothing.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2154},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5174,"byte_end":5186,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"LoggingLevel","qualname":"::logger::LoggingLevel","value":"LoggingLevel::{Critical, Normal, Debug, Off}","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161}],"decl_id":null,"docs":" Defines the different levels for log messages.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":69},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":11690,"byte_end":11694,"line_start":214,"line_end":214,"column_start":8,"column_end":12},"name":"init","qualname":"::logger::init","value":"fn (level: LoggingLevel) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2172},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":12053,"byte_end":12058,"line_start":226,"line_end":226,"column_start":24,"column_end":29},"name":"error","qualname":"::logger::error","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":11939,"byte_end":11956,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2173},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":12091,"byte_end":12097,"line_start":227,"line_end":227,"column_start":24,"column_end":30},"name":"error_","qualname":"::logger::error_","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":11939,"byte_end":11956,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2174},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":12131,"byte_end":12135,"line_start":228,"line_end":228,"column_start":24,"column_end":28},"name":"warn","qualname":"::logger::warn","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":11939,"byte_end":11956,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":2175},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":12167,"byte_end":12172,"line_start":229,"line_end":229,"column_start":24,"column_end":29},"name":"warn_","qualname":"::logger::warn_","value":"fn (msg: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":11939,"byte_end":11956,"line_start":221,"line_end":221,"column_start":24,"column_end":41}}]},{"kind":"Mod","id":{"krate":0,"index":71},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"local","qualname":"::local","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/mod.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":142},{"krate":0,"index":191},{"krate":0,"index":194}],"decl_id":null,"docs":" Structures for local dispatching of requests, primarily for testing.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":17721,"byte_end":17733,"line_start":68,"line_end":68,"column_start":12,"column_end":24},"name":"LocalRequest","qualname":"::local::request::LocalRequest","value":"LocalRequest {  }","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"decl_id":null,"docs":" A structure representing a local request as created by [`Client`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":20923,"byte_end":20928,"line_start":138,"line_end":138,"column_start":12,"column_end":17},"name":"inner","qualname":"<LocalRequest>::inner","value":"fn (&self) -> &Request<'c>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inner `Request` as seen by Rocket.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":20902,"byte_end":20911,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":22257,"byte_end":22263,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"header","qualname":"<LocalRequest>::header","value":"fn <H> (mut self, header: H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a header to this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":22236,"byte_end":22245,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":22817,"byte_end":22827,"line_start":199,"line_end":199,"column_start":12,"column_end":22},"name":"add_header","qualname":"<LocalRequest>::add_header","value":"fn <H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a header to this request without consuming `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":22796,"byte_end":22805,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":23339,"byte_end":23345,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"remote","qualname":"<LocalRequest>::remote","value":"fn (mut self, address: SocketAddr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the remote address of this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":23318,"byte_end":23327,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":23930,"byte_end":23936,"line_start":239,"line_end":239,"column_start":12,"column_end":18},"name":"cookie","qualname":"<LocalRequest>::cookie","value":"fn (self, cookie: Cookie) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a cookie to this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":23909,"byte_end":23918,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":24543,"byte_end":24550,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"cookies","qualname":"<LocalRequest>::cookies","value":"fn (self, cookies: Vec<Cookie>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add all of the cookies in `cookies` to this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":24522,"byte_end":24531,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":25370,"byte_end":25384,"line_start":289,"line_end":289,"column_start":12,"column_end":26},"name":"private_cookie","qualname":"<LocalRequest>::private_cookie","value":"fn (self, cookie: Cookie<'static>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a [private cookie] to this request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":25309,"byte_end":25318,"line_start":287,"line_end":287,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"private-cookies\")","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":25323,"byte_end":25358,"line_start":288,"line_end":288,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":26334,"byte_end":26338,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"body","qualname":"<LocalRequest>::body","value":"fn <S> (mut self, body: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the body (data) of the request.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":26313,"byte_end":26322,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":26961,"byte_end":26969,"line_start":336,"line_end":336,"column_start":12,"column_end":20},"name":"set_body","qualname":"<LocalRequest>::set_body","value":"fn <S> (&mut self, body: S) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the body (data) of the request without consuming `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":26940,"byte_end":26949,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":27463,"byte_end":27471,"line_start":354,"line_end":354,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<LocalRequest>::dispatch","value":"fn (mut self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":27434,"byte_end":27451,"line_start":353,"line_end":353,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":28689,"byte_end":28701,"line_start":385,"line_end":385,"column_start":12,"column_end":24},"name":"mut_dispatch","qualname":"<LocalRequest>::mut_dispatch","value":"fn (&mut self) -> LocalResponse<'c>","parent":null,"children":[],"decl_id":null,"docs":" Dispatches the request, returning the response.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":28660,"byte_end":28677,"line_start":384,"line_end":384,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31134,"byte_end":31147,"line_start":450,"line_end":450,"column_start":12,"column_end":25},"name":"LocalResponse","qualname":"::local::request::LocalResponse","value":"LocalResponse {  }","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"decl_id":null,"docs":" A structure representing a response from dispatching a local request.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":151},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":37447,"byte_end":37453,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Client","qualname":"::local::client::Client","value":"Client {  }","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153}],"decl_id":null,"docs":" A structure to construct requests for local dispatching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":39198,"byte_end":39201,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<Client>::new","value":"fn (rocket: Rocket) -> Result<Client, LaunchError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Client` from an instance of `Rocket` with cookie\n tracking.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":39169,"byte_end":39186,"line_start":117,"line_end":117,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":39957,"byte_end":39966,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"untracked","qualname":"<Client>::untracked","value":"fn (rocket: Rocket) -> Result<Client, LaunchError>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Client` from an instance of `Rocket` _without_ cookie\n tracking.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":39928,"byte_end":39945,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":40494,"byte_end":40500,"line_start":161,"line_end":161,"column_start":12,"column_end":18},"name":"rocket","qualname":"<Client>::rocket","value":"fn (&self) -> &Rocket","parent":null,"children":[],"decl_id":null,"docs":" Returns the instance of `Rocket` this client is creating requests for.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":40465,"byte_end":40482,"line_start":160,"line_end":160,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":41120,"byte_end":41123,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"get","qualname":"<Client>::get","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `GET` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":41091,"byte_end":41108,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":41812,"byte_end":41815,"line_start":201,"line_end":201,"column_start":12,"column_end":15},"name":"put","qualname":"<Client>::put","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `PUT` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":41783,"byte_end":41800,"line_start":200,"line_end":200,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":42640,"byte_end":42644,"line_start":225,"line_end":225,"column_start":12,"column_end":16},"name":"post","qualname":"<Client>::post","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `POST` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":42611,"byte_end":42628,"line_start":224,"line_end":224,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":43340,"byte_end":43346,"line_start":245,"line_end":245,"column_start":12,"column_end":18},"name":"delete","qualname":"<Client>::delete","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `DELETE` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":43311,"byte_end":43328,"line_start":244,"line_end":244,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":44066,"byte_end":44073,"line_start":267,"line_end":267,"column_start":12,"column_end":19},"name":"options","qualname":"<Client>::options","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `OPTIONS` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":44037,"byte_end":44054,"line_start":266,"line_end":266,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":44788,"byte_end":44792,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"head","qualname":"<Client>::head","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `HEAD` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":44759,"byte_end":44776,"line_start":288,"line_end":288,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":45506,"byte_end":45511,"line_start":311,"line_end":311,"column_start":12,"column_end":17},"name":"patch","qualname":"<Client>::patch","value":"fn <'c, 'u, U> (&'c self, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local `PATCH` request to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":45477,"byte_end":45494,"line_start":310,"line_end":310,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":46284,"byte_end":46287,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"req","qualname":"<Client>::req","value":"fn <'c, 'u, U> (&'c self, method: Method, uri: U) -> LocalRequest<'c>","parent":null,"children":[],"decl_id":null,"docs":" Create a local request with method `method` to the URI `uri`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":46255,"byte_end":46272,"line_start":333,"line_end":333,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":195},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"request","qualname":"::request","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/mod.rs","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":337},{"krate":0,"index":406},{"krate":0,"index":596},{"krate":0,"index":674},{"krate":0,"index":699},{"krate":0,"index":734},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":752},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":760}],"decl_id":null,"docs":" Types and traits for request parsing and handling.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2176},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":48248,"byte_end":48255,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Request","qualname":"::request::request::Request","value":"Request {  }","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182}],"decl_id":null,"docs":" The type of an incoming web request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":50246,"byte_end":50252,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"method","qualname":"<Request>::method","value":"fn (&self) -> Method","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the method from `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":50217,"byte_end":50234,"line_start":101,"line_end":101,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":50734,"byte_end":50744,"line_start":122,"line_end":122,"column_start":12,"column_end":22},"name":"set_method","qualname":"<Request>::set_method","value":"fn (&mut self, method: Method) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the method of `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":50705,"byte_end":50722,"line_start":121,"line_end":121,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":51148,"byte_end":51151,"line_start":138,"line_end":138,"column_start":12,"column_end":15},"name":"uri","qualname":"<Request>::uri","value":"fn (&self) -> &Origin","parent":null,"children":[],"decl_id":null,"docs":" Borrow the [`Origin`] URI from `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":51119,"byte_end":51136,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":51730,"byte_end":51737,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"set_uri","qualname":"<Request>::set_uri","value":"fn <'u> (&mut self, uri: Origin<'u>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the URI in `self` to `uri`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":52763,"byte_end":52769,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"remote","qualname":"<Request>::remote","value":"fn (&self) -> Option<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the remote connection that initiated this\n request if the address is known. If the address is not known, `None` is\n returned.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":52734,"byte_end":52751,"line_start":185,"line_end":185,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":53474,"byte_end":53484,"line_start":210,"line_end":210,"column_start":12,"column_end":22},"name":"set_remote","qualname":"<Request>::set_remote","value":"fn (&mut self, address: SocketAddr) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the remote address of `self` to `address`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":53445,"byte_end":53462,"line_start":209,"line_end":209,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":54130,"byte_end":54137,"line_start":229,"line_end":229,"column_start":12,"column_end":19},"name":"real_ip","qualname":"<Request>::real_ip","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the IP address in the \"X-Real-IP\" header of the request if such\n a header exists and contains a valid IP address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":55634,"byte_end":55643,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"client_ip","qualname":"<Request>::client_ip","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to return the client's IP address by first inspecting the\n \"X-Real-IP\" header and then using the remote connection's IP address.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":55613,"byte_end":55622,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":56394,"byte_end":56401,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Request>::cookies","value":"fn (&self) -> Cookies","parent":null,"children":[],"decl_id":null,"docs":" Returns a wrapped borrow to the cookies in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":57358,"byte_end":57365,"line_start":317,"line_end":317,"column_start":12,"column_end":19},"name":"headers","qualname":"<Request>::headers","value":"fn (&self) -> &HeaderMap<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`HeaderMap`] of all of the headers in `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":57329,"byte_end":57346,"line_start":316,"line_end":316,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":58124,"byte_end":58134,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"add_header","qualname":"<Request>::add_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Add `header` to `self`'s headers. The type of `header` can be any type\n that implements the `Into<Header>` trait. This includes common types\n such as [`ContentType`] and [`Accept`].","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":58095,"byte_end":58112,"line_start":340,"line_end":340,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":59009,"byte_end":59023,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"replace_header","qualname":"<Request>::replace_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces the value of the header with name `header.name` with\n `header.value`. If no such header exists, `header` is added as a header\n to `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":58980,"byte_end":58997,"line_start":366,"line_end":366,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":59996,"byte_end":60008,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Request>::content_type","value":"fn (&self) -> Option<&ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type header of `self`. If the header is not present,\n returns `None`. The Content-Type header is cached after the first call\n to this function. As a result, subsequent calls will always return the\n same value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":59967,"byte_end":59984,"line_start":392,"line_end":392,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":61015,"byte_end":61021,"line_start":421,"line_end":421,"column_start":12,"column_end":18},"name":"accept","qualname":"<Request>::accept","value":"fn (&self) -> Option<&Accept>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Accept header of `self`. If the header is not present,\n returns `None`. The Accept header is cached after the first call to this\n function. As a result, subsequent calls will always return the same\n value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":60986,"byte_end":61003,"line_start":420,"line_end":420,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":62254,"byte_end":62260,"line_start":454,"line_end":454,"column_start":12,"column_end":18},"name":"format","qualname":"<Request>::format","value":"fn (&self) -> Option<&MediaType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the media type \"format\" of the request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":63141,"byte_end":63147,"line_start":479,"line_end":479,"column_start":12,"column_end":18},"name":"limits","qualname":"<Request>::limits","value":"fn (&self) -> &'r Limits","parent":null,"children":[],"decl_id":null,"docs":" Returns the configured application receive limits.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":63734,"byte_end":63739,"line_start":498,"line_end":498,"column_start":12,"column_end":17},"name":"route","qualname":"<Request>::route","value":"fn (&self) -> Option<&'r Route>","parent":null,"children":[],"decl_id":null,"docs":" Get the presently matched route, if any.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":64634,"byte_end":64639,"line_start":530,"line_end":530,"column_start":12,"column_end":17},"name":"guard","qualname":"<Request>::guard","value":"fn <'a, T> (&'a self) -> Outcome<T, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Invokes the request guard implementation for `T`, returning its outcome.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":64605,"byte_end":64622,"line_start":529,"line_end":529,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":65441,"byte_end":65452,"line_start":553,"line_end":553,"column_start":12,"column_end":23},"name":"local_cache","qualname":"<Request>::local_cache","value":"fn <T, F> (&self, f: F) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the cached value for type `T` from the request-local cached\n state of `self`. If no such value has previously been cached for this\n request, `f` is called to produce the value which is subsequently\n returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":67116,"byte_end":67125,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"get_param","qualname":"<Request>::get_param","value":"fn <'a, T> (&'a self, n: usize) -> Option<Result<T, T::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` the 0-indexed `n`th segment from the\n request. Returns `None` if `n` is greater than the number of segments.\n Returns `Some(Err(T::Error))` if the parameter type `T` failed to be\n parsed from the `n`th dynamic parameter.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":67095,"byte_end":67104,"line_start":595,"line_end":595,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":68813,"byte_end":68825,"line_start":640,"line_end":640,"column_start":12,"column_end":24},"name":"get_segments","qualname":"<Request>::get_segments","value":"fn <'a, T> (&'a self, n: usize) -> Option<Result<T, T::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` all of the path segments in the request\n URI beginning and including the 0-indexed `n`th non-empty segment. `T`\n must implement [`FromSegments`], which is used to parse the segments.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":68792,"byte_end":68801,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":70641,"byte_end":70656,"line_start":684,"line_end":684,"column_start":12,"column_end":27},"name":"get_query_value","qualname":"<Request>::get_query_value","value":"fn <'a, T> (&'a self, key: &str) -> Option<Result<T, T::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves and parses into `T` the query value with key `key`. `T` must\n implement [`FromFormValue`], which is used to parse the query's value.\n Key matching is performed case-sensitively. If there are multiple pairs\n with key `key`, the _last_ one is returned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":70620,"byte_end":70629,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":71173,"byte_end":71180,"line_start":699,"line_end":699,"column_start":12,"column_end":19},"name":"example","qualname":"<Request>::example","value":"fn <F> (method: Method, uri: &str, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":72279,"byte_end":72294,"line_start":727,"line_end":727,"column_start":12,"column_end":27},"name":"raw_segment_str","qualname":"<Request>::raw_segment_str","value":"fn (&self, n: usize) -> Option<&RawStr>","parent":null,"children":[],"decl_id":null,"docs":" Get the `n`th path segment, 0-indexed, after the mount point for the\n currently matched route, as a string, if it exists. Used by codegen.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":72258,"byte_end":72267,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":72612,"byte_end":72624,"line_start":735,"line_end":735,"column_start":12,"column_end":24},"name":"raw_segments","qualname":"<Request>::raw_segments","value":"fn (&self, n: usize) -> Option<Segments>","parent":null,"children":[],"decl_id":null,"docs":" Get the segments beginning at the `n`th, 0-indexed, after the mount\n point for the currently matched route, if they exist. Used by codegen.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":72591,"byte_end":72600,"line_start":734,"line_end":734,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":73532,"byte_end":73547,"line_start":760,"line_end":760,"column_start":12,"column_end":27},"name":"raw_query_items","qualname":"<Request>::raw_query_items","value":"fn (&self) -> Option<impl Iterator<Item = FormItem> + DoubleEndedIterator + Clone>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":73511,"byte_end":73520,"line_start":759,"line_end":759,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":84512,"byte_end":84521,"line_start":193,"line_end":193,"column_start":11,"column_end":20},"name":"FromParam","qualname":"::request::param::FromParam","value":"FromParam<'a>: Sized","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":" Trait to convert a dynamic path segment string to a concrete value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":349},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":84617,"byte_end":84622,"line_start":195,"line_end":195,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::param::FromParam::Error","value":"type Error: Debug;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" The associated error to be returned if parsing/validation fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":84781,"byte_end":84791,"line_start":199,"line_end":199,"column_start":8,"column_end":18},"name":"from_param","qualname":"::request::param::FromParam::from_param","value":"fn (param: &'a RawStr) -> Result<Self, Self::Error>","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Parses and validates an instance of `Self` from a path parameter string\n or returns an `Error` if parsing or validation fails.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":384},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":87634,"byte_end":87646,"line_start":291,"line_end":291,"column_start":11,"column_end":23},"name":"FromSegments","qualname":"::request::param::FromSegments","value":"FromSegments<'a>: Sized","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" Trait to convert _many_ dynamic path segment strings to a concrete value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":386},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":87733,"byte_end":87738,"line_start":293,"line_end":293,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::param::FromSegments::Error","value":"type Error: Debug;","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":87888,"byte_end":87901,"line_start":297,"line_end":297,"column_start":8,"column_end":21},"name":"from_segments","qualname":"::request::param::FromSegments::from_segments","value":"fn (segments: Segments<'a>) -> Result<Self, Self::Error>","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from many dynamic path parameter strings or\n returns an `Error` if one cannot be parsed.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2315},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":94041,"byte_end":94044,"line_start":108,"line_end":108,"column_start":5,"column_end":8},"name":"Raw","qualname":"::request::form::form_items::FormItems::Raw","value":"FormItems::Raw { string, next_index }","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":94131,"byte_end":94137,"line_start":113,"line_end":113,"column_start":5,"column_end":11},"name":"Cooked","qualname":"::request::form::form_items::FormItems::Cooked","value":"FormItems::Cooked { items, next_index }","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2313},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":94002,"byte_end":94011,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"FormItems","qualname":"::request::form::form_items::FormItems","value":"FormItems::{Raw, Cooked}","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2318}],"decl_id":null,"docs":" Iterator over the key/value pairs of a given HTTP form string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2324},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":94323,"byte_end":94331,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"FormItem","qualname":"::request::form::form_items::FormItem","value":"FormItem { raw, key, value }","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328}],"decl_id":null,"docs":" A form items returned by the [`FormItems`] iterator.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2326},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":94424,"byte_end":94427,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"raw","qualname":"::request::form::form_items::FormItem::raw","value":"&'f rocket_http::RawStr","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" The full, nonempty string for the item, not including `&` delimiters.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2327},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":94752,"byte_end":94755,"line_start":129,"line_end":129,"column_start":9,"column_end":12},"name":"key","qualname":"::request::form::form_items::FormItem::key","value":"&'f rocket_http::RawStr","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" The key for the item, which may be empty if `value` is nonempty.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2328},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":95082,"byte_end":95087,"line_start":135,"line_end":135,"column_start":9,"column_end":14},"name":"value","qualname":"::request::form::form_items::FormItem::value","value":"&'f rocket_http::RawStr","parent":{"krate":0,"index":2324},"children":[],"decl_id":null,"docs":" The value for the item, which may be empty if `key` is nonempty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":95680,"byte_end":95689,"line_start":159,"line_end":159,"column_start":12,"column_end":21},"name":"key_value","qualname":"<FormItem>::key_value","value":"fn (&self) -> (&'f RawStr, &'f RawStr)","parent":null,"children":[],"decl_id":null,"docs":" Extracts the raw `key` and `value` as a tuple.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":95651,"byte_end":95668,"line_start":158,"line_end":158,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":96384,"byte_end":96401,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"key_value_decoded","qualname":"<FormItem>::key_value_decoded","value":"fn (&self) -> (String, String)","parent":null,"children":[],"decl_id":null,"docs":" Extracts and lossy URL decodes the `key` and `value` as a tuple.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":96355,"byte_end":96372,"line_start":183,"line_end":183,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":97131,"byte_end":97138,"line_start":209,"line_end":209,"column_start":12,"column_end":19},"name":"explode","qualname":"<FormItem>::explode","value":"fn (&self) -> (&'f RawStr, &'f RawStr, &'f RawStr)","parent":null,"children":[],"decl_id":null,"docs":" Extracts `raw` and the raw `key` and `value` as a triple.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":97102,"byte_end":97119,"line_start":208,"line_end":208,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":98217,"byte_end":98226,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"completed","qualname":"<FormItems>::completed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the form string was parsed to completion. Returns\n `false` otherwise. All valid form strings will parse to completion,\n while invalid form strings will not.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":98196,"byte_end":98205,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":99489,"byte_end":99496,"line_start":285,"line_end":285,"column_start":12,"column_end":19},"name":"exhaust","qualname":"<FormItems>::exhaust","value":"fn (&mut self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parses all remaining key/value pairs and returns `true` if parsing ran\n to completion. All valid form strings will parse to completion, while\n invalid form strings will not.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":99468,"byte_end":99477,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":99639,"byte_end":99652,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"mark_complete","qualname":"<FormItems>::mark_complete","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":99599,"byte_end":99608,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":437},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110049,"byte_end":110057,"line_start":94,"line_end":94,"column_start":11,"column_end":19},"name":"FromForm","qualname":"::request::form::from_form::FromForm","value":"FromForm<'f>: Sized","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" Trait to create an instance of some type from an HTTP form.\n [`Form`](::request::Form) requires its generic type to implement this trait.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":439},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110144,"byte_end":110149,"line_start":96,"line_end":96,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::form::from_form::FromForm::Error","value":"type Error;","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" The associated error to be returned when parsing fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110647,"byte_end":110656,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"from_form","qualname":"::request::form::from_form::FromForm::from_form","value":"fn (it: &mut FormItems<'f>, strict: bool) -> Result<Self, Self::Error>","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from the iterator of form items `it`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":461},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":116808,"byte_end":116821,"line_start":164,"line_end":164,"column_start":11,"column_end":24},"name":"FromFormValue","qualname":"::request::form::from_form_value::FromFormValue","value":"FromFormValue<'v>: Sized","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"decl_id":null,"docs":" Trait to parse a typed value from a form value.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":463},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":117060,"byte_end":117065,"line_start":168,"line_end":168,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::form::from_form_value::FromFormValue::Error","value":"type Error;","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" The associated error which can be returned from parsing. It is a good\n idea to have the return type be or contain an `&'v str` so that the\n unparseable string can be examined after a bad parse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":117197,"byte_end":117212,"line_start":172,"line_end":172,"column_start":8,"column_end":23},"name":"from_form_value","qualname":"::request::form::from_form_value::FromFormValue::from_form_value","value":"fn (form_value: &'v RawStr) -> Result<Self, Self::Error>","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Parses an instance of `Self` from an HTTP form field value or returns an\n `Error` if one cannot be parsed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":117555,"byte_end":117562,"line_start":179,"line_end":179,"column_start":8,"column_end":15},"name":"default","qualname":"::request::form::from_form_value::FromFormValue::default","value":"fn () -> Option<Self>","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":" Returns a default value to be used when the form field does not exist.\n If this returns `None`, then the field is required. Otherwise, this\n should return `Some(default_value)`. The default implementation simply\n returns `None`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":117530,"byte_end":117547,"line_start":178,"line_end":178,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2444},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122028,"byte_end":122039,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"LenientForm","qualname":"::request::form::lenient::LenientForm","value":"","parent":null,"children":[],"decl_id":null,"docs":" A data guard for parsing [`FromForm`] types leniently.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122630,"byte_end":122640,"line_start":85,"line_end":85,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<LenientForm<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the parsed value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122601,"byte_end":122618,"line_start":84,"line_end":84,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2453},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":124023,"byte_end":124031,"line_start":15,"line_end":15,"column_start":5,"column_end":13},"name":"BadValue","qualname":"::request::form::error::FormParseError::BadValue","value":"FormParseError::BadValue(&'f RawStr, &'f RawStr)","parent":{"krate":0,"index":2451},"children":[],"decl_id":null,"docs":" The field named `.0` with value `.1` failed to parse or validate.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2457},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":124261,"byte_end":124268,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::request::form::error::FormParseError::Unknown","value":"FormParseError::Unknown(&'f RawStr, &'f RawStr)","parent":{"krate":0,"index":2451},"children":[],"decl_id":null,"docs":" The parse was strict and the field named `.0` with value `.1` appeared\n in the incoming form string but was unexpected.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2461},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":124377,"byte_end":124384,"line_start":22,"line_end":22,"column_start":5,"column_end":12},"name":"Missing","qualname":"::request::form::error::FormParseError::Missing","value":"FormParseError::Missing(&'f RawStr)","parent":{"krate":0,"index":2451},"children":[],"decl_id":null,"docs":" The field named `.0` was expected but is missing in the incoming form.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2451},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":123924,"byte_end":123938,"line_start":13,"line_end":13,"column_start":10,"column_end":24},"name":"FormParseError","qualname":"::request::form::error::FormParseError","value":"FormParseError::{BadValue, Unknown, Missing}","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2457},{"krate":0,"index":2461}],"decl_id":null,"docs":" Error returned by the [`FromForm`](::request::FromForm) derive on form\n parsing errors.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2486},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":124740,"byte_end":124742,"line_start":31,"line_end":31,"column_start":5,"column_end":7},"name":"Io","qualname":"::request::form::error::FormDataError::Io","value":"FormDataError::Io(io::Error)","parent":{"krate":0,"index":2483},"children":[],"decl_id":null,"docs":" An I/O error occurred while reading reading the data stream. This can\n also mean that the form contained invalid UTF-8.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2489},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":124892,"byte_end":124901,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::request::form::error::FormDataError::Malformed","value":"FormDataError::Malformed(&'f str)","parent":{"krate":0,"index":2483},"children":[],"decl_id":null,"docs":" The form string (in `.0`) is malformed and was unable to be parsed as\n HTTP `application/x-www-form-urlencoded` data.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2492},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":125050,"byte_end":125055,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Parse","qualname":"::request::form::error::FormDataError::Parse","value":"FormDataError::Parse(E, &'f str)","parent":{"krate":0,"index":2483},"children":[],"decl_id":null,"docs":" The form string (in `.1`) failed to parse as the intended structure. The\n error type in `.0` contains further details.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2483},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":124578,"byte_end":124591,"line_start":28,"line_end":28,"column_start":10,"column_end":23},"name":"FormDataError","qualname":"::request::form::error::FormDataError","value":"FormDataError::{Io, Malformed, Parse}","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2489},{"krate":0,"index":2492}],"decl_id":null,"docs":" Error returned by the [`FromData`](::data::FromData) implementations of\n [`Form`](::request::Form) and [`LenientForm`](::request::LenientForm).\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":533},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/error.rs","byte_start":126121,"byte_end":126130,"line_start":74,"line_end":74,"column_start":10,"column_end":19},"name":"FormError","qualname":"::request::form::error::FormError","value":"FormDataError<'f, FormParseError<'f>>","parent":null,"children":[],"decl_id":null,"docs":" Alias to the type of form errors returned by the [`FromData`]\n implementations of [`Form<T>`] where the [`FromForm`] implementation for `T`\n was derived.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2500},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":130543,"byte_end":130547,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"Form","qualname":"::request::form::form::Form","value":"","parent":null,"children":[],"decl_id":null,"docs":" A data guard for parsing [`FromForm`] types strictly.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":131117,"byte_end":131127,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Form<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the parsed value.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":131088,"byte_end":131105,"line_start":136,"line_end":136,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":612},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":134381,"byte_end":134388,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::request::from_request::Outcome","value":"outcome::Outcome<S, (Status, E), ()>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `FromRequest` conversion.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":622},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":146073,"byte_end":146084,"line_start":347,"line_end":347,"column_start":11,"column_end":22},"name":"FromRequest","qualname":"::request::from_request::FromRequest","value":"FromRequest<'a, 'r>: Sized","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626}],"decl_id":null,"docs":" Trait implemented by request guards to derive a value from incoming\n requests.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":625},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":146176,"byte_end":146181,"line_start":349,"line_end":349,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::from_request::FromRequest::Error","value":"type Error: Debug;","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" The associated error to be returned if derivation fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":146563,"byte_end":146575,"line_start":357,"line_end":357,"column_start":8,"column_end":20},"name":"from_request","qualname":"::request::from_request::FromRequest::from_request","value":"fn (request: &'a Request<'r>) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":622},"children":[],"decl_id":null,"docs":" Derives an instance of `Self` from the incoming request metadata.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2507},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":152410,"byte_end":152415,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"State","qualname":"::request::state::State","value":"","parent":null,"children":[],"decl_id":null,"docs":" Request guard to retrieve managed state.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":153422,"byte_end":153427,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"inner","qualname":"<State>::inner","value":"fn (&self) -> &'r T","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a borrow to the underlying value with a lifetime of `'r`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":153393,"byte_end":153410,"line_start":135,"line_end":135,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":154196,"byte_end":154200,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"from","qualname":"<State>::from","value":"fn (rocket: &'r Rocket) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns the managed state value in `rocket` for the type `T` if it is\n being managed by `rocket`. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":154167,"byte_end":154184,"line_start":162,"line_end":162,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2542},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":156461,"byte_end":156466,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Query","qualname":"::request::query::Query","value":"","parent":null,"children":[],"decl_id":null,"docs":" Iterator over form items in a query string.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":710},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":161672,"byte_end":161681,"line_start":194,"line_end":194,"column_start":11,"column_end":20},"name":"FromQuery","qualname":"::request::query::FromQuery","value":"FromQuery<'q>: Sized","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713}],"decl_id":null,"docs":" Trait implemented by query guards to derive a value from a query string.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":712},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":161777,"byte_end":161782,"line_start":196,"line_end":196,"column_start":10,"column_end":15},"name":"Error","qualname":"::request::query::FromQuery::Error","value":"type Error;","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" The associated error to be returned if parsing/validation fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":161918,"byte_end":161928,"line_start":200,"line_end":200,"column_start":8,"column_end":18},"name":"from_query","qualname":"::request::query::FromQuery::from_query","value":"fn (query: Query<'q>) -> Result<Self, Self::Error>","parent":{"krate":0,"index":710},"children":[],"decl_id":null,"docs":" Parses and validates an instance of `Self` from a query or returns an\n `Error` if parsing or validation fails.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":761},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response","qualname":"::response","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":819},{"krate":0,"index":841},{"krate":0,"index":889},{"krate":0,"index":918},{"krate":0,"index":1037},{"krate":0,"index":1089},{"krate":0,"index":1102},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149}],"decl_id":null,"docs":" Types and traits to build and send responses.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":777},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":171002,"byte_end":171011,"line_start":183,"line_end":183,"column_start":11,"column_end":20},"name":"Responder","qualname":"::response::responder::Responder","value":"Responder<'r>","parent":null,"children":[{"krate":0,"index":779}],"decl_id":null,"docs":" Trait implemented by types that generate responses for clients.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":171601,"byte_end":171611,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"respond_to","qualname":"::response::responder::Responder::respond_to","value":"fn (self, request: &Request) -> response::Result<'r>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":" Returns `Ok` if a `Response` could be generated successfully. Otherwise,\n returns an `Err` with a failing `Status`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2552},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":178001,"byte_end":178009,"line_start":47,"line_end":47,"column_start":12,"column_end":20},"name":"Redirect","qualname":"::response::redirect::Redirect","value":"","parent":null,"children":[],"decl_id":null,"docs":" An empty redirect response to a given URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":178624,"byte_end":178626,"line_start":64,"line_end":64,"column_start":12,"column_end":14},"name":"to","qualname":"<Redirect>::to","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a temporary \"see other\" (303) redirect response. This is the\n typical response when redirecting a user to another page. This type of\n redirect indicates that the client should look elsewhere, but always via\n a `GET` request, for a given resource.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":179348,"byte_end":179357,"line_start":83,"line_end":83,"column_start":11,"column_end":20},"name":"temporary","qualname":"<Redirect>::temporary","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"temporary\" (307) redirect response. This response instructs\n the client to reissue the current request to a different URL,\n maintaining the contents of the request identically. This means that,\n for example, a `POST` request will be resent, contents included, to the\n requested URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":180209,"byte_end":180218,"line_start":103,"line_end":103,"column_start":11,"column_end":20},"name":"permanent","qualname":"<Redirect>::permanent","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"permanent\" (308) redirect response. This redirect must only\n be used for permanent redirects as it is cached by clients. This\n response instructs the client to reissue requests for the current URL to\n a different URL, now and in the future, maintaining the contents of the\n request identically. This means that, for example, a `POST` request will\n be resent, contents included, to the requested URL.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":181003,"byte_end":181008,"line_start":123,"line_end":123,"column_start":11,"column_end":16},"name":"found","qualname":"<Redirect>::found","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a temporary \"found\" (302) redirect response. This response\n instructs the client to reissue the current request to a different URL,\n ideally maintaining the contents of the request identically.\n Unfortunately, different clients may respond differently to this type of\n redirect, so `303` or `307` redirects, which disambiguate, are\n preferred.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":181693,"byte_end":181698,"line_start":141,"line_end":141,"column_start":11,"column_end":16},"name":"moved","qualname":"<Redirect>::moved","value":"fn <U> (uri: U) -> Redirect","parent":null,"children":[],"decl_id":null,"docs":" Construct a permanent \"moved\" (301) redirect response. This response\n should only be used for permanent redirects as it can be cached by\n browsers. Because different clients may respond differently to this type\n of redirect, a `308` redirect, which disambiguates, is preferred.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2558},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":182827,"byte_end":182836,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"NamedFile","qualname":"::response::named_file::NamedFile","value":"","parent":null,"children":[],"decl_id":null,"docs":" A file with an associated name; responds with the Content-Type based on the\n file extension.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183355,"byte_end":183359,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"open","qualname":"<NamedFile>::open","value":"fn <P> (path: P) -> io::Result<NamedFile>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to open a file in read-only mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183596,"byte_end":183600,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"file","qualname":"<NamedFile>::file","value":"fn (&self) -> &File","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying `File`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183567,"byte_end":183584,"line_start":38,"line_end":38,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183711,"byte_end":183720,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"take_file","qualname":"<NamedFile>::take_file","value":"fn (self) -> File","parent":null,"children":[],"decl_id":null,"docs":" Take the underlying `File`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183682,"byte_end":183699,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183852,"byte_end":183860,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"file_mut","qualname":"<NamedFile>::file_mut","value":"fn (&mut self) -> &mut File","parent":null,"children":[],"decl_id":null,"docs":" Retrieve a mutable borrow to the underlying `File`.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":183823,"byte_end":183840,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":184330,"byte_end":184334,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"path","qualname":"<NamedFile>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the path of this file.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":184301,"byte_end":184318,"line_start":70,"line_end":70,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":900},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":187079,"byte_end":187085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Stream","qualname":"::response::stream::Stream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Streams a response to a client from an arbitrary `Read`er type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":187635,"byte_end":187642,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"chunked","qualname":"<Stream<T>>::chunked","value":"fn (reader: T, chunk_size: u64) -> Stream<T>","parent":null,"children":[],"decl_id":null,"docs":" Create a new stream from the given `reader` and sets the chunk size for\n each streamed chunk to `chunk_size` bytes.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":931},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189083,"byte_end":189101,"line_start":8,"line_end":8,"column_start":11,"column_end":29},"name":"DEFAULT_CHUNK_SIZE","qualname":"::response::response::DEFAULT_CHUNK_SIZE","value":"u64","parent":null,"children":[],"decl_id":null,"docs":" The default size, in bytes, of a chunk for streamed responses.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2566},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189262,"byte_end":189267,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Sized","qualname":"::response::response::Body::Sized","value":"Body::Sized(T, u64)","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" A fixed-size body.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2570},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189352,"byte_end":189359,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Chunked","qualname":"::response::response::Body::Chunked","value":"Body::Chunked(T, u64)","parent":{"krate":0,"index":2564},"children":[],"decl_id":null,"docs":" A streamed/chunked body, akin to `Transfer-Encoding: chunked`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2564},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189221,"byte_end":189225,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Body","qualname":"::response::response::Body","value":"Body::{Sized, Chunked}","parent":null,"children":[{"krate":0,"index":2566},{"krate":0,"index":2570}],"decl_id":null,"docs":" The body of a response: can be sized or streamed/chunked.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189475,"byte_end":189481,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Body<T>>::as_mut","value":"fn (&mut self) -> Body<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Body` with a mutable borrow to `self`'s inner type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189860,"byte_end":189863,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"map","qualname":"<Body<T>>::map","value":"fn <U, F> (self, f: F) -> Body<U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`. Passes the inner type as a parameter to `f` and\n constructs a new body with the size of `self` and the return value of\n the call to `f`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":190125,"byte_end":190135,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Body<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner body.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":190308,"byte_end":190316,"line_start":46,"line_end":46,"column_start":12,"column_end":20},"name":"is_sized","qualname":"<Body<T>>::is_sized","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Body::Sized`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":190516,"byte_end":190526,"line_start":54,"line_end":54,"column_start":12,"column_end":22},"name":"is_chunked","qualname":"<Body<T>>::is_chunked","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a `Body::Chunked`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":190804,"byte_end":190814,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<Body<T>>::into_bytes","value":"fn (self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read `self` into a `Vec` and returns it. If reading fails,\n returns `None`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":191215,"byte_end":191226,"line_start":78,"line_end":78,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Body<T>>::into_string","value":"fn (self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read `self` into a `String` and returns it. If reading or\n conversion fails, returns `None`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":949},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":194406,"byte_end":194421,"line_start":158,"line_end":158,"column_start":12,"column_end":27},"name":"ResponseBuilder","qualname":"::response::response::ResponseBuilder","value":"ResponseBuilder {  }","parent":null,"children":[{"krate":0,"index":951}],"decl_id":null,"docs":" Type for easily building `Response`s.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":194846,"byte_end":194849,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<ResponseBuilder>::new","value":"fn (base: Response<'r>) -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `ResponseBuilder` that will build on top of the `base`\n `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":194817,"byte_end":194834,"line_start":174,"line_end":174,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":195340,"byte_end":195346,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"status","qualname":"<ResponseBuilder>::status","value":"fn (&mut self, status: Status) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Response` being built to `status`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":195311,"byte_end":195328,"line_start":194,"line_end":194,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":195880,"byte_end":195890,"line_start":214,"line_end":214,"column_start":12,"column_end":22},"name":"raw_status","qualname":"<ResponseBuilder>::raw_status","value":"fn (&mut self, code: u16, reason: &'static str) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the `Response` being built to a custom status\n constructed from the `code` and `reason` phrase.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":195851,"byte_end":195868,"line_start":213,"line_end":213,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":196920,"byte_end":196926,"line_start":243,"line_end":243,"column_start":12,"column_end":18},"name":"header","qualname":"<ResponseBuilder>::header","value":"fn <'h, H> (&mut self, header: H) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` to the `Response`, replacing any header with the same name\n that already exists in the response. If multiple headers with\n the same name exist, they are all removed, and only the new header and\n value will remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":196891,"byte_end":196908,"line_start":242,"line_end":242,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":198005,"byte_end":198018,"line_start":273,"line_end":273,"column_start":12,"column_end":25},"name":"header_adjoin","qualname":"<ResponseBuilder>::header_adjoin","value":"fn <'h, H> (&mut self, header: H) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds `header` to the `Response` by adjoining the header with any\n existing headers with the same name that already exist in the\n `Response`. This allows for multiple headers with the same name and\n potentially different values to be present in the `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":197976,"byte_end":197993,"line_start":272,"line_end":272,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":198844,"byte_end":198854,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"raw_header","qualname":"<ResponseBuilder>::raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom header to the `Response` with the given name and value,\n replacing any header with the same name that already exists in the\n response. If multiple headers with the same name exist, they are all\n removed, and only the new header and value will remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":198815,"byte_end":198832,"line_start":297,"line_end":297,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":199792,"byte_end":199809,"line_start":325,"line_end":325,"column_start":12,"column_end":29},"name":"raw_header_adjoin","qualname":"<ResponseBuilder>::raw_header_adjoin","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Adds custom header to the `Response` with the given name and value,\n adjoining the header with any existing headers with the same name that\n already exist in the `Response`. This allows for multiple headers with\n the same name and potentially different values to be present in the\n `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":199763,"byte_end":199780,"line_start":324,"line_end":324,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":200545,"byte_end":200555,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"sized_body","qualname":"<ResponseBuilder>::sized_body","value":"fn <B> (&mut self, body: B) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the fixed-sized `body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":200516,"byte_end":200533,"line_start":351,"line_end":351,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":201223,"byte_end":201236,"line_start":378,"line_end":378,"column_start":12,"column_end":25},"name":"streamed_body","qualname":"<ResponseBuilder>::streamed_body","value":"fn <B> (&mut self, body: B) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the streamed `body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":201194,"byte_end":201211,"line_start":377,"line_end":377,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":201944,"byte_end":201956,"line_start":405,"line_end":405,"column_start":12,"column_end":24},"name":"chunked_body","qualname":"<ResponseBuilder>::chunked_body","value":"fn <B> (&mut self, body: B, chunk_size: u64) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of the `Response` to be the streamed `body` with a custom\n chunk size, in bytes.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":201915,"byte_end":201932,"line_start":404,"line_end":404,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":202660,"byte_end":202668,"line_start":428,"line_end":428,"column_start":12,"column_end":20},"name":"raw_body","qualname":"<ResponseBuilder>::raw_body","value":"fn <T> (&mut self, body: Body<T>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`. This method should typically not\n be used, opting instead for one of `sized_body`, `streamed_body`, or\n `chunked_body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":202631,"byte_end":202648,"line_start":427,"line_end":427,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":204190,"byte_end":204195,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"merge","qualname":"<ResponseBuilder>::merge","value":"fn (&mut self, other: Response<'r>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Merges the `other` `Response` into `self` by setting any fields in\n `self` to the corresponding value in `other` if they are set in `other`.\n Fields in `self` are unchanged if they are not set in `other`. If a\n header is set in both `self` and `other`, the values in `other` are\n kept. Headers set only in `self` remain.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":204161,"byte_end":204178,"line_start":472,"line_end":472,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":205757,"byte_end":205761,"line_start":517,"line_end":517,"column_start":12,"column_end":16},"name":"join","qualname":"<ResponseBuilder>::join","value":"fn (&mut self, other: Response<'r>) -> &mut ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Joins the `other` `Response` into `self` by setting any fields in `self`\n to the corresponding value in `other` if they are set in `self`. Fields\n in `self` are unchanged if they are already set. If a header is set in\n both `self` and `other`, the values are adjoined, with the values in\n `self` coming first. Headers only in `self` or `other` are set in\n `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":205728,"byte_end":205745,"line_start":516,"line_end":516,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206188,"byte_end":206196,"line_start":535,"line_end":535,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ResponseBuilder>::finalize","value":"fn (&mut self) -> Response<'r>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the built `Response`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206159,"byte_end":206176,"line_start":534,"line_end":534,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206645,"byte_end":206647,"line_start":553,"line_end":553,"column_start":12,"column_end":14},"name":"ok","qualname":"<ResponseBuilder>::ok","value":"fn <T> (&mut self) -> Result<Response<'r>, T>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the built `Response` wrapped in `Ok`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206616,"byte_end":206633,"line_start":552,"line_end":552,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2585},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206823,"byte_end":206831,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"Response","qualname":"::response::response::Response","value":"Response {  }","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589}],"decl_id":null,"docs":" A response, as returned by types implementing [`Responder`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":207575,"byte_end":207578,"line_start":585,"line_end":585,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn () -> Response<'r>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty `Response` without a status, body, or headers.\n Because all HTTP responses must have a status, if a default `Response`\n is written to the client without a status, the status defaults to `200\n Ok`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":207546,"byte_end":207563,"line_start":584,"line_end":584,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":208005,"byte_end":208010,"line_start":604,"line_end":604,"column_start":12,"column_end":17},"name":"build","qualname":"<Response>::build","value":"fn () -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ResponseBuilder` with a base of `Response::new()`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":207976,"byte_end":207993,"line_start":603,"line_end":603,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":208410,"byte_end":208420,"line_start":620,"line_end":620,"column_start":12,"column_end":22},"name":"build_from","qualname":"<Response>::build_from","value":"fn (other: Response<'r>) -> ResponseBuilder<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `ResponseBuilder` with a base of `other`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":208381,"byte_end":208398,"line_start":619,"line_end":619,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":208922,"byte_end":208928,"line_start":639,"line_end":639,"column_start":12,"column_end":18},"name":"status","qualname":"<Response>::status","value":"fn (&self) -> Status","parent":null,"children":[],"decl_id":null,"docs":" Returns the status of `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":208893,"byte_end":208910,"line_start":638,"line_end":638,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":209361,"byte_end":209371,"line_start":656,"line_end":656,"column_start":12,"column_end":22},"name":"set_status","qualname":"<Response>::set_status","value":"fn (&mut self, status: Status) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of `self` to `status`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":209332,"byte_end":209349,"line_start":655,"line_end":655,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":209899,"byte_end":209911,"line_start":674,"line_end":674,"column_start":12,"column_end":24},"name":"content_type","qualname":"<Response>::content_type","value":"fn (&self) -> Option<ContentType>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Content-Type header of `self`. If the header is not present\n or is malformed, returns `None`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":209870,"byte_end":209887,"line_start":673,"line_end":673,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":210586,"byte_end":210600,"line_start":693,"line_end":693,"column_start":12,"column_end":26},"name":"set_raw_status","qualname":"<Response>::set_raw_status","value":"fn (&mut self, code: u16, reason: &'static str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of `self` to a custom `status` with status code `code`\n and reason phrase `reason`. This method should be used sparingly; prefer\n to use [set_status](#method.set_status) instead.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":210557,"byte_end":210574,"line_start":692,"line_end":692,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":211172,"byte_end":211179,"line_start":710,"line_end":710,"column_start":12,"column_end":19},"name":"cookies","qualname":"<Response>::cookies","value":"fn (&self) -> Vec<Cookie>","parent":null,"children":[],"decl_id":null,"docs":" Returns a vector of the cookies set in `self` as identified by the\n `Set-Cookie` header. Malformed cookies are skipped.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":212102,"byte_end":212109,"line_start":739,"line_end":739,"column_start":12,"column_end":19},"name":"headers","qualname":"<Response>::headers","value":"fn (&self) -> &HeaderMap<'r>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`HeaderMap`] of all of the headers in `self`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":212073,"byte_end":212090,"line_start":738,"line_end":738,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":213123,"byte_end":213133,"line_start":766,"line_end":766,"column_start":12,"column_end":22},"name":"set_header","qualname":"<Response>::set_header","value":"fn <'h, H> (&mut self, header: H) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the header `header` in `self`. Any existing headers with the name\n `header.name` will be lost, and only `header` will remain. The type of\n `header` can be any type that implements `Into<Header>`. This includes\n `Header` itself, [`ContentType`](::http::ContentType) and\n [`hyper::header` types](::http::hyper::header).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":213094,"byte_end":213111,"line_start":765,"line_end":765,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":214096,"byte_end":214110,"line_start":792,"line_end":792,"column_start":12,"column_end":26},"name":"set_raw_header","qualname":"<Response>::set_raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Sets the custom header with name `name` and value `value` in `self`. Any\n existing headers with the same `name` will be lost, and the new custom\n header will remain. This method should be used sparingly; prefer to use\n [set_header](#method.set_header) instead.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":214067,"byte_end":214084,"line_start":791,"line_end":791,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":215274,"byte_end":215287,"line_start":821,"line_end":821,"column_start":12,"column_end":25},"name":"adjoin_header","qualname":"<Response>::adjoin_header","value":"fn <'h, H> (&mut self, header: H) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds the header `header` to `self`. If `self` contains headers with the\n name `header.name`, another header with the same name and value\n `header.value` is added. The type of `header` can be any type that\n implements `Into<Header>`. This includes `Header` itself,\n [`ContentType`](::http::ContentType) and [`hyper::header`\n types](::http::hyper::header).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":215245,"byte_end":215262,"line_start":820,"line_end":820,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":216395,"byte_end":216412,"line_start":848,"line_end":848,"column_start":12,"column_end":29},"name":"adjoin_raw_header","qualname":"<Response>::adjoin_raw_header","value":"fn <'a, 'b, N, V> (&mut self, name: N, value: V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Adds a custom header with name `name` and value `value` to `self`. If\n `self` already contains headers with the name `name`, another header\n with the same `name` and `value` is added. The type of `header` can be\n any type implements `Into<Header>`. This includes `Header` itself,\n [`ContentType`](::http::ContentType) and [`hyper::header`\n types](::http::hyper::header).","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":216366,"byte_end":216383,"line_start":847,"line_end":847,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":217139,"byte_end":217152,"line_start":872,"line_end":872,"column_start":12,"column_end":25},"name":"remove_header","qualname":"<Response>::remove_header","value":"fn (&mut self, name: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes all headers with the name `name`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":217110,"byte_end":217127,"line_start":871,"line_end":871,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":217752,"byte_end":217756,"line_start":892,"line_end":892,"column_start":12,"column_end":16},"name":"body","qualname":"<Response>::body","value":"fn (&mut self) -> Option<Body<&mut io::Read>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable borrow of the body of `self`, if there is one. The\n body is borrowed mutably to allow for reading.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":217723,"byte_end":217740,"line_start":891,"line_end":891,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":218874,"byte_end":218885,"line_start":922,"line_end":922,"column_start":12,"column_end":23},"name":"body_string","qualname":"<Response>::body_string","value":"fn (&mut self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self's` body and reads it into a string. If `self` doesn't\n have a body, reading fails, or string conversion (for non-UTF-8 bodies)\n fails, returns `None`. Note that `self`'s `body` is consumed after a\n call to this method.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":218845,"byte_end":218862,"line_start":921,"line_end":921,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":219623,"byte_end":219633,"line_start":944,"line_end":944,"column_start":12,"column_end":22},"name":"body_bytes","qualname":"<Response>::body_bytes","value":"fn (&mut self) -> Option<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self's` body and reads it into a `Vec` of `u8` bytes. If\n `self` doesn't have a body or reading fails returns `None`. Note that\n `self`'s `body` is consumed after a call to this method.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":219594,"byte_end":219611,"line_start":943,"line_end":943,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":220421,"byte_end":220430,"line_start":969,"line_end":969,"column_start":12,"column_end":21},"name":"take_body","qualname":"<Response>::take_body","value":"fn (&mut self) -> Option<Body<Box<io::Read + 'r>>>","parent":null,"children":[],"decl_id":null,"docs":" Moves the body of `self` out and returns it, if there is one, leaving no\n body in its place.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":220392,"byte_end":220409,"line_start":968,"line_end":968,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":221690,"byte_end":221704,"line_start":1006,"line_end":1006,"column_start":12,"column_end":26},"name":"set_sized_body","qualname":"<Response>::set_sized_body","value":"fn <B> (&mut self, mut body: B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be the fixed-sized `body`. The size of the\n body is obtained by `seek`ing to the end and then `seek`ing back to the\n start.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":221669,"byte_end":221678,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":222700,"byte_end":222717,"line_start":1032,"line_end":1032,"column_start":12,"column_end":29},"name":"set_streamed_body","qualname":"<Response>::set_streamed_body","value":"fn <B> (&mut self, body: B) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`, which will be streamed. The chunk\n size of the stream is\n [DEFAULT_CHUNK_SIZE](::response::DEFAULT_CHUNK_SIZE). Use\n [set_chunked_body](#method.set_chunked_body) for custom chunk sizes.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":222671,"byte_end":222688,"line_start":1031,"line_end":1031,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":223281,"byte_end":223297,"line_start":1050,"line_end":1050,"column_start":12,"column_end":28},"name":"set_chunked_body","qualname":"<Response>::set_chunked_body","value":"fn <B> (&mut self, body: B, chunk_size: u64) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`, which will be streamed with chunk\n size `chunk_size`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":223252,"byte_end":223269,"line_start":1049,"line_end":1049,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":224050,"byte_end":224062,"line_start":1073,"line_end":1073,"column_start":12,"column_end":24},"name":"set_raw_body","qualname":"<Response>::set_raw_body","value":"fn <T> (&mut self, body: Body<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the body of `self` to be `body`. This method should typically not\n be used, opting instead for one of `set_sized_body`,\n `set_streamed_body`, or `set_chunked_body`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":224021,"byte_end":224038,"line_start":1072,"line_end":1072,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":225522,"byte_end":225527,"line_start":1115,"line_end":1115,"column_start":12,"column_end":17},"name":"merge","qualname":"<Response>::merge","value":"fn (&mut self, other: Response<'r>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replaces this response's status and body with that of `other`, if they\n exist in `other`. Any headers that exist in `other` replace the ones in\n `self`. Any in `self` that aren't in `other` remain in `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":227075,"byte_end":227079,"line_start":1164,"line_end":1164,"column_start":12,"column_end":16},"name":"join","qualname":"<Response>::join","value":"fn (&mut self, other: Response<'r>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets `self`'s status and body to that of `other` if they are not already\n set in `self`. Any headers present in both `other` and `self` are\n adjoined.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2593},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":231234,"byte_end":231239,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"Flash","qualname":"::response::flash::Flash","value":"Flash {  }","parent":null,"children":[{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2598}],"decl_id":null,"docs":" Sets a \"flash\" cookie that will be removed when it is accessed. The\n analogous request type is [`FlashMessage`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1055},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":231843,"byte_end":231855,"line_start":103,"line_end":103,"column_start":10,"column_end":22},"name":"FlashMessage","qualname":"::response::flash::FlashMessage","value":"::response::Flash<&'a Request<'r>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to retrieve [`Flash`] messages from a request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":232406,"byte_end":232409,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<Flash<R>>::new","value":"fn <N, M> (res: R, name: N, msg: M) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Flash` message with the given `name`, `msg`, and\n underlying `responder`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":233105,"byte_end":233112,"line_start":143,"line_end":143,"column_start":12,"column_end":19},"name":"success","qualname":"<Flash<R>>::success","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a \"success\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":233649,"byte_end":233656,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"warning","qualname":"<Flash<R>>::warning","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a \"warning\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":234183,"byte_end":234188,"line_start":179,"line_end":179,"column_start":12,"column_end":17},"name":"error","qualname":"<Flash<R>>::error","value":"fn <S> (responder: R, msg: S) -> Flash<R>","parent":null,"children":[],"decl_id":null,"docs":" Constructs an \"error\" `Flash` message with the given `responder` and\n `msg`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":235983,"byte_end":235987,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"name","qualname":"<Flash<&'a Request>>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the `name` of this message.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":236133,"byte_end":236136,"line_start":232,"line_end":232,"column_start":12,"column_end":15},"name":"msg","qualname":"<Flash<&'a Request>>::msg","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the `msg` contents of this message.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1089},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"content","qualname":"::response::content","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":2602},{"krate":0,"index":2614},{"krate":0,"index":2611},{"krate":0,"index":2607},{"krate":0,"index":1097},{"krate":0,"index":1101},{"krate":0,"index":2645},{"krate":0,"index":2656},{"krate":0,"index":2653},{"krate":0,"index":2649},{"krate":0,"index":2617},{"krate":0,"index":2659},{"krate":0,"index":2670},{"krate":0,"index":2667},{"krate":0,"index":2663},{"krate":0,"index":2621},{"krate":0,"index":2673},{"krate":0,"index":2684},{"krate":0,"index":2681},{"krate":0,"index":2677},{"krate":0,"index":2625},{"krate":0,"index":2687},{"krate":0,"index":2698},{"krate":0,"index":2695},{"krate":0,"index":2691},{"krate":0,"index":2629},{"krate":0,"index":2701},{"krate":0,"index":2712},{"krate":0,"index":2709},{"krate":0,"index":2705},{"krate":0,"index":2633},{"krate":0,"index":2715},{"krate":0,"index":2726},{"krate":0,"index":2723},{"krate":0,"index":2719},{"krate":0,"index":2637},{"krate":0,"index":2729},{"krate":0,"index":2740},{"krate":0,"index":2737},{"krate":0,"index":2733},{"krate":0,"index":2641}],"decl_id":null,"docs":" Contains types that set the Content-Type of a response.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2602},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":238740,"byte_end":238747,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Content","qualname":"::response::content::Content","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the Content-Type of a `Responder` to a chosen value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2645},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240175,"byte_end":240179,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Json","qualname":"::response::content::Json","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nJSON\n</b>, or <i>\napplication/json\n</i>.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2659},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240219,"byte_end":240222,"line_start":86,"line_end":86,"column_start":5,"column_end":8},"name":"Xml","qualname":"::response::content::Xml","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nXML\n</b>, or <i>\ntext/xml\n</i>.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2673},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240252,"byte_end":240259,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"MsgPack","qualname":"::response::content::MsgPack","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nMessagePack\n</b>, or <i>\napplication/msgpack\n</i>.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2687},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240312,"byte_end":240316,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"Html","qualname":"::response::content::Html","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nHTML\n</b>, or <i>\ntext/html\n</i>.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2701},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240349,"byte_end":240354,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Plain","qualname":"::response::content::Plain","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nplain text\n</b>, or <i>\ntext/plain\n</i>.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2715},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240395,"byte_end":240398,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"Css","qualname":"::response::content::Css","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nCSS\n</b>, or <i>\ntext/css\n</i>.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2729},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":240428,"byte_end":240438,"line_start":91,"line_end":91,"column_start":5,"column_end":15},"name":"JavaScript","qualname":"::response::content::JavaScript","value":"","parent":null,"children":[],"decl_id":null,"docs":"Override the `Content-Type` of the response to <b>\nJavaScript\n</b>, or <i>\napplication/javascript\n</i>.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1102},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"status","qualname":"::response::status","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":2743},{"krate":0,"index":2755},{"krate":0,"index":2752},{"krate":0,"index":2748},{"krate":0,"index":1113},{"krate":0,"index":1117},{"krate":0,"index":2758},{"krate":0,"index":2769},{"krate":0,"index":2766},{"krate":0,"index":2762},{"krate":0,"index":1121},{"krate":0,"index":2772},{"krate":0,"index":2783},{"krate":0,"index":2780},{"krate":0,"index":2776},{"krate":0,"index":1125},{"krate":0,"index":2786},{"krate":0,"index":2797},{"krate":0,"index":2794},{"krate":0,"index":2790},{"krate":0,"index":1129},{"krate":0,"index":2800},{"krate":0,"index":2812},{"krate":0,"index":2809},{"krate":0,"index":2805},{"krate":0,"index":1133}],"decl_id":null,"docs":" Contains types that set the status code and corresponding headers of a\n response.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2743},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":241699,"byte_end":241706,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Created","qualname":"::response::status::Created","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 201 (Created).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2758},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":244041,"byte_end":244049,"line_start":99,"line_end":99,"column_start":12,"column_end":20},"name":"Accepted","qualname":"::response::status::Accepted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 202 (Accepted).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2772},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":245214,"byte_end":245224,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"BadRequest","qualname":"::response::status::BadRequest","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 400 (Bad Request).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2786},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":246074,"byte_end":246082,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"NotFound","qualname":"::response::status::NotFound","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sets the status of the response to 404 (Not Found).","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2800},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":246731,"byte_end":246737,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"Custom","qualname":"::response::status::Custom","value":"","parent":null,"children":[],"decl_id":null,"docs":" Creates a response with the given status code and underlying responder.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1149},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":164388,"byte_end":164394,"line_start":45,"line_end":45,"column_start":10,"column_end":16},"name":"Result","qualname":"::response::Result","value":"::std::result::Result<self::Response<'r>, ::http::Status>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Result` of a `Responder::respond` call.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1151},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"outcome","qualname":"::outcome","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","parent":null,"children":[{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":2815},{"krate":0,"index":2863},{"krate":0,"index":2859},{"krate":0,"index":2853},{"krate":0,"index":2844},{"krate":0,"index":2839},{"krate":0,"index":2834},{"krate":0,"index":2828},{"krate":0,"index":1158},{"krate":0,"index":1166},{"krate":0,"index":1174},{"krate":0,"index":1212},{"krate":0,"index":1221},{"krate":0,"index":1226}],"decl_id":null,"docs":" Success, failure, and forward handling.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2819},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251283,"byte_end":251290,"line_start":95,"line_end":95,"column_start":5,"column_end":12},"name":"Success","qualname":"::outcome::Outcome::Success","value":"Outcome::Success(S)","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Contains the success value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251341,"byte_end":251348,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"Failure","qualname":"::outcome::Outcome::Failure","value":"Outcome::Failure(E)","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Contains the failure error value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2825},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251399,"byte_end":251406,"line_start":99,"line_end":99,"column_start":5,"column_end":12},"name":"Forward","qualname":"::outcome::Outcome::Forward","value":"Outcome::Forward(F)","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Contains the value to forward on.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2815},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251224,"byte_end":251231,"line_start":93,"line_end":93,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::outcome::Outcome","value":"Outcome::{Success, Failure, Forward}","parent":null,"children":[{"krate":0,"index":2819},{"krate":0,"index":2822},{"krate":0,"index":2825}],"decl_id":null,"docs":" An enum representing success (`Success`), failure (`Failure`), or\n forwarding (`Forward`).","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251142,"byte_end":251153,"line_start":91,"line_end":91,"column_start":1,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1158},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251482,"byte_end":251493,"line_start":103,"line_end":103,"column_start":11,"column_end":22},"name":"IntoOutcome","qualname":"::outcome::IntoOutcome","value":"IntoOutcome<S, E, F>","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"decl_id":null,"docs":" Conversion trait from some type into an Outcome type.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1162},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251576,"byte_end":251583,"line_start":105,"line_end":105,"column_start":10,"column_end":17},"name":"Failure","qualname":"::outcome::IntoOutcome::Failure","value":"type Failure: Sized;","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":" The type to use when returning an `Outcome::Failure`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1163},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251664,"byte_end":251671,"line_start":108,"line_end":108,"column_start":10,"column_end":17},"name":"Forward","qualname":"::outcome::IntoOutcome::Forward","value":"type Forward: Sized;","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":" The type to use when returning an `Outcome::Forward`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":251894,"byte_end":251906,"line_start":113,"line_end":113,"column_start":8,"column_end":20},"name":"into_outcome","qualname":"::outcome::IntoOutcome::into_outcome","value":"fn (self, failure: Self::Failure) -> Outcome<S, E, F>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":" Converts `self` into an `Outcome`. If `self` represents a success, an\n `Outcome::Success` is returned. Otherwise, an `Outcome::Failure` is\n returned with `failure` as the inner value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":252172,"byte_end":252182,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"or_forward","qualname":"::outcome::IntoOutcome::or_forward","value":"fn (self, forward: Self::Forward) -> Outcome<S, E, F>","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":" Converts `self` into an `Outcome`. If `self` represents a success, an\n `Outcome::Success` is returned. Otherwise, an `Outcome::Forward` is\n returned with `forward` as the inner value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":253159,"byte_end":253165,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Outcome<S, E, F>>::unwrap","value":"fn (self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the Outcome, yielding the contents of a Success.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":253138,"byte_end":253147,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":253766,"byte_end":253772,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"expect","qualname":"<Outcome<S, E, F>>::expect","value":"fn (self, message: &str) -> S","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the Outcome, yielding the contents of a Success.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":253745,"byte_end":253754,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":254501,"byte_end":254511,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"is_success","qualname":"<Outcome<S, E, F>>::is_success","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Success`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":254480,"byte_end":254489,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":255187,"byte_end":255197,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"is_failure","qualname":"<Outcome<S, E, F>>::is_failure","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Failure`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":255166,"byte_end":255175,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":255873,"byte_end":255883,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"is_forward","qualname":"<Outcome<S, E, F>>::is_forward","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if this `Outcome` is a `Forward`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":255852,"byte_end":255861,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":256700,"byte_end":256709,"line_start":283,"line_end":283,"column_start":12,"column_end":21},"name":"succeeded","qualname":"<Outcome<S, E, F>>::succeeded","value":"fn (self) -> Option<S>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<S>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":256679,"byte_end":256688,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":257543,"byte_end":257549,"line_start":309,"line_end":309,"column_start":12,"column_end":18},"name":"failed","qualname":"<Outcome<S, E, F>>::failed","value":"fn (self) -> Option<E>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<E>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":257522,"byte_end":257531,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":258375,"byte_end":258384,"line_start":335,"line_end":335,"column_start":12,"column_end":21},"name":"forwarded","qualname":"<Outcome<S, E, F>>::forwarded","value":"fn (self) -> Option<F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Option<F>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":258354,"byte_end":258363,"line_start":334,"line_end":334,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":259299,"byte_end":259309,"line_start":362,"line_end":362,"column_start":12,"column_end":22},"name":"success_or","qualname":"<Outcome<S, E, F>>::success_or","value":"fn <T> (self, value: T) -> Result<S, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":259278,"byte_end":259287,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":260328,"byte_end":260343,"line_start":390,"line_end":390,"column_start":12,"column_end":27},"name":"success_or_else","qualname":"<Outcome<S, E, F>>::success_or_else","value":"fn <T, V> (self, f: V) -> Result<S, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Result<S, T>` for a given `T`\n produced from a supplied function or closure.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":260307,"byte_end":260316,"line_start":389,"line_end":389,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":260963,"byte_end":260969,"line_start":410,"line_end":410,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<Outcome<S, E, F>>::as_ref","value":"fn (&self) -> Outcome<&S, &E, &F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Outcome<&S, &E, &F>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":260942,"byte_end":260951,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":261687,"byte_end":261690,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"map","qualname":"<Outcome<S, E, F>>::map","value":"fn <T, M> (self, f: M) -> Outcome<T, E, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the\n function `f` to the value of type `S` in `self` if `self` is an\n `Outcome::Success`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":261666,"byte_end":261675,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":262423,"byte_end":262434,"line_start":454,"line_end":454,"column_start":12,"column_end":23},"name":"map_failure","qualname":"<Outcome<S, E, F>>::map_failure","value":"fn <T, M> (self, f: M) -> Outcome<S, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the\n function `f` to the value of type `E` in `self` if `self` is an\n `Outcome::Failure`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":262402,"byte_end":262411,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":263165,"byte_end":263176,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"map_forward","qualname":"<Outcome<S, E, F>>::map_forward","value":"fn <T, M> (self, f: M) -> Outcome<S, E, T>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the\n function `f` to the value of type `F` in `self` if `self` is an\n `Outcome::Forward`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":263144,"byte_end":263153,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":264023,"byte_end":264031,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"and_then","qualname":"<Outcome<S, E, F>>::and_then","value":"fn <T, M> (self, f: M) -> Outcome<T, E, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<T, E, F>` by applying the\n function `f` to the value of type `S` in `self` if `self` is an\n `Outcome::Success`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":264002,"byte_end":264011,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":264891,"byte_end":264903,"line_start":534,"line_end":534,"column_start":12,"column_end":24},"name":"failure_then","qualname":"<Outcome<S, E, F>>::failure_then","value":"fn <T, M> (self, f: M) -> Outcome<S, T, F>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, T, F>` by applying the\n function `f` to the value of type `E` in `self` if `self` is an\n `Outcome::Failure`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":264870,"byte_end":264879,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1207},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":265791,"byte_end":265803,"line_start":563,"line_end":563,"column_start":12,"column_end":24},"name":"forward_then","qualname":"<Outcome<S, E, F>>::forward_then","value":"fn <T, M> (self, f: M) -> Outcome<S, E, T>","parent":null,"children":[],"decl_id":null,"docs":" Maps an `Outcome<S, E, F>` to an `Outcome<S, E, T>` by applying the\n function `f` to the value of type `F` in `self` if `self` is an\n `Outcome::Forward`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":265770,"byte_end":265779,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":266446,"byte_end":266452,"line_start":585,"line_end":585,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<Outcome<S, E, F>>::as_mut","value":"fn (&mut self) -> Outcome<&mut S, &mut E, &mut F>","parent":null,"children":[],"decl_id":null,"docs":" Converts from `Outcome<S, E, F>` to `Outcome<&mut S, &mut E, &mut F>`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":266425,"byte_end":266434,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1231},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1250},{"krate":0,"index":1271},{"krate":0,"index":1359},{"krate":0,"index":1393},{"krate":0,"index":1416},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":3031},{"krate":0,"index":3037},{"krate":0,"index":3034},{"krate":0,"index":1490},{"krate":0,"index":1507}],"decl_id":null,"docs":" Application configuration and configuration parameter retrieval.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2869},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311136,"byte_end":311144,"line_start":14,"line_end":14,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::config::error::ConfigError::NotFound","value":"ConfigError::NotFound","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" The configuration file was not found.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2871},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311219,"byte_end":311226,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"IoError","qualname":"::config::error::ConfigError::IoError","value":"ConfigError::IoError","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" There was an I/O error while reading the configuration file.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2873},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311362,"byte_end":311364,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"Io","qualname":"::config::error::ConfigError::Io","value":"ConfigError::Io(io::Error, &'static str)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" There was an I/O error while setting a configuration parameter.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2877},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311510,"byte_end":311521,"line_start":24,"line_end":24,"column_start":5,"column_end":16},"name":"BadFilePath","qualname":"::config::error::ConfigError::BadFilePath","value":"ConfigError::BadFilePath(PathBuf, &'static str)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" The path at which the configuration file was found was invalid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2881},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311658,"byte_end":311664,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"BadEnv","qualname":"::config::error::ConfigError::BadEnv","value":"ConfigError::BadEnv(String)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" An environment specified in `ROCKET_ENV` is invalid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2884},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311807,"byte_end":311815,"line_start":32,"line_end":32,"column_start":5,"column_end":13},"name":"BadEntry","qualname":"::config::error::ConfigError::BadEntry","value":"ConfigError::BadEntry(String, PathBuf)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" An environment specified as a table `[environment]` is invalid.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2888},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311984,"byte_end":311991,"line_start":36,"line_end":36,"column_start":5,"column_end":12},"name":"BadType","qualname":"::config::error::ConfigError::BadType","value":"ConfigError::BadType(String, &'static str, &'static str, Option<PathBuf>)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" A config key was specified with a value of the wrong type.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2894},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312178,"byte_end":312188,"line_start":40,"line_end":40,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::config::error::ConfigError::ParseError","value":"ConfigError::ParseError(String, PathBuf, String, Option<(usize, usize)>)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" There was a TOML parsing error.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2900},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312372,"byte_end":312381,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"BadEnvVal","qualname":"::config::error::ConfigError::BadEnvVal","value":"ConfigError::BadEnvVal(String, String, String)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" There was a TOML parsing error in a config environment variable.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2905},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312481,"byte_end":312491,"line_start":48,"line_end":48,"column_start":5,"column_end":15},"name":"UnknownKey","qualname":"::config::error::ConfigError::UnknownKey","value":"ConfigError::UnknownKey(String)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" The entry (key) is unknown.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2908},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312593,"byte_end":312600,"line_start":52,"line_end":52,"column_start":5,"column_end":12},"name":"Missing","qualname":"::config::error::ConfigError::Missing","value":"ConfigError::Missing(String)","parent":{"krate":0,"index":2868},"children":[],"decl_id":null,"docs":" The entry (key) was expected but was missing.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2868},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":311072,"byte_end":311083,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"ConfigError","qualname":"::config::error::ConfigError","value":"ConfigError::{NotFound, IoError, Io, BadFilePath, BadEnv, BadEntry, BadType, ParseError, BadEnvVal, UnknownKey, Missing}","parent":null,"children":[{"krate":0,"index":2869},{"krate":0,"index":2871},{"krate":0,"index":2873},{"krate":0,"index":2877},{"krate":0,"index":2881},{"krate":0,"index":2884},{"krate":0,"index":2888},{"krate":0,"index":2894},{"krate":0,"index":2900},{"krate":0,"index":2905},{"krate":0,"index":2908}],"decl_id":null,"docs":" The type of a configuration error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312707,"byte_end":312719,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"pretty_print","qualname":"<ConfigError>::pretty_print","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Prints this configuration error with Rocket formatting.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":315837,"byte_end":315849,"line_start":125,"line_end":125,"column_start":12,"column_end":24},"name":"is_not_found","qualname":"<ConfigError>::is_not_found","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is of `NotFound` variant.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":315808,"byte_end":315825,"line_start":124,"line_end":124,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2914},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":319588,"byte_end":319599,"line_start":15,"line_end":15,"column_start":5,"column_end":16},"name":"Development","qualname":"::config::environment::Environment::Development","value":"Environment::Development","parent":{"krate":0,"index":2913},"children":[],"decl_id":null,"docs":" The development environment.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2916},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":319638,"byte_end":319645,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"name":"Staging","qualname":"::config::environment::Environment::Staging","value":"Environment::Staging","parent":{"krate":0,"index":2913},"children":[],"decl_id":null,"docs":" The staging environment.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2918},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":319687,"byte_end":319697,"line_start":19,"line_end":19,"column_start":5,"column_end":15},"name":"Production","qualname":"::config::environment::Environment::Production","value":"Environment::Production","parent":{"krate":0,"index":2913},"children":[],"decl_id":null,"docs":" The production environment.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2913},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":319533,"byte_end":319544,"line_start":13,"line_end":13,"column_start":10,"column_end":21},"name":"Environment","qualname":"::config::environment::Environment","value":"Environment::{Development, Staging, Production}","parent":null,"children":[{"krate":0,"index":2914},{"krate":0,"index":2916},{"krate":0,"index":2918}],"decl_id":null,"docs":" An enum corresponding to the valid configuration environments.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":320427,"byte_end":320433,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"active","qualname":"<Environment>::active","value":"fn () -> Result<Environment, ConfigError>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the \"active\" environment as determined by the `ROCKET_ENV`\n environment variable. If `ROCKET_ENV` is not set, returns `Development`\n when the application was compiled in `debug` mode and `Production` when\n the application was compiled in `release` mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321046,"byte_end":321052,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"is_dev","qualname":"<Environment>::is_dev","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Development`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321025,"byte_end":321034,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321404,"byte_end":321412,"line_start":74,"line_end":74,"column_start":12,"column_end":20},"name":"is_stage","qualname":"<Environment>::is_stage","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Staging`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321383,"byte_end":321392,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321761,"byte_end":321768,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"is_prod","qualname":"<Environment>::is_prod","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is `Environment::Production`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321740,"byte_end":321749,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2932},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":324811,"byte_end":324817,"line_start":38,"line_end":38,"column_start":12,"column_end":18},"name":"Config","qualname":"::config::config::Config","value":"Config { environment, address, port, workers, keep_alive, log_level, limits, extras }","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935},{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2943},{"krate":0,"index":2944}],"decl_id":null,"docs":" Structure for Rocket application configuration.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2933},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":324892,"byte_end":324903,"line_start":40,"line_end":40,"column_start":9,"column_end":20},"name":"environment","qualname":"::config::config::Config::environment","value":"config::environment::Environment","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" The environment that this configuration corresponds to.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2934},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":324959,"byte_end":324966,"line_start":42,"line_end":42,"column_start":9,"column_end":16},"name":"address","qualname":"::config::config::Config::address","value":"std::string::String","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" The address to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2935},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":325014,"byte_end":325018,"line_start":44,"line_end":44,"column_start":9,"column_end":13},"name":"port","qualname":"::config::config::Config::port","value":"u16","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" The port to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2936},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":325084,"byte_end":325091,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"workers","qualname":"::config::config::Config::workers","value":"u16","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" The number of workers to run concurrently.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2937},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":325165,"byte_end":325175,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"name":"keep_alive","qualname":"::config::config::Config::keep_alive","value":"std::option::Option<u32>","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Keep-alive timeout in seconds or None if disabled.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2938},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":325235,"byte_end":325244,"line_start":50,"line_end":50,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::config::Config::log_level","value":"logger::LoggingLevel","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" How much information to log.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2941},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":325422,"byte_end":325428,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"name":"limits","qualname":"::config::config::Config::limits","value":"config::custom_values::Limits","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Streaming read size limits.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2942},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":325513,"byte_end":325519,"line_start":58,"line_end":58,"column_start":9,"column_end":15},"name":"extras","qualname":"::config::config::Config::extras","value":"std::collections::HashMap<std::string::String, toml::Value>","parent":{"krate":0,"index":2932},"children":[],"decl_id":null,"docs":" Extra parameters that aren't part of Rocket's core config.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":326641,"byte_end":326646,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"build","qualname":"<Config>::build","value":"fn (env: Environment) -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Returns a builder for `Config` structure where the default parameters\n are set to those of `env`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1299},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":327094,"byte_end":327097,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (env: Environment) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters for the environment\n `env`. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":328013,"byte_end":328019,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"active","qualname":"<Config>::active","value":"fn () -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the active environment\n as determined by the `ROCKET_ENV` environment variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":328458,"byte_end":328469,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"development","qualname":"<Config>::development","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the development\n environment. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":328890,"byte_end":328897,"line_start":166,"line_end":166,"column_start":12,"column_end":19},"name":"staging","qualname":"<Config>::staging","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the staging\n environment. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":329320,"byte_end":329330,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"production","qualname":"<Config>::production","value":"fn () -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Config` with the default parameters of the production\n environment. See [`config`](::config) for a list of defaults.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":335109,"byte_end":335117,"line_start":337,"line_end":337,"column_start":12,"column_end":20},"name":"set_root","qualname":"<Config>::set_root","value":"fn <P> (&mut self, path: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the root directory of this configuration to `root`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":335745,"byte_end":335756,"line_start":358,"line_end":358,"column_start":12,"column_end":23},"name":"set_address","qualname":"<Config>::set_address","value":"fn <A> (&mut self, address: A) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the address of `self` to `address`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":336381,"byte_end":336389,"line_start":380,"line_end":380,"column_start":12,"column_end":20},"name":"set_port","qualname":"<Config>::set_port","value":"fn (&mut self, port: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the `port` of `self` to `port`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":336360,"byte_end":336369,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1316},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":336786,"byte_end":336797,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"set_workers","qualname":"<Config>::set_workers","value":"fn (&mut self, workers: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of `workers` in `self` to `workers`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":336765,"byte_end":336774,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":337413,"byte_end":337427,"line_start":419,"line_end":419,"column_start":12,"column_end":26},"name":"set_keep_alive","qualname":"<Config>::set_keep_alive","value":"fn (&mut self, timeout: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the keep-alive timeout to `timeout` seconds. If `timeout` is `0`,\n keep-alive is disabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":337392,"byte_end":337401,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":338215,"byte_end":338229,"line_start":445,"line_end":445,"column_start":12,"column_end":26},"name":"set_secret_key","qualname":"<Config>::set_secret_key","value":"fn <K> (&mut self, key: K) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secret_key` in `self` to `key` which must be a 256-bit base64\n encoded string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1320},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":339134,"byte_end":339147,"line_start":475,"line_end":475,"column_start":12,"column_end":25},"name":"set_log_level","qualname":"<Config>::set_log_level","value":"fn (&mut self, log_level: LoggingLevel) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the logging level for `self` to `log_level`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":339113,"byte_end":339122,"line_start":474,"line_end":474,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":339548,"byte_end":339558,"line_start":490,"line_end":490,"column_start":12,"column_end":22},"name":"set_limits","qualname":"<Config>::set_limits","value":"fn (&mut self, limits: Limits) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the receive limits in `self` to `limits`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":339527,"byte_end":339536,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":341478,"byte_end":341485,"line_start":545,"line_end":545,"column_start":12,"column_end":19},"name":"set_tls","qualname":"<Config>::set_tls","value":"fn (&mut self, _: &str, _: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not (feature = \"tls\"))","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":341438,"byte_end":341466,"line_start":544,"line_end":544,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":342473,"byte_end":342483,"line_start":579,"line_end":579,"column_start":12,"column_end":22},"name":"set_extras","qualname":"<Config>::set_extras","value":"fn (&mut self, extras: HashMap<String, Value>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the extras for `self` to be the key/value pairs in `extras`.\n encoded string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":342452,"byte_end":342461,"line_start":578,"line_end":578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":343271,"byte_end":343277,"line_start":604,"line_end":604,"column_start":12,"column_end":18},"name":"extras","qualname":"<Config>::extras","value":"fn <'a> (&'a self) -> impl Iterator<Item = (&'a str, &'a Value)>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the names and values of all of the extras in\n `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":343250,"byte_end":343259,"line_start":603,"line_end":603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":343543,"byte_end":343554,"line_start":611,"line_end":611,"column_start":12,"column_end":23},"name":"tls_enabled","qualname":"<Config>::tls_enabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if TLS is enabled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":344407,"byte_end":344416,"line_start":643,"line_end":643,"column_start":12,"column_end":21},"name":"get_extra","qualname":"<Config>::get_extra","value":"fn <'a> (&'a self, name: &str) -> Result<&'a Value>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a raw value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":345171,"byte_end":345178,"line_start":666,"line_end":666,"column_start":12,"column_end":19},"name":"get_str","qualname":"<Config>::get_str","value":"fn <'a> (&'a self, name: &str) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a borrowed string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":345990,"byte_end":346000,"line_start":690,"line_end":690,"column_start":12,"column_end":22},"name":"get_string","qualname":"<Config>::get_string","value":"fn (&self, name: &str) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as an owned string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":346693,"byte_end":346700,"line_start":713,"line_end":713,"column_start":12,"column_end":19},"name":"get_int","qualname":"<Config>::get_int","value":"fn (&self, name: &str) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as an integer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":347470,"byte_end":347478,"line_start":737,"line_end":737,"column_start":12,"column_end":20},"name":"get_bool","qualname":"<Config>::get_bool","value":"fn (&self, name: &str) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a boolean.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":348236,"byte_end":348245,"line_start":761,"line_end":761,"column_start":12,"column_end":21},"name":"get_float","qualname":"<Config>::get_float","value":"fn (&self, name: &str) -> Result<f64>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a float.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":349022,"byte_end":349031,"line_start":785,"line_end":785,"column_start":12,"column_end":21},"name":"get_slice","qualname":"<Config>::get_slice","value":"fn (&self, name: &str) -> Result<&Array>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a slice of an array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":349931,"byte_end":349940,"line_start":813,"line_end":813,"column_start":12,"column_end":21},"name":"get_table","qualname":"<Config>::get_table","value":"fn (&self, name: &str) -> Result<&Table>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a table.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":350846,"byte_end":350858,"line_start":839,"line_end":839,"column_start":12,"column_end":24},"name":"get_datetime","qualname":"<Config>::get_datetime","value":"fn (&self, name: &str) -> Result<&Datetime>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to retrieve the extra named `name` as a datetime value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":351891,"byte_end":351895,"line_start":866,"line_end":866,"column_start":12,"column_end":16},"name":"root","qualname":"<Config>::root","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the root path of the configuration, if one is known.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":353374,"byte_end":353387,"line_start":905,"line_end":905,"column_start":12,"column_end":25},"name":"root_relative","qualname":"<Config>::root_relative","value":"fn <P> (&self, path: P) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" Returns `path` relative to this configuration.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2955},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":354962,"byte_end":354975,"line_start":8,"line_end":8,"column_start":12,"column_end":25},"name":"ConfigBuilder","qualname":"::config::builder::ConfigBuilder","value":"ConfigBuilder { environment, address, port, workers, keep_alive, log_level, secret_key, tls, limits, extras, root }","parent":null,"children":[{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966}],"decl_id":null,"docs":" Structure following the builder pattern for building `Config` structures.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2956},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355050,"byte_end":355061,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"name":"environment","qualname":"::config::builder::ConfigBuilder::environment","value":"config::environment::Environment","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" The environment that this configuration corresponds to.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2957},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355117,"byte_end":355124,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"address","qualname":"::config::builder::ConfigBuilder::address","value":"std::string::String","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" The address to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2958},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355172,"byte_end":355176,"line_start":14,"line_end":14,"column_start":9,"column_end":13},"name":"port","qualname":"::config::builder::ConfigBuilder::port","value":"u16","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" The port to serve on.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2959},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355241,"byte_end":355248,"line_start":16,"line_end":16,"column_start":9,"column_end":16},"name":"workers","qualname":"::config::builder::ConfigBuilder::workers","value":"u16","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" The number of workers to run in parallel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2960},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355319,"byte_end":355329,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"name":"keep_alive","qualname":"::config::builder::ConfigBuilder::keep_alive","value":"u32","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" Keep-alive timeout in seconds or disabled if 0.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2961},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355381,"byte_end":355390,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"name":"log_level","qualname":"::config::builder::ConfigBuilder::log_level","value":"logger::LoggingLevel","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" How much information to log.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2962},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355438,"byte_end":355448,"line_start":22,"line_end":22,"column_start":9,"column_end":19},"name":"secret_key","qualname":"::config::builder::ConfigBuilder::secret_key","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" The secret key.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2963},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355555,"byte_end":355558,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"name":"tls","qualname":"::config::builder::ConfigBuilder::tls","value":"std::option::Option<(std::string::String, std::string::String)>","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" TLS configuration (path to certificates file, path to private key file).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2964},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355615,"byte_end":355621,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"limits","qualname":"::config::builder::ConfigBuilder::limits","value":"config::custom_values::Limits","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" Size limits.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2965},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355705,"byte_end":355711,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"name":"extras","qualname":"::config::builder::ConfigBuilder::extras","value":"std::collections::HashMap<std::string::String, toml::Value>","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" Any extra parameters that aren't part of Rocket's config.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2966},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355796,"byte_end":355800,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"name":"root","qualname":"::config::builder::ConfigBuilder::root","value":"std::option::Option<std::path::PathBuf>","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":" The root directory of this config, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":356379,"byte_end":356382,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<ConfigBuilder>::new","value":"fn (environment: Environment) -> ConfigBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ConfigBuilder` instance using the default parameters from\n the given `environment`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":357283,"byte_end":357290,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"address","qualname":"<ConfigBuilder>::address","value":"fn <A> (mut self, address: A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `address` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":357754,"byte_end":357758,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"port","qualname":"<ConfigBuilder>::port","value":"fn (mut self, port: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `port` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":357733,"byte_end":357742,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":358192,"byte_end":358199,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"workers","qualname":"<ConfigBuilder>::workers","value":"fn (mut self, workers: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets `workers` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":358171,"byte_end":358180,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":358876,"byte_end":358886,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"keep_alive","qualname":"<ConfigBuilder>::keep_alive","value":"fn (mut self, timeout: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the keep-alive timeout to `timeout` seconds. If `timeout` is `0`,\n keep-alive is disabled.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":358855,"byte_end":358864,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":359396,"byte_end":359405,"line_start":165,"line_end":165,"column_start":12,"column_end":21},"name":"log_level","qualname":"<ConfigBuilder>::log_level","value":"fn (mut self, log_level: LoggingLevel) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `log_level` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":359375,"byte_end":359384,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":359896,"byte_end":359906,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"secret_key","qualname":"<ConfigBuilder>::secret_key","value":"fn <K> (mut self, key: K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `secret_key` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":360364,"byte_end":360370,"line_start":198,"line_end":198,"column_start":12,"column_end":18},"name":"limits","qualname":"<ConfigBuilder>::limits","value":"fn (mut self, limits: Limits) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `limits` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":361068,"byte_end":361071,"line_start":220,"line_end":220,"column_start":12,"column_end":15},"name":"tls","qualname":"<ConfigBuilder>::tls","value":"fn <C, K> (mut self, certs_path: C, key_path: K) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the TLS configuration in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":361674,"byte_end":361685,"line_start":241,"line_end":241,"column_start":12,"column_end":23},"name":"environment","qualname":"<ConfigBuilder>::environment","value":"fn (mut self, env: Environment) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `environment` in the configuration being built.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":361653,"byte_end":361662,"line_start":240,"line_end":240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":362188,"byte_end":362192,"line_start":260,"line_end":260,"column_start":12,"column_end":16},"name":"root","qualname":"<ConfigBuilder>::root","value":"fn <P> (mut self, path: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the `root` in the configuration being built.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":363046,"byte_end":363051,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"extra","qualname":"<ConfigBuilder>::extra","value":"fn <V> (mut self, name: &str, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an extra configuration parameter with `name` and `value` to the\n configuration being built. The value can be any type that implements\n `Into<Value>` including `&str`, `String`, `Vec<V: Into<Value>>`,\n `HashMap<S: Into<String>, V: Into<Value>>`, and most integer and float\n types.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":363921,"byte_end":363929,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"finalize","qualname":"<ConfigBuilder>::finalize","value":"fn (self) -> Result<Config>","parent":null,"children":[],"decl_id":null,"docs":" Return the `Config` structure that was being built by this builder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":365177,"byte_end":365183,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<ConfigBuilder>::unwrap","value":"fn (self) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Return the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":365148,"byte_end":365165,"line_start":358,"line_end":358,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":365896,"byte_end":365902,"line_start":382,"line_end":382,"column_start":12,"column_end":18},"name":"expect","qualname":"<ConfigBuilder>::expect","value":"fn (self, msg: &str) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Config` structure that was being built by this builder.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":365867,"byte_end":365884,"line_start":381,"line_end":381,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":3024},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373292,"byte_end":373298,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"Limits","qualname":"::config::custom_values::Limits","value":"Limits {  }","parent":null,"children":[{"krate":0,"index":3025},{"krate":0,"index":3026}],"decl_id":null,"docs":" Mapping from data type to size limits.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373901,"byte_end":373904,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Limits>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Limits` structure with the default limits set.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373880,"byte_end":373889,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1434},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":374559,"byte_end":374564,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"limit","qualname":"<Limits>::limit","value":"fn <S> (mut self, name: S, limit: u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Adds or replaces a limit in `self`, consuming `self` and returning a new\n `Limits` structure with the added or replaced limit.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":375621,"byte_end":375624,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"get","qualname":"<Limits>::get","value":"fn (&self, name: &str) -> Option<u64>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the set limit, if any, for the data type with name `name`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1488},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":276460,"byte_end":276466,"line_start":222,"line_end":222,"column_start":10,"column_end":16},"name":"Result","qualname":"::config::Result","value":"::std::result::Result<T, ConfigError>","parent":null,"children":[],"decl_id":null,"docs":" Wraps `std::result` with the error type of [`ConfigError`].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3031},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":276566,"byte_end":276578,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"RocketConfig","qualname":"::config::RocketConfig","value":"RocketConfig { active_env }","parent":null,"children":[{"krate":0,"index":3032},{"krate":0,"index":3033}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3032},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":276589,"byte_end":276599,"line_start":227,"line_end":227,"column_start":9,"column_end":19},"name":"active_env","qualname":"::config::RocketConfig::active_env","value":"config::environment::Environment","parent":{"krate":0,"index":3031},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":276829,"byte_end":276833,"line_start":234,"line_end":234,"column_start":12,"column_end":16},"name":"read","qualname":"<RocketConfig>::read","value":"fn () -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration from the `Rocket.toml` file. The file is search\n for recursively up the tree, starting from the CWD.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":277559,"byte_end":277578,"line_start":251,"line_end":251,"column_start":12,"column_end":31},"name":"active_default_from","qualname":"<RocketConfig>::active_default_from","value":"fn (filename: Option<&Path>) -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Return the default configuration for all environments and marks the\n active environment (via the CONFIG_ENV variable) as active.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":278595,"byte_end":278609,"line_start":275,"line_end":275,"column_start":12,"column_end":26},"name":"active_default","qualname":"<RocketConfig>::active_default","value":"fn () -> Result<RocketConfig>","parent":null,"children":[],"decl_id":null,"docs":" Return the default configuration for all environments and marks the\n active environment (via the CONFIG_ENV variable) as active.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":280267,"byte_end":280270,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"get","qualname":"<RocketConfig>::get","value":"fn (&self, env: Environment) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the `Config` for the environment `env`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":280549,"byte_end":280555,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"active","qualname":"<RocketConfig>::active","value":"fn (&self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the `Config` for the active environment.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":280528,"byte_end":280537,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1512},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"data","qualname":"::data","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/mod.rs","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1558},{"krate":0,"index":1579},{"krate":0,"index":1599},{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688}],"decl_id":null,"docs":" Types and traits for handling incoming body data.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1539},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":381456,"byte_end":381460,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"Data","qualname":"::data::data::Data","value":"Data {  }","parent":null,"children":[{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"decl_id":null,"docs":" Type representing the data in the body of an incoming request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":382037,"byte_end":382041,"line_start":81,"line_end":81,"column_start":12,"column_end":16},"name":"open","qualname":"<Data>::open","value":"fn (mut self) -> DataStream","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw data stream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":385097,"byte_end":385101,"line_start":157,"line_end":157,"column_start":12,"column_end":16},"name":"peek","qualname":"<Data>::peek","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `peek` buffer.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":385068,"byte_end":385085,"line_start":156,"line_end":156,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":385726,"byte_end":385739,"line_start":181,"line_end":181,"column_start":12,"column_end":25},"name":"peek_complete","qualname":"<Data>::peek_complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `peek` buffer contains all of the data in the body\n of the request. Returns `false` if it does not or if it is not known if\n it does.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":385697,"byte_end":385714,"line_start":180,"line_end":180,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":386317,"byte_end":386326,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"stream_to","qualname":"<Data>::stream_to","value":"fn <W> (self, writer: &mut W) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to write the body of the request to any `Write` type.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":386288,"byte_end":386305,"line_start":201,"line_end":201,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":386985,"byte_end":386999,"line_start":224,"line_end":224,"column_start":12,"column_end":26},"name":"stream_to_file","qualname":"<Data>::stream_to_file","value":"fn <P> (self, path: P) -> io::Result<u64>","parent":null,"children":[],"decl_id":null,"docs":" A helper method to write the body of the request to a file at the path\n determined by `path`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":386956,"byte_end":386973,"line_start":223,"line_end":223,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":1569},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data_stream.rs","byte_start":389643,"byte_end":389653,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"DataStream","qualname":"::data::data_stream::DataStream","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw data stream of a request body.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1608},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":394052,"byte_end":394059,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::data::from_data::Outcome","value":"outcome::Outcome<S, (Status, E), Data>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `FromData` conversion.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1622},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":394927,"byte_end":394932,"line_start":40,"line_end":40,"column_start":5,"column_end":10},"name":"Owned","qualname":"::data::from_data::Transform::Owned","value":"Transform::Owned(T)","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":" Indicates that data should be or has been transformed into the\n [`FromData::Owned`] variant.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1625},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":395053,"byte_end":395061,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::data::from_data::Transform::Borrowed","value":"Transform::Borrowed(B)","parent":{"krate":0,"index":1619},"children":[],"decl_id":null,"docs":" Indicates that data should be or has been transformed into the\n [`FromData::Borrowed`] variant.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1619},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":394793,"byte_end":394802,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"Transform","qualname":"::data::from_data::Transform","value":"Transform::{Owned, Borrowed}","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1625}],"decl_id":null,"docs":" Indicates how incoming data should be transformed before being parsed and\n validated by a data guard.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":395475,"byte_end":395480,"line_start":64,"line_end":64,"column_start":12,"column_end":17},"name":"owned","qualname":"<Transform<T, B>>::owned","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Owned` value if `self` is `Owned`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":395454,"byte_end":395463,"line_start":63,"line_end":63,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":396026,"byte_end":396034,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<Transform<T, B>>::borrowed","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Borrowed` value if `self` is `Borrowed`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":396005,"byte_end":396014,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":1633},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":396755,"byte_end":396766,"line_start":105,"line_end":105,"column_start":10,"column_end":21},"name":"Transformed","qualname":"::data::from_data::Transformed","value":"Transform<Outcome<<T as FromData<'a>>::Owned, <T as FromData<'a>>::Error>,\n          Outcome<&'a <T as FromData<'a>>::Borrowed,\n                  <T as FromData<'a>>::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to the `outcome` input type of [`FromData::from_data`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1636},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":405565,"byte_end":405573,"line_start":322,"line_end":322,"column_start":11,"column_end":19},"name":"FromData","qualname":"::data::from_data::FromData","value":"FromData<'a>: Sized","parent":null,"children":[{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642}],"decl_id":null,"docs":" Trait implemented by data guards to derive a value from request body data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1638},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":405662,"byte_end":405667,"line_start":324,"line_end":324,"column_start":10,"column_end":15},"name":"Error","qualname":"::data::from_data::FromData::Error","value":"type Error;","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" The associated error to be returned when the guard fails.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1639},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":405873,"byte_end":405878,"line_start":330,"line_end":330,"column_start":10,"column_end":15},"name":"Owned","qualname":"::data::from_data::FromData::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" The owned type returned from [`FromData::transform()`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1640},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":406192,"byte_end":406200,"line_start":337,"line_end":337,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::data::from_data::FromData::Borrowed","value":"type Borrowed: ?Sized;","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" The _borrowed_ type consumed by [`FromData::from_data()`] when\n [`FromData::transform()`] returns a [`Transform::Borrowed`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":407340,"byte_end":407349,"line_start":357,"line_end":357,"column_start":8,"column_end":17},"name":"transform","qualname":"::data::from_data::FromData::transform","value":"fn (request: &Request, data: Data) -> Transform<Outcome<Self::Owned, Self::Error>>","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Transforms `data` into a value of type `Self::Owned`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":408575,"byte_end":408584,"line_start":386,"line_end":386,"column_start":8,"column_end":17},"name":"from_data","qualname":"::data::from_data::FromData::from_data","value":"fn (request: &Request, outcome: Transformed<'a, Self>) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":1636},"children":[],"decl_id":null,"docs":" Validates, parses, and converts the incoming request body data into an\n instance of `Self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1650},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":412278,"byte_end":412292,"line_start":495,"line_end":495,"column_start":11,"column_end":25},"name":"FromDataSimple","qualname":"::data::from_data::FromDataSimple","value":"FromDataSimple: Sized","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652}],"decl_id":null,"docs":" A simple, less complex variant of [`FromData`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1651},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":412377,"byte_end":412382,"line_start":497,"line_end":497,"column_start":10,"column_end":15},"name":"Error","qualname":"::data::from_data::FromDataSimple::Error","value":"type Error;","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" The associated error to be returned when the guard fails.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1652},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":412725,"byte_end":412734,"line_start":505,"line_end":505,"column_start":8,"column_end":17},"name":"from_data","qualname":"::data::from_data::FromDataSimple::from_data","value":"fn (request: &Request, data: Data) -> Outcome<Self, Self::Error>","parent":{"krate":0,"index":1650},"children":[],"decl_id":null,"docs":" Validates, parses, and converts an instance of `Self` from the incoming\n request body data.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1694},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handler","qualname":"::handler","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","parent":null,"children":[{"krate":0,"index":1695},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":1713},{"krate":0,"index":1715},{"krate":0,"index":1720},{"krate":0,"index":1722}],"decl_id":null,"docs":" Types and traits for request and error handlers and their return values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1703},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":415480,"byte_end":415487,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Outcome","qualname":"::handler::Outcome","value":"outcome::Outcome<Response<'r>, Status, Data>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for the `Outcome` of a `Handler`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1705},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":419439,"byte_end":419446,"line_start":134,"line_end":134,"column_start":11,"column_end":18},"name":"Handler","qualname":"::handler::Handler","value":"Handler: Cloneable + Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1706}],"decl_id":null,"docs":" Trait implemented by types that can handle requests.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420112,"byte_end":420118,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"handle","qualname":"::handler::Handler::handle","value":"fn <'r> (&self, request: &'r Request, data: Data) -> Outcome<'r>","parent":{"krate":0,"index":1705},"children":[],"decl_id":null,"docs":" Called by Rocket when a `Request` with its associated `Data` should be\n handled by this handler.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1708},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420479,"byte_end":420488,"line_start":153,"line_end":153,"column_start":11,"column_end":20},"name":"Cloneable","qualname":"::handler::Cloneable","value":"Cloneable","parent":null,"children":[{"krate":0,"index":1709}],"decl_id":null,"docs":" Unfortunate but necessary hack to be able to clone a `Box<Handler>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420521,"byte_end":420534,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"clone_handler","qualname":"::handler::Cloneable::clone_handler","value":"fn (&self) -> Box<Handler>","parent":{"krate":0,"index":1708},"children":[],"decl_id":null,"docs":" Clones `self`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1720},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":421124,"byte_end":421136,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"ErrorHandler","qualname":"::handler::ErrorHandler","value":"for<'r>fn(&'r Request) -> response::Result<'r>","parent":null,"children":[],"decl_id":null,"docs":" The type of an error handler.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1724},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":421787,"byte_end":421791,"line_start":202,"line_end":202,"column_start":12,"column_end":16},"name":"from","qualname":"<Outcome>::from","value":"fn <T> (req: &Request, responder: T) -> Outcome<'r>","parent":null,"children":[],"decl_id":null,"docs":" Return the `Outcome` of response to `req` from `responder`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":421766,"byte_end":421775,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1726},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":422658,"byte_end":422665,"line_start":227,"line_end":227,"column_start":12,"column_end":19},"name":"failure","qualname":"<Outcome>::failure","value":"fn (code: Status) -> Outcome<'static>","parent":null,"children":[],"decl_id":null,"docs":" Return an `Outcome` of `Failure` with the status code `code`. This is\n equivalent to `Outcome::Failure(code)`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":422629,"byte_end":422646,"line_start":226,"line_end":226,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":423315,"byte_end":423322,"line_start":248,"line_end":248,"column_start":12,"column_end":19},"name":"forward","qualname":"<Outcome>::forward","value":"fn (data: Data) -> Outcome<'static>","parent":null,"children":[],"decl_id":null,"docs":" Return an `Outcome` of `Forward` with the data `data`. This is\n equivalent to `Outcome::Forward(data)`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":423286,"byte_end":423303,"line_start":247,"line_end":247,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":1728},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fairing","qualname":"::fairing","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","parent":null,"children":[{"krate":0,"index":1729},{"krate":0,"index":1734},{"krate":0,"index":1757},{"krate":0,"index":1799},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1825}],"decl_id":null,"docs":" Fairings: callbacks at attach, launch, request, and response time.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1768},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":446658,"byte_end":446663,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"AdHoc","qualname":"::fairing::ad_hoc::AdHoc","value":"AdHoc {  }","parent":null,"children":[{"krate":0,"index":1769},{"krate":0,"index":1770}],"decl_id":null,"docs":" A ad-hoc fairing that can be created from a function or closure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":447750,"byte_end":447759,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"on_attach","qualname":"<AdHoc>::on_attach","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` attach fairing named `name`. The function `f` will\n be called by Rocket when this fairing is attached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":448410,"byte_end":448419,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"on_launch","qualname":"<AdHoc>::on_launch","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` launch fairing named `name`. The function `f` will\n be called by Rocket just prior to launching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":449067,"byte_end":449077,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"on_request","qualname":"<AdHoc>::on_request","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` request fairing named `name`. The function `f`\n will be called by Rocket when a new request is received.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1791},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":449743,"byte_end":449754,"line_start":126,"line_end":126,"column_start":12,"column_end":23},"name":"on_response","qualname":"<AdHoc>::on_response","value":"fn <F> (name: &'static str, f: F) -> AdHoc","parent":null,"children":[],"decl_id":null,"docs":" Constructs an `AdHoc` response fairing named `name`. The function `f`\n will be called by Rocket when a response is ready to be sent.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1801},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452035,"byte_end":452039,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"Info","qualname":"::fairing::info_kind::Info","value":"Info { name, kind }","parent":null,"children":[{"krate":0,"index":1802},{"krate":0,"index":1803}],"decl_id":null,"docs":" Information about a [`Fairing`](::fairing::Fairing).","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452083,"byte_end":452087,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"name","qualname":"::fairing::info_kind::Info::name","value":"&'static str","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" The name of the fairing.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452183,"byte_end":452187,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"kind","qualname":"::fairing::info_kind::Info::kind","value":"fairing::info_kind::Kind","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" A set representing the callbacks the fairing wishes to receive.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3055},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452799,"byte_end":452803,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"name":"Kind","qualname":"::fairing::info_kind::Kind","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bitset representing the kinds of callbacks a\n [`Fairing`](::fairing::Fairing) wishes to receive.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1805},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452941,"byte_end":452947,"line_start":53,"line_end":53,"column_start":15,"column_end":21},"name":"Attach","qualname":"::fairing::info_kind::Kind::Attach","value":"Kind","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for an 'attach' callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1806},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":453052,"byte_end":453058,"line_start":55,"line_end":55,"column_start":15,"column_end":21},"name":"Launch","qualname":"::fairing::info_kind::Kind::Launch","value":"Kind","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'launch' callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1807},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":453164,"byte_end":453171,"line_start":57,"line_end":57,"column_start":15,"column_end":22},"name":"Request","qualname":"::fairing::info_kind::Kind::Request","value":"Kind","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'request' callback.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1808},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":453278,"byte_end":453286,"line_start":59,"line_end":59,"column_start":15,"column_end":23},"name":"Response","qualname":"::fairing::info_kind::Kind::Response","value":"Kind","parent":{"krate":0,"index":1804},"children":[],"decl_id":null,"docs":" `Kind` flag representing a request for a 'response' callback.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":454036,"byte_end":454038,"line_start":80,"line_end":80,"column_start":12,"column_end":14},"name":"is","qualname":"<Kind>::is","value":"fn (self, other: Kind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is a superset of `other`. In other words,\n returns `true` if all of the kinds in `other` are also in `self`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":454015,"byte_end":454024,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":454693,"byte_end":454703,"line_start":100,"line_end":100,"column_start":12,"column_end":22},"name":"is_exactly","qualname":"<Kind>::is_exactly","value":"fn (self, other: Kind) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is exactly `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":454672,"byte_end":454681,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1819},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":438090,"byte_end":438097,"line_start":325,"line_end":325,"column_start":11,"column_end":18},"name":"Fairing","qualname":"::fairing::Fairing","value":"Fairing: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824}],"decl_id":null,"docs":" Trait implemented by fairings: Rocket's structured middleware.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":439416,"byte_end":439420,"line_start":359,"line_end":359,"column_start":8,"column_end":12},"name":"info","qualname":"::fairing::Fairing::info","value":"fn (&self) -> Info","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" Returns an [`Info`] structure containing the `name` and [`Kind`] of this\n fairing. The `name` can be any arbitrary string. `Kind` must be an `or`d\n set of `Kind` variants.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":439960,"byte_end":439969,"line_start":372,"line_end":372,"column_start":8,"column_end":17},"name":"on_attach","qualname":"::fairing::Fairing::on_attach","value":"fn (&self, rocket: Rocket) -> Result<Rocket, Rocket>","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" The attach callback. Returns `Ok` if launch should proceed and `Err` if\n launch should be aborted.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":440479,"byte_end":440488,"line_start":385,"line_end":385,"column_start":8,"column_end":17},"name":"on_launch","qualname":"::fairing::Fairing::on_launch","value":"fn (&self, rocket: &Rocket) -> ()","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" The launch callback.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":440445,"byte_end":440471,"line_start":384,"line_end":384,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":440993,"byte_end":441003,"line_start":398,"line_end":398,"column_start":8,"column_end":18},"name":"on_request","qualname":"::fairing::Fairing::on_request","value":"fn (&self, request: &mut Request, data: &Data) -> ()","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" The request callback.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":440959,"byte_end":440985,"line_start":397,"line_end":397,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":441549,"byte_end":441560,"line_start":411,"line_end":411,"column_start":8,"column_end":19},"name":"on_response","qualname":"::fairing::Fairing::on_response","value":"fn (&self, request: &Request, response: &mut Response) -> ()","parent":{"krate":0,"index":1819},"children":[],"decl_id":null,"docs":" The response callback.","sig":null,"attributes":[{"value":"allow(unused_variables)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":441515,"byte_end":441541,"line_start":410,"line_end":410,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":1832},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1840},{"krate":0,"index":1841},{"krate":0,"index":3063},{"krate":0,"index":3079},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":3081},{"krate":0,"index":3089},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874}],"decl_id":null,"docs":" Types representing various errors that can occur in a Rocket application.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3064},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":455682,"byte_end":455686,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Bind","qualname":"::error::LaunchErrorKind::Bind","value":"LaunchErrorKind::Bind(hyper::Error)","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" Binding to the provided address/port failed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":455751,"byte_end":455753,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::LaunchErrorKind::Io","value":"LaunchErrorKind::Io(io::Error)","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" An I/O error occurred during launch.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3070},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":455810,"byte_end":455819,"line_start":26,"line_end":26,"column_start":5,"column_end":14},"name":"Collision","qualname":"::error::LaunchErrorKind::Collision","value":"LaunchErrorKind::Collision(Vec<(Route, Route)>)","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" Route collisions were detected.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":455890,"byte_end":455904,"line_start":28,"line_end":28,"column_start":5,"column_end":19},"name":"FailedFairings","qualname":"::error::LaunchErrorKind::FailedFairings","value":"LaunchErrorKind::FailedFairings(Vec<&'static str>)","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" A launch fairing reported an error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3076},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":455994,"byte_end":456001,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::LaunchErrorKind::Unknown","value":"LaunchErrorKind::Unknown(Box<::std::error::Error + Send + Sync>)","parent":{"krate":0,"index":3063},"children":[],"decl_id":null,"docs":" An otherwise uncategorized error occurred during launch.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3063},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":455607,"byte_end":455622,"line_start":20,"line_end":20,"column_start":10,"column_end":25},"name":"LaunchErrorKind","qualname":"::error::LaunchErrorKind","value":"LaunchErrorKind::{Bind, Io, Collision, FailedFairings, Unknown}","parent":null,"children":[{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3070},{"krate":0,"index":3073},{"krate":0,"index":3076}],"decl_id":null,"docs":" The kind of launch error that occurred.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":457845,"byte_end":457856,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"LaunchError","qualname":"::error::LaunchError","value":"LaunchError {  }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844}],"decl_id":null,"docs":" An error that occurs during launch.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1849},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":458618,"byte_end":458622,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"kind","qualname":"<LaunchError>::kind","value":"fn (&self) -> &LaunchErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the `kind` of the launch error.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":458597,"byte_end":458606,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3082},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462396,"byte_end":462403,"line_start":231,"line_end":231,"column_start":5,"column_end":12},"name":"Segment","qualname":"::error::RouteUriError::Segment","value":"RouteUriError::Segment","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":" The base (mount point) or route path contains invalid segments.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3084},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462451,"byte_end":462454,"line_start":233,"line_end":233,"column_start":5,"column_end":8},"name":"Uri","qualname":"::error::RouteUriError::Uri","value":"RouteUriError::Uri(uri::Error<'static>)","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":" The route URI is not a valid URI.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3087},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462539,"byte_end":462550,"line_start":235,"line_end":235,"column_start":5,"column_end":16},"name":"DynamicBase","qualname":"::error::RouteUriError::DynamicBase","value":"RouteUriError::DynamicBase","parent":{"krate":0,"index":3081},"children":[],"decl_id":null,"docs":" The base (mount point) contains dynamic segments.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3081},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462304,"byte_end":462317,"line_start":229,"line_end":229,"column_start":10,"column_end":23},"name":"RouteUriError","qualname":"::error::RouteUriError","value":"RouteUriError::{Segment, Uri, DynamicBase}","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3084},{"krate":0,"index":3087}],"decl_id":null,"docs":" Error returned by [`set_uri()`](::Route::set_uri()) on invalid URIs.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1876},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3887,"byte_end":3891,"line_start":128,"line_end":128,"column_start":9,"column_end":13},"name":"http","qualname":"::http","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1877}],"decl_id":null,"docs":" Types that map to concepts in HTTP.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/collider.rs","byte_start":482797,"byte_end":482810,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"collides_with","qualname":"<Route>::collides_with","value":"fn (&self, other: &Route) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if two routes can match against some request. That is, if two\n routes `collide`, there exists a request that can match against both\n routes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/collider.rs","byte_start":483805,"byte_end":483812,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"matches","qualname":"<Route>::matches","value":"fn (&self, req: &Request) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if this route matches against the given request. This means\n that:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3091},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504153,"byte_end":504158,"line_start":16,"line_end":16,"column_start":12,"column_end":17},"name":"Route","qualname":"::router::route::Route","value":"Route { name, method, handler, base, uri, rank, format }","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098},{"krate":0,"index":3099}],"decl_id":null,"docs":" A route: a method, its handler, path, rank, and format/media type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3092},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504219,"byte_end":504223,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"name":"name","qualname":"::router::route::Route::name","value":"std::option::Option<&'static str>","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The name of this route, if one was given.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3093},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504302,"byte_end":504308,"line_start":20,"line_end":20,"column_start":9,"column_end":15},"name":"method","qualname":"::router::route::Route::method","value":"rocket_http::Method","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The method this route matches against.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3094},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504393,"byte_end":504400,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"name":"handler","qualname":"::router::route::Route::handler","value":"std::boxed::Box<(dyn handler::Handler + 'static)>","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The function that should be called when the route matches.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3095},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504470,"byte_end":504474,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"base","qualname":"::router::route::Route::base","value":"rocket_http::uri::Origin<'static>","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The base mount point of this `Route`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3096},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504632,"byte_end":504635,"line_start":27,"line_end":27,"column_start":9,"column_end":12},"name":"uri","qualname":"::router::route::Route::uri","value":"rocket_http::uri::Origin<'static>","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The uri (in Rocket's route format) that should be matched against. This\n URI already includes the base mount point.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3097},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504730,"byte_end":504734,"line_start":29,"line_end":29,"column_start":9,"column_end":13},"name":"rank","qualname":"::router::route::Route::rank","value":"isize","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The rank of this route. Lower ranks have higher priorities.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3098},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":504810,"byte_end":504816,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"format","qualname":"::router::route::Route::format","value":"std::option::Option<rocket_http::MediaType>","parent":{"krate":0,"index":3091},"children":[],"decl_id":null,"docs":" The media type this route matches against, if any.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":509216,"byte_end":509219,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<Route>::new","value":"fn <S, H> (method: Method, path: S, handler: H) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Creates a new route with the given method, path, and handler with a base\n of `/`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":510157,"byte_end":510163,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"ranked","qualname":"<Route>::ranked","value":"fn <S, H> (rank: isize, method: Method, path: S, handler: H) -> Route","parent":null,"children":[],"decl_id":null,"docs":" Creates a new route with the given rank, method, path, and handler with\n a base of `/`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":511700,"byte_end":511704,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"base","qualname":"<Route>::base","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the path of the base mount point of this route as an `&str`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":511679,"byte_end":511688,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1944},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":513123,"byte_end":513130,"line_start":261,"line_end":261,"column_start":12,"column_end":19},"name":"set_uri","qualname":"<Route>::set_uri","value":"fn <'a> (&mut self, mut base: Origin<'a>, path: Origin<'a>) -> Result<(), RouteUriError>","parent":null,"children":[],"decl_id":null,"docs":" Sets the base mount point of the route to `base` and sets the path to\n `path`. The `path` should _not_ contains the `base` mount point. If\n `base` contains a query, it is ignored. Note that `self.uri` will\n include the new `base` after this method is called.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2022},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":515961,"byte_end":515967,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Rocket","qualname":"::rocket::Rocket","value":"Rocket {  }","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":2028}],"decl_id":null,"docs":" The main `Rocket` type: used to mount routes and catchers and launch the\n application.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":528898,"byte_end":528904,"line_start":356,"line_end":356,"column_start":12,"column_end":18},"name":"ignite","qualname":"<Rocket>::ignite","value":"fn () -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Rocket` application using the configuration information in\n `Rocket.toml`. If the file does not exist or if there is an I/O error\n reading the file, the defaults are used. See the [`config`]\n documentation for more information on defaults.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":528877,"byte_end":528886,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":529863,"byte_end":529869,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"custom","qualname":"<Rocket>::custom","value":"fn (config: Config) -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Rocket` application using the supplied custom\n configuration. The `Rocket.toml` file, if present, is ignored. Any\n environment variables setting config parameters are ignored.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":529842,"byte_end":529851,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":533999,"byte_end":534004,"line_start":495,"line_end":495,"column_start":12,"column_end":17},"name":"mount","qualname":"<Rocket>::mount","value":"fn <R> (mut self, base: &str, routes: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Mounts all of the routes in the supplied vector at the given `base`\n path. Mounting a route with path `path` at path `base` makes the route\n available at `base/path`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":533978,"byte_end":533987,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":535798,"byte_end":535806,"line_start":555,"line_end":555,"column_start":12,"column_end":20},"name":"register","qualname":"<Rocket>::register","value":"fn (mut self, catchers: Vec<Catcher>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Registers all of the catchers in the supplied vector.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":535777,"byte_end":535786,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2062},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":537520,"byte_end":537526,"line_start":608,"line_end":608,"column_start":12,"column_end":18},"name":"manage","qualname":"<Rocket>::manage","value":"fn <T> (self, state: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add `state` to the state managed by this instance of Rocket.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":537499,"byte_end":537508,"line_start":607,"line_end":607,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":538568,"byte_end":538574,"line_start":640,"line_end":640,"column_start":12,"column_end":18},"name":"attach","qualname":"<Rocket>::attach","value":"fn <F> (mut self, fairing: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Attaches a fairing to this instance of Rocket. If the fairing is an\n _attach_ fairing, it is run immediately. All other kinds of fairings\n will be executed at their appropriate time.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":538547,"byte_end":538556,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":540113,"byte_end":540119,"line_start":682,"line_end":682,"column_start":12,"column_end":18},"name":"launch","qualname":"<Rocket>::launch","value":"fn (mut self) -> LaunchError","parent":null,"children":[],"decl_id":null,"docs":" Starts the application server and begins listening for and dispatching\n requests to mounted routes and catchers. Unless there is an error, this\n function does not return and blocks until program termination.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":543068,"byte_end":543074,"line_start":765,"line_end":765,"column_start":12,"column_end":18},"name":"routes","qualname":"<Rocket>::routes","value":"fn <'a> (&'a self) -> impl Iterator<Item = &'a Route> + 'a","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all of the routes mounted on this instance of\n Rocket.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":543039,"byte_end":543056,"line_start":764,"line_end":764,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":543788,"byte_end":543793,"line_start":785,"line_end":785,"column_start":12,"column_end":17},"name":"state","qualname":"<Rocket>::state","value":"fn <T> (&self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` of the managed state value for the type `T` if it is\n being managed by `self`. Otherwise, returns `None`.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":543759,"byte_end":543776,"line_start":784,"line_end":784,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":544534,"byte_end":544540,"line_start":810,"line_end":810,"column_start":12,"column_end":18},"name":"config","qualname":"<Rocket>::config","value":"fn (&self) -> &Config","parent":null,"children":[],"decl_id":null,"docs":" Returns the active configuration.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":544505,"byte_end":544522,"line_start":809,"line_end":809,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":2086},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":544908,"byte_end":544923,"line_start":9,"line_end":9,"column_start":12,"column_end":27},"name":"StaticRouteInfo","qualname":"::codegen::StaticRouteInfo","value":"StaticRouteInfo { name, method, path, format, handler, rank }","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092}],"decl_id":null,"docs":" Information generated by the `route` attribute during codegen.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2087},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":544991,"byte_end":544995,"line_start":11,"line_end":11,"column_start":9,"column_end":13},"name":"name","qualname":"::codegen::StaticRouteInfo::name","value":"&'static str","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The route's name, i.e, the name of the function.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545047,"byte_end":545053,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"method","qualname":"::codegen::StaticRouteInfo::method","value":"rocket_http::Method","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The route's method.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2089},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545127,"byte_end":545131,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"path","qualname":"::codegen::StaticRouteInfo::path","value":"&'static str","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The route's path, without the base mount point.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2090},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545191,"byte_end":545197,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"name":"format","qualname":"::codegen::StaticRouteInfo::format","value":"std::option::Option<rocket_http::MediaType>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The route's format, if any.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545284,"byte_end":545291,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"handler","qualname":"::codegen::StaticRouteInfo::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>, data::data::Data) -> outcome::Outcome<response::response::Response<'r>, rocket_http::Status, data::data::Data>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The route's handler, i.e, the annotated function.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2092},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545350,"byte_end":545354,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"rank","qualname":"::codegen::StaticRouteInfo::rank","value":"std::option::Option<isize>","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":" The route's rank, if any.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2093},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545452,"byte_end":545467,"line_start":25,"line_end":25,"column_start":12,"column_end":27},"name":"StaticCatchInfo","qualname":"::codegen::StaticCatchInfo","value":"StaticCatchInfo { code, handler }","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095}],"decl_id":null,"docs":" Information generated by the `catch` attribute during codegen.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2094},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545513,"byte_end":545517,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"name":"code","qualname":"::codegen::StaticCatchInfo::code","value":"u16","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" The catcher's status code.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2095},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/codegen.rs","byte_start":545592,"byte_end":545599,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"handler","qualname":"::codegen::StaticCatchInfo::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>) -> std::result::Result<response::response::Response<'r>, rocket_http::Status>","parent":{"krate":0,"index":2093},"children":[],"decl_id":null,"docs":" The catcher's handler, i.e, the annotated function.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2103},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":547736,"byte_end":547743,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"Catcher","qualname":"::catcher::Catcher","value":"Catcher { code, handler }","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106}],"decl_id":null,"docs":" An error catching route.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2104},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":547801,"byte_end":547805,"line_start":64,"line_end":64,"column_start":9,"column_end":13},"name":"code","qualname":"::catcher::Catcher::code","value":"u16","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" The HTTP status code to match against.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2105},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":547862,"byte_end":547869,"line_start":66,"line_end":66,"column_start":9,"column_end":16},"name":"handler","qualname":"::catcher::Catcher::handler","value":"for<'r, 's> fn(&'r request::request::Request<'s>) -> std::result::Result<response::response::Response<'r>, rocket_http::Status>","parent":{"krate":0,"index":2103},"children":[],"decl_id":null,"docs":" The catcher's associated handler.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":548840,"byte_end":548843,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<Catcher>::new","value":"fn (code: u16, handler: ErrorHandler) -> Catcher","parent":null,"children":[],"decl_id":null,"docs":" Creates a catcher for the given status code using the given error\n handler. This should only be used when routing manually.","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":548811,"byte_end":548828,"line_start":95,"line_end":95,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":2152},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4641,"byte_end":4647,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"ignite","qualname":"::ignite","value":"fn () -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Alias to [`Rocket::ignite()`] Creates a new instance of `Rocket`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2153},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":4796,"byte_end":4802,"line_start":162,"line_end":162,"column_start":8,"column_end":14},"name":"custom","qualname":"::custom","value":"fn (config: config::Config) -> Rocket","parent":null,"children":[],"decl_id":null,"docs":" Alias to [`Rocket::custom()`]. Creates a new instance of `Rocket` with a\n custom configuration.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5414,"byte_end":5426,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5796,"byte_end":5808,"line_start":38,"line_end":38,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":6240,"byte_end":6252,"line_start":54,"line_end":54,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":7487,"byte_end":7499,"line_start":84,"line_end":84,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":19693,"byte_end":19705,"line_start":102,"line_end":102,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":30588,"byte_end":30600,"line_start":437,"line_end":437,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31235,"byte_end":31248,"line_start":455,"line_end":455,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31403,"byte_end":31416,"line_start":464,"line_end":464,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31556,"byte_end":31569,"line_start":471,"line_end":471,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31706,"byte_end":31718,"line_start":477,"line_end":477,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":37530,"byte_end":37536,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":183},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":48961,"byte_end":48968,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":71068,"byte_end":71075,"line_start":697,"line_end":697,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":311},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":76668,"byte_end":76675,"line_start":845,"line_end":845,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":77008,"byte_end":77015,"line_start":856,"line_end":856,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":77544,"byte_end":77559,"line_start":873,"line_end":873,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":85055,"byte_end":85061,"line_start":211,"line_end":211,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":85300,"byte_end":85303,"line_start":220,"line_end":220,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":86164,"byte_end":86170,"line_start":249,"line_end":249,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":86460,"byte_end":86466,"line_start":261,"line_end":261,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":87989,"byte_end":87997,"line_start":300,"line_end":300,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":88960,"byte_end":88967,"line_start":325,"line_end":325,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":89180,"byte_end":89186,"line_start":333,"line_end":333,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":399},{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":89501,"byte_end":89507,"line_start":345,"line_end":345,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":95112,"byte_end":95120,"line_start":138,"line_end":138,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":97247,"byte_end":97256,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":99915,"byte_end":99924,"line_start":300,"line_end":300,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":100089,"byte_end":100098,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":100272,"byte_end":100281,"line_start":314,"line_end":314,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":101563,"byte_end":101572,"line_start":354,"line_end":354,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110771,"byte_end":110777,"line_start":113,"line_end":113,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110999,"byte_end":111005,"line_start":122,"line_end":122,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":117854,"byte_end":117860,"line_start":194,"line_end":194,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":472},{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":119033,"byte_end":119039,"line_start":238,"line_end":238,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":119487,"byte_end":119493,"line_start":256,"line_end":256,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122060,"byte_end":122071,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122696,"byte_end":122707,"line_start":90,"line_end":90,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122831,"byte_end":122842,"line_start":98,"line_end":98,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":123322,"byte_end":123333,"line_start":112,"line_end":112,"column_start":82,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":130568,"byte_end":130572,"line_start":116,"line_end":116,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":131183,"byte_end":131187,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":131294,"byte_end":131298,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":132744,"byte_end":132748,"line_start":187,"line_end":187,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":133933,"byte_end":133937,"line_start":222,"line_end":222,"column_start":82,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":134483,"byte_end":134489,"line_start":14,"line_end":14,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":146673,"byte_end":146679,"line_start":360,"line_end":360,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":147328,"byte_end":147335,"line_start":387,"line_end":387,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":148101,"byte_end":148111,"line_start":417,"line_end":417,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":660},{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":148399,"byte_end":148405,"line_start":428,"line_end":428,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":666},{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":148774,"byte_end":148780,"line_start":440,"line_end":440,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":152490,"byte_end":152495,"line_start":108,"line_end":108,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":154358,"byte_end":154363,"line_start":168,"line_end":168,"column_start":64,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":154842,"byte_end":154847,"line_start":183,"line_end":183,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":697},{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":156534,"byte_end":156539,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162024,"byte_end":162028,"line_start":203,"line_end":203,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162256,"byte_end":162267,"line_start":212,"line_end":212,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":722},{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162522,"byte_end":162528,"line_start":221,"line_end":221,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":727},{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162720,"byte_end":162726,"line_start":230,"line_end":230,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":172190,"byte_end":172196,"line_start":211,"line_end":211,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":172955,"byte_end":172958,"line_start":233,"line_end":233,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":173268,"byte_end":173272,"line_start":243,"line_end":243,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":173990,"byte_end":173996,"line_start":262,"line_end":262,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":174454,"byte_end":174460,"line_start":274,"line_end":274,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":174901,"byte_end":174907,"line_start":285,"line_end":285,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":175952,"byte_end":175958,"line_start":308,"line_end":308,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":178047,"byte_end":178055,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":834},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":182123,"byte_end":182131,"line_start":150,"line_end":150,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":182859,"byte_end":182868,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":184775,"byte_end":184784,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185147,"byte_end":185156,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185258,"byte_end":185267,"line_start":102,"line_end":102,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185360,"byte_end":185369,"line_start":108,"line_end":108,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185608,"byte_end":185617,"line_start":118,"line_end":118,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185816,"byte_end":185825,"line_start":128,"line_end":128,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":187119,"byte_end":187125,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":187762,"byte_end":187768,"line_start":37,"line_end":37,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":188232,"byte_end":188238,"line_start":57,"line_end":57,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":188720,"byte_end":188726,"line_start":71,"line_end":71,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189379,"byte_end":189383,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":190680,"byte_end":190684,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":191565,"byte_end":191569,"line_start":90,"line_end":90,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":194467,"byte_end":194482,"line_start":162,"line_end":162,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":968},{"krate":0,"index":973},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206950,"byte_end":206958,"line_start":566,"line_end":566,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":227453,"byte_end":227461,"line_start":1179,"line_end":1179,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":227866,"byte_end":227874,"line_start":1196,"line_end":1196,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1036}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":231930,"byte_end":231935,"line_start":105,"line_end":105,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1064},{"krate":0,"index":1066},{"krate":0,"index":1068},{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":234909,"byte_end":234914,"line_start":196,"line_end":196,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":235167,"byte_end":235172,"line_start":204,"line_end":204,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":236535,"byte_end":236540,"line_start":243,"line_end":243,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1085},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":238973,"byte_end":238980,"line_start":49,"line_end":49,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":242180,"byte_end":242187,"line_start":43,"line_end":43,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":242836,"byte_end":242843,"line_start":58,"line_end":58,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":244242,"byte_end":244250,"line_start":103,"line_end":103,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":245420,"byte_end":245430,"line_start":143,"line_end":143,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":246199,"byte_end":246207,"line_start":170,"line_end":170,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":246927,"byte_end":246933,"line_start":194,"line_end":194,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":252276,"byte_end":252282,"line_start":121,"line_end":121,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":252723,"byte_end":252730,"line_start":142,"line_end":142,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":266980,"byte_end":266987,"line_start":603,"line_end":603,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":267525,"byte_end":267532,"line_start":627,"line_end":627,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":267697,"byte_end":267704,"line_start":633,"line_end":633,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1230}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312618,"byte_end":312629,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":315983,"byte_end":315994,"line_start":133,"line_end":133,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1245}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":317130,"byte_end":317141,"line_start":157,"line_end":157,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":318062,"byte_end":318073,"line_start":175,"line_end":175,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":319707,"byte_end":319718,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1258},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321838,"byte_end":321849,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":323551,"byte_end":323562,"line_start":152,"line_end":152,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":326188,"byte_end":326194,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1298},{"krate":0,"index":1299},{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1345},{"krate":0,"index":1347},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":353767,"byte_end":353773,"line_start":919,"line_end":919,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":354340,"byte_end":354346,"line_start":938,"line_end":938,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355827,"byte_end":355840,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/toml_ext.rs","byte_start":368315,"byte_end":368326,"line_start":86,"line_end":86,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":371459,"byte_end":371468,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":371876,"byte_end":371885,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373443,"byte_end":373449,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373595,"byte_end":373601,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":375915,"byte_end":375921,"line_start":182,"line_end":182,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":276664,"byte_end":276676,"line_start":231,"line_end":231,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":381539,"byte_end":381543,"line_start":64,"line_end":64,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":388983,"byte_end":388987,"line_start":274,"line_end":274,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data_stream.rs","byte_start":389832,"byte_end":389842,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data_stream.rs","byte_start":390850,"byte_end":390860,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/net_stream.rs","byte_start":391532,"byte_end":391541,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/net_stream.rs","byte_start":391961,"byte_end":391970,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/net_stream.rs","byte_start":392583,"byte_end":392592,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":394162,"byte_end":394168,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1615},{"krate":0,"index":1616},{"krate":0,"index":1617},{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":395079,"byte_end":395088,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1631},{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":408769,"byte_end":408773,"line_start":390,"line_end":390,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":412845,"byte_end":412846,"line_start":508,"line_end":508,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1660}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":413288,"byte_end":413294,"line_start":524,"line_end":524,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1664},{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":413893,"byte_end":413899,"line_start":544,"line_end":544,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1672},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1675},{"krate":0,"index":1676}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":414506,"byte_end":414512,"line_start":567,"line_end":567,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":414897,"byte_end":414900,"line_start":581,"line_end":581,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420601,"byte_end":420602,"line_start":158,"line_end":158,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420728,"byte_end":420731,"line_start":165,"line_end":165,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420892,"byte_end":420893,"line_start":172,"line_end":172,"column_start":52,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":421198,"byte_end":421205,"line_start":184,"line_end":184,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1726},{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/fairings.rs","byte_start":442605,"byte_end":442613,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":447378,"byte_end":447383,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1787},{"krate":0,"index":1789},{"krate":0,"index":1791}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":449957,"byte_end":449962,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452851,"byte_end":452855,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807},{"krate":0,"index":1808},{"krate":0,"index":1809},{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":454783,"byte_end":454787,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1812},{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":441660,"byte_end":441663,"line_start":414,"line_end":414,"column_start":43,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":457918,"byte_end":457929,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1849}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":458737,"byte_end":458748,"line_start":123,"line_end":123,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459031,"byte_end":459042,"line_start":133,"line_end":133,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459190,"byte_end":459205,"line_start":140,"line_end":140,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459749,"byte_end":459760,"line_start":153,"line_end":153,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459935,"byte_end":459946,"line_start":161,"line_end":161,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":460126,"byte_end":460137,"line_start":169,"line_end":169,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1861}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":460690,"byte_end":460701,"line_start":183,"line_end":183,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462602,"byte_end":462615,"line_start":238,"line_end":238,"column_start":48,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462746,"byte_end":462759,"line_start":244,"line_end":244,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462885,"byte_end":462898,"line_start":250,"line_end":250,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/collider.rs","byte_start":482105,"byte_end":482110,"line_start":7,"line_end":7,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":505151,"byte_end":505159,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":506760,"byte_end":506765,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":513763,"byte_end":513768,"line_start":283,"line_end":283,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":514338,"byte_end":514343,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":514809,"byte_end":514814,"line_start":319,"line_end":319,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/mod.rs","byte_start":463837,"byte_end":463843,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1966},{"krate":0,"index":1970},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":516192,"byte_end":516198,"line_start":41,"line_end":41,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2030}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":519419,"byte_end":519425,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2047},{"krate":0,"index":2050},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2071},{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":547921,"byte_end":547928,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2111}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":549287,"byte_end":549294,"line_start":112,"line_end":112,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":549426,"byte_end":549433,"line_start":118,"line_end":118,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2116}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/ext.rs","byte_start":555834,"byte_end":555835,"line_start":19,"line_end":19,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3692,"byte_end":3698,"line_start":116,"line_end":116,"column_start":37,"column_end":43},"ref_id":{"krate":0,"index":25}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3708,"byte_end":3713,"line_start":117,"line_end":117,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":71}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3723,"byte_end":3730,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":195}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3740,"byte_end":3748,"line_start":119,"line_end":119,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":761}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":163946,"byte_end":163953,"line_start":31,"line_end":31,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1089}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/mod.rs","byte_start":163963,"byte_end":163969,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1102}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3758,"byte_end":3765,"line_start":120,"line_end":120,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1151}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3775,"byte_end":3781,"line_start":121,"line_end":121,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1231}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3791,"byte_end":3795,"line_start":122,"line_end":122,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1512}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3805,"byte_end":3812,"line_start":123,"line_end":123,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1694}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3822,"byte_end":3829,"line_start":124,"line_end":124,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1728}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/lib.rs","byte_start":3839,"byte_end":3844,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1832}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5414,"byte_end":5426,"line_start":26,"line_end":26,"column_start":6,"column_end":18},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":5796,"byte_end":5808,"line_start":38,"line_end":38,"column_start":18,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2154},"to":{"krate":2,"index":6620}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":6240,"byte_end":6252,"line_start":54,"line_end":54,"column_start":23,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2154},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/logger.rs","byte_start":7487,"byte_end":7499,"line_start":84,"line_end":84,"column_start":19,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":33},"to":{"krate":47,"index":154}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":19693,"byte_end":19705,"line_start":102,"line_end":102,"column_start":10,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":30588,"byte_end":30600,"line_start":437,"line_end":437,"column_start":25,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31235,"byte_end":31248,"line_start":455,"line_end":455,"column_start":20,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31403,"byte_end":31416,"line_start":464,"line_end":464,"column_start":23,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":1714}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31556,"byte_end":31569,"line_start":471,"line_end":471,"column_start":25,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/request.rs","byte_start":31706,"byte_end":31718,"line_start":477,"line_end":477,"column_start":20,"column_end":32},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/local/client.rs","byte_start":37530,"byte_end":37536,"line_start":75,"line_end":75,"column_start":6,"column_end":12},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":48961,"byte_end":48968,"line_start":58,"line_end":58,"column_start":10,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":71068,"byte_end":71075,"line_start":697,"line_end":697,"column_start":10,"column_end":17},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2176},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":76668,"byte_end":76675,"line_start":845,"line_end":845,"column_start":25,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2176},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":77008,"byte_end":77015,"line_start":856,"line_end":856,"column_start":27,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2176},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/request.rs","byte_start":77544,"byte_end":77559,"line_start":873,"line_end":873,"column_start":6,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":84527,"byte_end":84532,"line_start":193,"line_end":193,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":85055,"byte_end":85061,"line_start":211,"line_end":211,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":5,"index":4320},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":85300,"byte_end":85303,"line_start":220,"line_end":220,"column_start":28,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":5,"index":3093},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":86164,"byte_end":86170,"line_start":249,"line_end":249,"column_start":46,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":86460,"byte_end":86466,"line_start":261,"line_end":261,"column_start":46,"column_end":52},"kind":{"Impl":{"id":40}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":87652,"byte_end":87657,"line_start":291,"line_end":291,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":87989,"byte_end":87997,"line_start":300,"line_end":300,"column_start":31,"column_end":39},"kind":{"Impl":{"id":41}},"from":{"krate":16,"index":2006},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":88960,"byte_end":88967,"line_start":325,"line_end":325,"column_start":31,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":1,"index":6933},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":89180,"byte_end":89186,"line_start":333,"line_end":333,"column_start":52,"column_end":58},"kind":{"Impl":{"id":43}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/param.rs","byte_start":89501,"byte_end":89507,"line_start":345,"line_end":345,"column_start":52,"column_end":58},"kind":{"Impl":{"id":44}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":384}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":95112,"byte_end":95120,"line_start":138,"line_end":138,"column_start":10,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2324},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":97247,"byte_end":97256,"line_start":214,"line_end":214,"column_start":10,"column_end":19},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":99915,"byte_end":99924,"line_start":300,"line_end":300,"column_start":31,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2313},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":100089,"byte_end":100098,"line_start":307,"line_end":307,"column_start":28,"column_end":37},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2313},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":100272,"byte_end":100281,"line_start":314,"line_end":314,"column_start":39,"column_end":48},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2313},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form_items.rs","byte_start":101563,"byte_end":101572,"line_start":354,"line_end":354,"column_start":23,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2313},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110063,"byte_end":110068,"line_start":94,"line_end":94,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110771,"byte_end":110777,"line_start":113,"line_end":113,"column_start":44,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form.rs","byte_start":110999,"byte_end":111005,"line_start":122,"line_end":122,"column_start":44,"column_end":50},"kind":{"Impl":{"id":52}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":437}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":116827,"byte_end":116832,"line_start":164,"line_end":164,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":461}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":117854,"byte_end":117860,"line_start":194,"line_end":194,"column_start":32,"column_end":38},"kind":{"Impl":{"id":53}},"from":{"krate":5,"index":4320},"to":{"krate":0,"index":461}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":119033,"byte_end":119039,"line_start":238,"line_end":238,"column_start":54,"column_end":60},"kind":{"Impl":{"id":55}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":461}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/from_form_value.rs","byte_start":119487,"byte_end":119493,"line_start":256,"line_end":256,"column_start":54,"column_end":60},"kind":{"Impl":{"id":56}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":461}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122060,"byte_end":122071,"line_start":64,"line_end":64,"column_start":9,"column_end":20},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122696,"byte_end":122707,"line_start":90,"line_end":90,"column_start":19,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2444},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":122831,"byte_end":122842,"line_start":98,"line_end":98,"column_start":44,"column_end":55},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2444},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/lenient.rs","byte_start":123322,"byte_end":123333,"line_start":112,"line_end":112,"column_start":82,"column_end":93},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2444},"to":{"krate":16,"index":243}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":130568,"byte_end":130572,"line_start":116,"line_end":116,"column_start":9,"column_end":13},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":131183,"byte_end":131187,"line_start":142,"line_end":142,"column_start":19,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2500},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":131294,"byte_end":131298,"line_start":150,"line_end":150,"column_start":27,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":132744,"byte_end":132748,"line_start":187,"line_end":187,"column_start":44,"column_end":48},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/form/form.rs","byte_start":133933,"byte_end":133937,"line_start":222,"line_end":222,"column_start":82,"column_end":86},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2500},"to":{"krate":16,"index":243}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":134483,"byte_end":134489,"line_start":14,"line_end":14,"column_start":48,"column_end":54},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":1158}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":146094,"byte_end":146099,"line_start":347,"line_end":347,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":146673,"byte_end":146679,"line_start":360,"line_end":360,"column_start":38,"column_end":44},"kind":{"Impl":{"id":67}},"from":{"krate":16,"index":2267},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":147328,"byte_end":147335,"line_start":387,"line_end":387,"column_start":38,"column_end":45},"kind":{"Impl":{"id":68}},"from":{"krate":16,"index":568},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":148101,"byte_end":148111,"line_start":417,"line_end":417,"column_start":38,"column_end":48},"kind":{"Impl":{"id":69}},"from":{"krate":1,"index":6590},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":148399,"byte_end":148405,"line_start":428,"line_end":428,"column_start":62,"column_end":68},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/from_request.rs","byte_start":148774,"byte_end":148780,"line_start":440,"line_end":440,"column_start":62,"column_end":68},"kind":{"Impl":{"id":71}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":152490,"byte_end":152495,"line_start":108,"line_end":108,"column_start":36,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":154358,"byte_end":154363,"line_start":168,"line_end":168,"column_start":64,"column_end":69},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2507},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/state.rs","byte_start":154842,"byte_end":154847,"line_start":183,"line_end":183,"column_start":46,"column_end":51},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2507},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":156534,"byte_end":156539,"line_start":55,"line_end":55,"column_start":23,"column_end":28},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2542},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":161687,"byte_end":161692,"line_start":194,"line_end":194,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162024,"byte_end":162028,"line_start":203,"line_end":203,"column_start":45,"column_end":49},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2500},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162256,"byte_end":162267,"line_start":212,"line_end":212,"column_start":45,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2444},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162522,"byte_end":162528,"line_start":221,"line_end":221,"column_start":46,"column_end":52},"kind":{"Impl":{"id":78}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/request/query.rs","byte_start":162720,"byte_end":162726,"line_start":230,"line_end":230,"column_start":46,"column_end":52},"kind":{"Impl":{"id":79}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":710}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":172190,"byte_end":172196,"line_start":211,"line_end":211,"column_start":28,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":5,"index":4320},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":172955,"byte_end":172958,"line_start":233,"line_end":233,"column_start":28,"column_end":31},"kind":{"Impl":{"id":81}},"from":{"krate":5,"index":3760},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":173268,"byte_end":173272,"line_start":243,"line_end":243,"column_start":28,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":1,"index":2021},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":173990,"byte_end":173996,"line_start":262,"line_end":262,"column_start":46,"column_end":52},"kind":{"Impl":{"id":83}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":174454,"byte_end":174460,"line_start":274,"line_end":274,"column_start":61,"column_end":67},"kind":{"Impl":{"id":84}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":174901,"byte_end":174907,"line_start":285,"line_end":285,"column_start":77,"column_end":83},"kind":{"Impl":{"id":85}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/responder.rs","byte_start":175952,"byte_end":175958,"line_start":308,"line_end":308,"column_start":28,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":16,"index":2513},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":178047,"byte_end":178055,"line_start":49,"line_end":49,"column_start":6,"column_end":14},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/redirect.rs","byte_start":182123,"byte_end":182131,"line_start":150,"line_end":150,"column_start":28,"column_end":36},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2552},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":182859,"byte_end":182868,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2558},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":184775,"byte_end":184784,"line_start":81,"line_end":81,"column_start":28,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2558},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185147,"byte_end":185156,"line_start":94,"line_end":94,"column_start":16,"column_end":25},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":1703}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185258,"byte_end":185267,"line_start":102,"line_end":102,"column_start":19,"column_end":28},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2558},"to":{"krate":2,"index":1714}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185360,"byte_end":185369,"line_start":108,"line_end":108,"column_start":19,"column_end":28},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2782}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185608,"byte_end":185617,"line_start":118,"line_end":118,"column_start":20,"column_end":29},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2836}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/named_file.rs","byte_start":185816,"byte_end":185825,"line_start":128,"line_end":128,"column_start":19,"column_end":28},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2558},"to":{"krate":1,"index":2852}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":187119,"byte_end":187125,"line_start":16,"line_end":16,"column_start":15,"column_end":21},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":900},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":187762,"byte_end":187768,"line_start":37,"line_end":37,"column_start":33,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":188232,"byte_end":188238,"line_start":57,"line_end":57,"column_start":27,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":900},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/stream.rs","byte_start":188720,"byte_end":188726,"line_start":71,"line_end":71,"column_start":42,"column_end":48},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":900},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":189379,"byte_end":189383,"line_start":19,"line_end":19,"column_start":9,"column_end":13},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":190680,"byte_end":190684,"line_start":62,"line_end":62,"column_start":19,"column_end":23},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":191565,"byte_end":191569,"line_start":90,"line_end":90,"column_start":24,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2564},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":194467,"byte_end":194482,"line_start":162,"line_end":162,"column_start":10,"column_end":25},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":949},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":206950,"byte_end":206958,"line_start":566,"line_end":566,"column_start":10,"column_end":18},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":227453,"byte_end":227461,"line_start":1179,"line_end":1179,"column_start":25,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2585},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/response.rs","byte_start":227866,"byte_end":227874,"line_start":1196,"line_end":1196,"column_start":28,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2585},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":231930,"byte_end":231935,"line_start":105,"line_end":105,"column_start":28,"column_end":33},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":234909,"byte_end":234914,"line_start":196,"line_end":196,"column_start":46,"column_end":51},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2593},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":235167,"byte_end":235172,"line_start":204,"line_end":204,"column_start":14,"column_end":19},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/flash.rs","byte_start":236535,"byte_end":236540,"line_start":243,"line_end":243,"column_start":38,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2593},"to":{"krate":0,"index":622}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/content.rs","byte_start":238973,"byte_end":238980,"line_start":49,"line_end":49,"column_start":46,"column_end":53},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2602},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":242180,"byte_end":242187,"line_start":43,"line_end":43,"column_start":46,"column_end":53},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2743},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":242836,"byte_end":242843,"line_start":58,"line_end":58,"column_start":53,"column_end":60},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2743},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":244242,"byte_end":244250,"line_start":103,"line_end":103,"column_start":46,"column_end":54},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2758},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":245420,"byte_end":245430,"line_start":143,"line_end":143,"column_start":46,"column_end":56},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2772},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":246199,"byte_end":246207,"line_start":170,"line_end":170,"column_start":46,"column_end":54},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2786},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/response/status.rs","byte_start":246927,"byte_end":246933,"line_start":194,"line_end":194,"column_start":46,"column_end":52},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2800},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":252276,"byte_end":252282,"line_start":121,"line_end":121,"column_start":40,"column_end":46},"kind":{"Impl":{"id":118}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":1158}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":252723,"byte_end":252730,"line_start":142,"line_end":142,"column_start":15,"column_end":22},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2815},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":266980,"byte_end":266987,"line_start":603,"line_end":603,"column_start":23,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":1922}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":267525,"byte_end":267532,"line_start":627,"line_end":627,"column_start":30,"column_end":37},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/outcome.rs","byte_start":267697,"byte_end":267704,"line_start":633,"line_end":633,"column_start":32,"column_end":39},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2815},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":312618,"byte_end":312629,"line_start":55,"line_end":55,"column_start":6,"column_end":17},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":315983,"byte_end":315994,"line_start":133,"line_end":133,"column_start":23,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":317130,"byte_end":317141,"line_start":157,"line_end":157,"column_start":16,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2868},"to":{"krate":1,"index":1558}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/error.rs","byte_start":318062,"byte_end":318073,"line_start":175,"line_end":175,"column_start":20,"column_end":31},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2868},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":319707,"byte_end":319718,"line_start":22,"line_end":22,"column_start":6,"column_end":17},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":321838,"byte_end":321849,"line_start":94,"line_end":94,"column_start":18,"column_end":29},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2913},"to":{"krate":2,"index":6620}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/environment.rs","byte_start":323551,"byte_end":323562,"line_start":152,"line_end":152,"column_start":23,"column_end":34},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2913},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":326188,"byte_end":326194,"line_start":78,"line_end":78,"column_start":6,"column_end":12},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":353767,"byte_end":353773,"line_start":919,"line_end":919,"column_start":21,"column_end":27},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2932},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/config.rs","byte_start":354340,"byte_end":354346,"line_start":938,"line_end":938,"column_start":20,"column_end":26},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2932},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/builder.rs","byte_start":355827,"byte_end":355840,"line_start":33,"line_end":33,"column_start":6,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/toml_ext.rs","byte_start":368315,"byte_end":368326,"line_start":86,"line_end":86,"column_start":27,"column_end":38},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1408},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":371459,"byte_end":371468,"line_start":15,"line_end":15,"column_start":6,"column_end":15},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":371876,"byte_end":371885,"line_start":33,"line_end":33,"column_start":23,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373443,"byte_end":373449,"line_start":90,"line_end":90,"column_start":18,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":373595,"byte_end":373601,"line_start":97,"line_end":97,"column_start":6,"column_end":12},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3024},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/custom_values.rs","byte_start":375915,"byte_end":375921,"line_start":182,"line_end":182,"column_start":23,"column_end":29},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3024},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/config/mod.rs","byte_start":276664,"byte_end":276676,"line_start":231,"line_end":231,"column_start":6,"column_end":18},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":381539,"byte_end":381543,"line_start":64,"line_end":64,"column_start":6,"column_end":10},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data.rs","byte_start":388983,"byte_end":388987,"line_start":274,"line_end":274,"column_start":15,"column_end":19},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1539},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data_stream.rs","byte_start":389832,"byte_end":389842,"line_start":21,"line_end":21,"column_start":15,"column_end":25},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1569},"to":{"krate":1,"index":2782}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/data_stream.rs","byte_start":390850,"byte_end":390860,"line_start":51,"line_end":51,"column_start":15,"column_end":25},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1569},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/net_stream.rs","byte_start":391532,"byte_end":391541,"line_start":22,"line_end":22,"column_start":19,"column_end":28},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3039},"to":{"krate":1,"index":2782}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/net_stream.rs","byte_start":391961,"byte_end":391970,"line_start":37,"line_end":37,"column_start":20,"column_end":29},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3039},"to":{"krate":1,"index":2836}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/net_stream.rs","byte_start":392583,"byte_end":392592,"line_start":58,"line_end":58,"column_start":24,"column_end":33},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3039},"to":{"krate":38,"index":2001}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":394162,"byte_end":394168,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":148}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":1158}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":395079,"byte_end":395088,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1619},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":405579,"byte_end":405584,"line_start":322,"line_end":322,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":408769,"byte_end":408773,"line_start":390,"line_end":390,"column_start":27,"column_end":31},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1539},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":412294,"byte_end":412299,"line_start":495,"line_end":495,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1539},"to":{"krate":0,"index":1650}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":412845,"byte_end":412846,"line_start":508,"line_end":508,"column_start":46,"column_end":47},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":413288,"byte_end":413294,"line_start":524,"line_end":524,"column_start":49,"column_end":55},"kind":{"Impl":{"id":152}},"from":{"krate":2,"index":29095},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":413893,"byte_end":413899,"line_start":544,"line_end":544,"column_start":49,"column_end":55},"kind":{"Impl":{"id":153}},"from":{"krate":2,"index":29004},"to":{"krate":0,"index":1636}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":414506,"byte_end":414512,"line_start":567,"line_end":567,"column_start":25,"column_end":31},"kind":{"Impl":{"id":154}},"from":{"krate":5,"index":4320},"to":{"krate":0,"index":1650}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/data/from_data.rs","byte_start":414897,"byte_end":414900,"line_start":581,"line_end":581,"column_start":25,"column_end":28},"kind":{"Impl":{"id":155}},"from":{"krate":5,"index":3760},"to":{"krate":0,"index":1650}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":419448,"byte_end":419457,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":1708},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":419460,"byte_end":419464,"line_start":134,"line_end":134,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":419467,"byte_end":419471,"line_start":134,"line_end":134,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420601,"byte_end":420602,"line_start":158,"line_end":158,"column_start":40,"column_end":41},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1711},"to":{"krate":0,"index":1708}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420728,"byte_end":420731,"line_start":165,"line_end":165,"column_start":16,"column_end":19},"kind":{"Impl":{"id":157}},"from":{"krate":5,"index":90},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":420892,"byte_end":420893,"line_start":172,"line_end":172,"column_start":52,"column_end":53},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1716},"to":{"krate":0,"index":1705}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/handler.rs","byte_start":421198,"byte_end":421205,"line_start":184,"line_end":184,"column_start":10,"column_end":17},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/fairings.rs","byte_start":442605,"byte_end":442613,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":447378,"byte_end":447383,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/ad_hoc.rs","byte_start":449957,"byte_end":449962,"line_start":133,"line_end":133,"column_start":18,"column_end":23},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1768},"to":{"krate":0,"index":1819}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":452851,"byte_end":452855,"line_start":51,"line_end":51,"column_start":6,"column_end":10},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/info_kind.rs","byte_start":454783,"byte_end":454787,"line_start":105,"line_end":105,"column_start":16,"column_end":20},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3055},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":438099,"byte_end":438103,"line_start":325,"line_end":325,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1534},"to":{"krate":0,"index":1819}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":438106,"byte_end":438110,"line_start":325,"line_end":325,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1544},"to":{"krate":0,"index":1819}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/fairing/mod.rs","byte_start":441660,"byte_end":441663,"line_start":414,"line_end":414,"column_start":43,"column_end":46},"kind":{"Impl":{"id":165}},"from":{"krate":5,"index":2392},"to":{"krate":0,"index":1819}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":457918,"byte_end":457929,"line_start":88,"line_end":88,"column_start":6,"column_end":17},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":458737,"byte_end":458748,"line_start":123,"line_end":123,"column_start":29,"column_end":40},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459031,"byte_end":459042,"line_start":133,"line_end":133,"column_start":26,"column_end":37},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459190,"byte_end":459205,"line_start":140,"line_end":140,"column_start":23,"column_end":38},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3063},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459749,"byte_end":459760,"line_start":153,"line_end":153,"column_start":21,"column_end":32},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":459935,"byte_end":459946,"line_start":161,"line_end":161,"column_start":23,"column_end":34},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":460126,"byte_end":460137,"line_start":169,"line_end":169,"column_start":30,"column_end":41},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":1842},"to":{"krate":1,"index":1558}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":460690,"byte_end":460701,"line_start":183,"line_end":183,"column_start":15,"column_end":26},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":1842},"to":{"krate":2,"index":1725}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462602,"byte_end":462615,"line_start":238,"line_end":238,"column_start":48,"column_end":61},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462746,"byte_end":462759,"line_start":244,"line_end":244,"column_start":35,"column_end":48},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/error.rs","byte_start":462885,"byte_end":462898,"line_start":250,"line_end":250,"column_start":23,"column_end":36},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3081},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/collider.rs","byte_start":482105,"byte_end":482110,"line_start":7,"line_end":7,"column_start":6,"column_end":11},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":505151,"byte_end":505159,"line_start":43,"line_end":43,"column_start":6,"column_end":14},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":506760,"byte_end":506765,"line_start":83,"line_end":83,"column_start":6,"column_end":11},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3091},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":513763,"byte_end":513768,"line_start":283,"line_end":283,"column_start":23,"column_end":28},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":514338,"byte_end":514343,"line_start":304,"line_end":304,"column_start":21,"column_end":26},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/route.rs","byte_start":514809,"byte_end":514814,"line_start":319,"line_end":319,"column_start":40,"column_end":45},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3091},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/router/mod.rs","byte_start":463837,"byte_end":463843,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":516192,"byte_end":516198,"line_start":41,"line_end":41,"column_start":25,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2022},"to":{"krate":38,"index":2359}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/rocket.rs","byte_start":519419,"byte_end":519425,"line_start":116,"line_end":116,"column_start":6,"column_end":12},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":547921,"byte_end":547928,"line_start":70,"line_end":70,"column_start":6,"column_end":13},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":549287,"byte_end":549294,"line_start":112,"line_end":112,"column_start":40,"column_end":47},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/catcher.rs","byte_start":549426,"byte_end":549433,"line_start":118,"line_end":118,"column_start":23,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/ext.rs","byte_start":555344,"byte_end":555348,"line_start":3,"line_end":3,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2782},"to":{"krate":0,"index":2132}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/rocket-0.4.2/src/ext.rs","byte_start":555834,"byte_end":555835,"line_start":19,"line_end":19,"column_start":31,"column_end":32},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2135},"to":{"krate":0,"index":2132}}]}