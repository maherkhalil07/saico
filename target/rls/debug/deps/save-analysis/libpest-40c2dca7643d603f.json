{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","pest","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=40c2dca7643d603f","-C","extra-filename=-40c2dca7643d603f","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--extern","ucd_trie=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libucd_trie-00455ed9cba8c7f8.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libpest-40c2dca7643d603f.rmeta"},"prelude":{"crate_id":{"name":"pest","disambiguator":[1695147242456190067,455918831203528176]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"<::alloc::macros::format macros>","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","num":15,"id":{"name":"ucd_trie","disambiguator":[16963432129987279296,15146759015324157544]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":407,"byte_end":3421,"line_start":10,"line_end":103,"column_start":1,"column_end":58}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":267},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2563,"byte_end":2569,"line_start":73,"line_end":73,"column_start":17,"column_end":23},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2594,"byte_end":2599,"line_start":74,"line_end":74,"column_start":24,"column_end":29},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":642},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2601,"byte_end":2610,"line_start":74,"line_end":74,"column_start":31,"column_end":40},"alias_span":null,"name":"Atomicity","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":626},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2612,"byte_end":2621,"line_start":74,"line_end":74,"column_start":42,"column_end":51},"alias_span":null,"name":"Lookahead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":658},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2623,"byte_end":2631,"line_start":74,"line_end":74,"column_start":53,"column_end":61},"alias_span":null,"name":"MatchDir","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2633,"byte_end":2644,"line_start":74,"line_end":74,"column_start":63,"column_end":74},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":672},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2646,"byte_end":2657,"line_start":74,"line_end":74,"column_start":76,"column_end":87},"alias_span":null,"name":"ParserState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":687},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2678,"byte_end":2686,"line_start":75,"line_end":75,"column_start":19,"column_end":27},"alias_span":null,"name":"Position","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":454},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2703,"byte_end":2708,"line_start":76,"line_end":76,"column_start":16,"column_end":21},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":722},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2710,"byte_end":2714,"line_start":76,"line_end":76,"column_start":23,"column_end":27},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":749},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2774,"byte_end":2779,"line_start":79,"line_end":79,"column_start":16,"column_end":21},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/mod.rs","byte_start":27525,"byte_end":27534,"line_start":18,"line_end":18,"column_start":27,"column_end":36},"alias_span":null,"name":"FlatPairs","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":580},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/mod.rs","byte_start":27556,"byte_end":27560,"line_start":19,"line_end":19,"column_start":21,"column_end":25},"alias_span":null,"name":"Pair","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":591},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/mod.rs","byte_start":27583,"byte_end":27588,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"Pairs","value":"","parent":{"krate":0,"index":63}},{"kind":"Use","ref_id":{"krate":0,"index":615},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/mod.rs","byte_start":27666,"byte_end":27672,"line_start":22,"line_end":22,"column_start":23,"column_end":29},"alias_span":null,"name":"Tokens","value":"","parent":{"krate":0,"index":63}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":407,"byte_end":3421,"line_start":10,"line_end":103,"column_start":1,"column_end":58},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":63},{"krate":0,"index":259},{"krate":0,"index":263},{"krate":0,"index":270},{"krate":0,"index":337},{"krate":0,"index":391},{"krate":0,"index":423},{"krate":0,"index":462},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" # pest. The Elegant Parser","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":28},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":492},{"krate":0,"index":514},{"krate":0,"index":511},{"krate":0,"index":508},{"krate":0,"index":504},{"krate":0,"index":500},{"krate":0,"index":517},{"krate":0,"index":538},{"krate":0,"index":535},{"krate":0,"index":532},{"krate":0,"index":528},{"krate":0,"index":524},{"krate":0,"index":541},{"krate":0,"index":558},{"krate":0,"index":556},{"krate":0,"index":554},{"krate":0,"index":551},{"krate":0,"index":548},{"krate":0,"index":560},{"krate":0,"index":578},{"krate":0,"index":576},{"krate":0,"index":574},{"krate":0,"index":571},{"krate":0,"index":568},{"krate":0,"index":36},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":62}],"decl_id":null,"docs":" Types for different kinds of parsing failures.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4082,"byte_end":4087,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error { variant, location, line_col }","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Parse-related error type.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":494},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4130,"byte_end":4137,"line_start":25,"line_end":25,"column_start":9,"column_end":16},"name":"variant","qualname":"::error::Error::variant","value":"error::ErrorVariant<R>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Variant of the error\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":495},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4205,"byte_end":4213,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"location","qualname":"::error::Error::location","value":"error::InputLocation","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Location within the input string\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":496},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4282,"byte_end":4290,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"name":"line_col","qualname":"::error::Error::line_col","value":"error::LineColLocation","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Line/column within the input string\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":519},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4576,"byte_end":4588,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"ParsingError","qualname":"::error::ErrorVariant::ParsingError","value":"ErrorVariant::ParsingError { positives, negatives }","parent":{"krate":0,"index":517},"children":[],"decl_id":null,"docs":" Generated parsing error with expected and unexpected `Rule`s\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":522},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4752,"byte_end":4763,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"CustomError","qualname":"::error::ErrorVariant::CustomError","value":"ErrorVariant::CustomError { message }","parent":{"krate":0,"index":517},"children":[],"decl_id":null,"docs":" Custom error with a message\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":517},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4485,"byte_end":4497,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"ErrorVariant","qualname":"::error::ErrorVariant","value":"ErrorVariant::{ParsingError, CustomError}","parent":null,"children":[{"krate":0,"index":519},{"krate":0,"index":522}],"decl_id":null,"docs":" Different kinds of parsing errors.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":542},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4993,"byte_end":4996,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::InputLocation::Pos","value":"InputLocation::Pos(usize)","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":5063,"byte_end":5067,"line_start":58,"line_end":58,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::InputLocation::Span","value":"InputLocation::Span((usize, usize))","parent":{"krate":0,"index":541},"children":[],"decl_id":null,"docs":" `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":541},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":4920,"byte_end":4933,"line_start":54,"line_end":54,"column_start":10,"column_end":23},"name":"InputLocation","qualname":"::error::InputLocation","value":"InputLocation::{Pos, Span}","parent":null,"children":[{"krate":0,"index":542},{"krate":0,"index":545}],"decl_id":null,"docs":" Where an `Error` has occurred.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":5284,"byte_end":5287,"line_start":65,"line_end":65,"column_start":5,"column_end":8},"name":"Pos","qualname":"::error::LineColLocation::Pos","value":"LineColLocation::Pos((usize, usize))","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Line/column pair if `Error` was created by `Error::new_from_pos`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":5384,"byte_end":5388,"line_start":67,"line_end":67,"column_start":5,"column_end":9},"name":"Span","qualname":"::error::LineColLocation::Span","value":"LineColLocation::Span((usize, usize), (usize, usize))","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" Line/column pairs if `Error` was created by `Error::new_from_span`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":5189,"byte_end":5204,"line_start":63,"line_end":63,"column_start":10,"column_end":25},"name":"LineColLocation","qualname":"::error::LineColLocation","value":"LineColLocation::{Pos, Span}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":564}],"decl_id":null,"docs":" Line/column where an `Error` has occurred.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":6286,"byte_end":6298,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"new_from_pos","qualname":"<Error<R>>::new_from_pos","value":"fn (variant: ErrorVariant<R>, pos: Position) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Position`.","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":6234,"byte_end":6274,"line_start":97,"line_end":97,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":7548,"byte_end":7561,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"new_from_span","qualname":"<Error<R>>::new_from_span","value":"fn (variant: ErrorVariant<R>, span: Span) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates `Error` from `ErrorVariant` and `Span`.","sig":null,"attributes":[{"value":"allow(clippy :: needless_pass_by_value)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":7496,"byte_end":7536,"line_start":137,"line_end":137,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":9272,"byte_end":9281,"line_start":188,"line_end":188,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Error<R>>::with_path","value":"fn (mut self, path: &str) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Error` variant with `path` which is shown when formatted with `Display`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":10607,"byte_end":10620,"line_start":229,"line_end":229,"column_start":12,"column_end":25},"name":"renamed_rules","qualname":"<Error<R>>::renamed_rules","value":"fn <F> (mut self, f: F) -> Error<R>","parent":null,"children":[],"decl_id":null,"docs":" Renames all `Rule`s if this is a [`ParsingError`]. It does nothing when called on a\n [`CustomError`].","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iterators","qualname":"::iterators","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/mod.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":108},{"krate":0,"index":164},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258}],"decl_id":null,"docs":" Types and iterators for parser output.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":75},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":28411,"byte_end":28420,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"FlatPairs","qualname":"::iterators::flat_pairs::FlatPairs","value":"FlatPairs {  }","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`Pairs::flatten`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":29677,"byte_end":29683,"line_start":73,"line_end":73,"column_start":12,"column_end":18},"name":"tokens","qualname":"<FlatPairs>::tokens","value":"fn (self) -> Tokens<'i, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for these pairs.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":29656,"byte_end":29665,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":580},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":33406,"byte_end":33410,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"Pair","qualname":"::iterators::pair::Pair","value":"Pair {  }","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":585}],"decl_id":null,"docs":" A matching pair of [`Token`]s and everything between them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":34595,"byte_end":34602,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"as_rule","qualname":"<Pair>::as_rule","value":"fn (&self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Rule` of the `Pair`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":34574,"byte_end":34583,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":35410,"byte_end":35416,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pair>::as_str","value":"fn (&self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the token `Pair`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":35389,"byte_end":35398,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":36370,"byte_end":36379,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"into_span","qualname":"<Pair>::into_span","value":"fn (self) -> Span<'i>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, consuming it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":36275,"byte_end":36284,"line_start":140,"line_end":140,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"2.0.0\", note = \"Please use `as_span` instead\")","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":36289,"byte_end":36358,"line_start":141,"line_end":141,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":37095,"byte_end":37102,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"as_span","qualname":"<Pair>::as_span","value":"fn (&self) -> Span<'i>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span` defined by the `Pair`, **without** consuming it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":37074,"byte_end":37083,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":38004,"byte_end":38014,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Pair>::into_inner","value":"fn (self) -> Pairs<'i, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Pairs` between the `Pair`, consuming it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":37983,"byte_end":37992,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":38798,"byte_end":38804,"line_start":227,"line_end":227,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pair>::tokens","value":"fn (self) -> Tokens<'i, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pair`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":38777,"byte_end":38786,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":39801,"byte_end":39807,"line_start":260,"line_end":260,"column_start":12,"column_end":18},"name":"single","qualname":"<Pairs>::single","value":"fn (pair: Pair<'i, R>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Pairs` iterator containing just the single `Pair`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":591},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":44074,"byte_end":44079,"line_start":31,"line_end":31,"column_start":12,"column_end":17},"name":"Pairs","qualname":"::iterators::pairs::Pairs","value":"Pairs {  }","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"decl_id":null,"docs":" An iterator over [`Pair`]s. It is created by [`pest::state`] and [`Pair::into_inner`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":45364,"byte_end":45370,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Pairs>::as_str","value":"fn (&self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the starting position of the first token `Pair`\n and the ending position of the last token `Pair` of the `Pairs`. This also captures\n the input between those two token `Pair`s.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":45343,"byte_end":45352,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":46512,"byte_end":46518,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"concat","qualname":"<Pairs>::concat","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Captures inner token `Pair`s and concatenates resulting `&str`s. This does not capture\n the input between token `Pair`s.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":46491,"byte_end":46500,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":47371,"byte_end":47378,"line_start":146,"line_end":146,"column_start":12,"column_end":19},"name":"flatten","qualname":"<Pairs>::flatten","value":"fn (self) -> FlatPairs<'i, R>","parent":null,"children":[],"decl_id":null,"docs":" Flattens the `Pairs`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":47350,"byte_end":47359,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":48136,"byte_end":48142,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"tokens","qualname":"<Pairs>::tokens","value":"fn (self) -> Tokens<'i, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Tokens` for the `Pairs`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":48115,"byte_end":48124,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":48353,"byte_end":48357,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"peek","qualname":"<Pairs>::peek","value":"fn (&self) -> Option<Pair<'i, R>>","parent":null,"children":[],"decl_id":null,"docs":" Peek at the first inner `Pair` without changing the position of this iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":48332,"byte_end":48341,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":615},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":56140,"byte_end":56146,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Tokens","qualname":"::iterators::tokens::Tokens","value":"Tokens {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621}],"decl_id":null,"docs":" An iterator over [`Token`]s. It is created by [`Pair::tokens`] and [`Pairs::tokens`].","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":267},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser.rs","byte_start":75319,"byte_end":75325,"line_start":15,"line_end":15,"column_start":11,"column_end":17},"name":"Parser","qualname":"::parser::Parser","value":"Parser<R: RuleType>","parent":null,"children":[{"krate":0,"index":269}],"decl_id":null,"docs":" A trait with a single method that parses strings.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser.rs","byte_start":75394,"byte_end":75399,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"parse","qualname":"::parser::Parser::parse","value":"fn (rule: R, input: &str) -> Result<Pairs<R>, Error<R>>","parent":{"krate":0,"index":267},"children":[],"decl_id":null,"docs":" Parses a `&str` starting from `rule`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":627},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76231,"byte_end":76239,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Positive","qualname":"::parser_state::Lookahead::Positive","value":"Lookahead::Positive","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":629},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76245,"byte_end":76253,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"Negative","qualname":"::parser_state::Lookahead::Negative","value":"Lookahead::Negative","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":631},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76259,"byte_end":76263,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"None","qualname":"::parser_state::Lookahead::None","value":"Lookahead::None","parent":{"krate":0,"index":626},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":626},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76215,"byte_end":76224,"line_start":24,"line_end":24,"column_start":10,"column_end":19},"name":"Lookahead","qualname":"::parser_state::Lookahead","value":"Lookahead::{Positive, Negative, None}","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631}],"decl_id":null,"docs":" The current lookahead status of a [`ParserState`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76435,"byte_end":76441,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Atomic","qualname":"::parser_state::Atomicity::Atomic","value":"Atomicity::Atomic","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":645},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76447,"byte_end":76461,"line_start":36,"line_end":36,"column_start":5,"column_end":19},"name":"CompoundAtomic","qualname":"::parser_state::Atomicity::CompoundAtomic","value":"Atomicity::CompoundAtomic","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":647},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76467,"byte_end":76476,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"NonAtomic","qualname":"::parser_state::Atomicity::NonAtomic","value":"Atomicity::NonAtomic","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":642},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76419,"byte_end":76428,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"Atomicity","qualname":"::parser_state::Atomicity","value":"Atomicity::{Atomic, CompoundAtomic, NonAtomic}","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":645},{"krate":0,"index":647}],"decl_id":null,"docs":" The current atomicity of a [`ParserState`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":285},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76566,"byte_end":76577,"line_start":41,"line_end":41,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::parser_state::ParseResult","value":"Result<S, S>","parent":null,"children":[],"decl_id":null,"docs":" Type alias to simplify specifying the return value of chained closures.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":659},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76749,"byte_end":76760,"line_start":46,"line_end":46,"column_start":5,"column_end":16},"name":"BottomToTop","qualname":"::parser_state::MatchDir::BottomToTop","value":"MatchDir::BottomToTop","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":661},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76766,"byte_end":76777,"line_start":47,"line_end":47,"column_start":5,"column_end":16},"name":"TopToBottom","qualname":"::parser_state::MatchDir::TopToBottom","value":"MatchDir::TopToBottom","parent":{"krate":0,"index":658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":658},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76734,"byte_end":76742,"line_start":45,"line_end":45,"column_start":10,"column_end":18},"name":"MatchDir","qualname":"::parser_state::MatchDir","value":"MatchDir::{BottomToTop, TopToBottom}","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":661}],"decl_id":null,"docs":" Match direction for the stack. Used in `PEEK[a..b]`/`stack_match_peek_slice`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":76888,"byte_end":76899,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"ParserState","qualname":"::parser_state::ParserState","value":"ParserState {  }","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682}],"decl_id":null,"docs":" The complete state of a [`Parser`].","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":287},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":77350,"byte_end":77355,"line_start":74,"line_end":74,"column_start":8,"column_end":13},"name":"state","qualname":"::parser_state::state","value":"fn <'i, R, F> (input: &'i str, f: F) -> Result<pairs::Pairs<'i, R>, Error<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `ParserState` from a `&str`, supplying it to a closure `f`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":78798,"byte_end":78801,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserState>::new","value":"fn (input: &'i str) -> Box<Self>","parent":null,"children":[],"decl_id":null,"docs":" Allocates a fresh `ParserState` object to the heap and returns the owned `Box`. This `Box`\n will be passed from closure to closure based on the needs of the specified `Parser`.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":78753,"byte_end":78786,"line_start":114,"line_end":114,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":79703,"byte_end":79711,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"position","qualname":"<ParserState>::position","value":"fn (&self) -> &Position<'i>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the current `Position` of the `ParserState`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":80328,"byte_end":80337,"line_start":167,"line_end":167,"column_start":12,"column_end":21},"name":"atomicity","qualname":"<ParserState>::atomicity","value":"fn (&self) -> Atomicity","parent":null,"children":[],"decl_id":null,"docs":" Returns the current atomicity of the `ParserState`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":80994,"byte_end":80998,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"rule","qualname":"<ParserState>::rule","value":"fn <F> (mut self: Box<Self>, rule: R, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper needed to generate tokens. This will associate the `R` type rule to the closure\n meant to match the rule.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":80973,"byte_end":80982,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":86471,"byte_end":86479,"line_start":360,"line_end":360,"column_start":12,"column_end":20},"name":"sequence","qualname":"<ParserState>::sequence","value":"fn <F> (self: Box<Self>, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a sequence of transformations provided by `f` from the `Box<ParserState>`. Returns\n the same `Result` returned by `f` in the case of an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":86450,"byte_end":86459,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":88056,"byte_end":88062,"line_start":409,"line_end":409,"column_start":12,"column_end":18},"name":"repeat","qualname":"<ParserState>::repeat","value":"fn <F> (self: Box<Self>, mut f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Repeatedly applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` wrapped up in an `Err`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":88035,"byte_end":88044,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":89269,"byte_end":89277,"line_start":450,"line_end":450,"column_start":12,"column_end":20},"name":"optional","qualname":"<ParserState>::optional","value":"fn <F> (self: Box<Self>, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Optionally applies the transformation provided by `f` from the `Box<ParserState>`. Returns\n `Ok` with the updated `Box<ParserState>` returned by `f` regardless of the `Result`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":89248,"byte_end":89257,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":90489,"byte_end":90502,"line_start":484,"line_end":484,"column_start":12,"column_end":25},"name":"match_char_by","qualname":"<ParserState>::match_char_by","value":"fn <F> (mut self: Box<Self>, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character based on a filter function. Returns `Ok` with the\n updated `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>`\n otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":90468,"byte_end":90477,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":91598,"byte_end":91610,"line_start":518,"line_end":518,"column_start":12,"column_end":24},"name":"match_string","qualname":"<ParserState>::match_string","value":"fn (mut self: Box<Self>, string: &str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the given string. Returns `Ok` with the updated `Box<ParserState>` if\n successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":91577,"byte_end":91586,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":92697,"byte_end":92714,"line_start":549,"line_end":549,"column_start":12,"column_end":29},"name":"match_insensitive","qualname":"<ParserState>::match_insensitive","value":"fn (mut self: Box<Self>, string: &str) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to case-insensitively match the given string. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":92676,"byte_end":92685,"line_start":548,"line_end":548,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":93806,"byte_end":93817,"line_start":580,"line_end":580,"column_start":12,"column_end":23},"name":"match_range","qualname":"<ParserState>::match_range","value":"fn (mut self: Box<Self>, range: Range<char>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match a single character from the given range. Returns `Ok` with the updated\n `Box<ParserState>` if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":93785,"byte_end":93794,"line_start":579,"line_end":579,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":94862,"byte_end":94866,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"skip","qualname":"<ParserState>::skip","value":"fn (mut self: Box<Self>, n: usize) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip `n` characters forward. Returns `Ok` with the updated `Box<ParserState>`\n if successful, or `Err` with the updated `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":94841,"byte_end":94850,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":95724,"byte_end":95734,"line_start":637,"line_end":637,"column_start":12,"column_end":22},"name":"skip_until","qualname":"<ParserState>::skip_until","value":"fn (mut self: Box<Self>, strings: &[&str]) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to skip forward until one of the given strings is found. Returns `Ok` with the\n updated `Box<ParserState>` whether or not one of the strings is found.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":95703,"byte_end":95712,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":96694,"byte_end":96708,"line_start":664,"line_end":664,"column_start":12,"column_end":26},"name":"start_of_input","qualname":"<ParserState>::start_of_input","value":"fn (self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the start of the input. Returns `Ok` with the current `Box<ParserState>`\n if the parser has not yet advanced, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":96673,"byte_end":96682,"line_start":663,"line_end":663,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":97684,"byte_end":97696,"line_start":694,"line_end":694,"column_start":12,"column_end":24},"name":"end_of_input","qualname":"<ParserState>::end_of_input","value":"fn (self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to match the end of the input. Returns `Ok` with the current `Box<ParserState>` if\n there is no input remaining, or `Err` with the current `Box<ParserState>` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":97663,"byte_end":97672,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":98731,"byte_end":98740,"line_start":727,"line_end":727,"column_start":12,"column_end":21},"name":"lookahead","qualname":"<ParserState>::lookahead","value":"fn <F> (mut self: Box<Self>, is_positive: bool, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a lookahead transformation provided by `f` from the `Box<ParserState>`. It returns\n `Ok` with the current `Box<ParserState>` if `f` also returns an `Ok`, or `Err` with the current\n `Box<ParserState>` otherwise. If `is_positive` is `false`, it swaps the `Ok` and `Err`\n together, negating the `Result`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":98710,"byte_end":98719,"line_start":726,"line_end":726,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":100793,"byte_end":100799,"line_start":794,"line_end":794,"column_start":12,"column_end":18},"name":"atomic","qualname":"<ParserState>::atomic","value":"fn <F> (mut self: Box<Self>, atomicity: Atomicity, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Transformation which stops `Token`s from being generated according to `is_atomic`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":100772,"byte_end":100781,"line_start":793,"line_end":793,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":102387,"byte_end":102397,"line_start":842,"line_end":842,"column_start":12,"column_end":22},"name":"stack_push","qualname":"<ParserState>::stack_push","value":"fn <F> (self: Box<Self>, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Evaluates the result of closure `f` and pushes the span of the input consumed from before\n `f` is called to after `f` is called to the stack. Returns `Ok(Box<ParserState>)` if `f` is\n called successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":102366,"byte_end":102375,"line_start":841,"line_end":841,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":103621,"byte_end":103631,"line_start":880,"line_end":880,"column_start":12,"column_end":22},"name":"stack_peek","qualname":"<ParserState>::stack_peek","value":"fn (self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Peeks the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":103600,"byte_end":103609,"line_start":879,"line_end":879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":104631,"byte_end":104640,"line_start":909,"line_end":909,"column_start":12,"column_end":21},"name":"stack_pop","qualname":"<ParserState>::stack_pop","value":"fn (mut self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Pops the top of the stack and attempts to match the string. Returns `Ok(Box<ParserState>)`\n if the string is matched successfully, or `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":104610,"byte_end":104619,"line_start":908,"line_end":908,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":106029,"byte_end":106051,"line_start":943,"line_end":943,"column_start":12,"column_end":34},"name":"stack_match_peek_slice","qualname":"<ParserState>::stack_match_peek_slice","value":"fn (mut self: Box<Self>, start: i32, end: Option<i32>, match_dir: MatchDir) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches part of the state of the stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":106008,"byte_end":106017,"line_start":942,"line_end":942,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":107736,"byte_end":107752,"line_start":995,"line_end":995,"column_start":12,"column_end":28},"name":"stack_match_peek","qualname":"<ParserState>::stack_match_peek","value":"fn (self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":107715,"byte_end":107724,"line_start":994,"line_end":994,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":108638,"byte_end":108653,"line_start":1018,"line_end":1018,"column_start":12,"column_end":27},"name":"stack_match_pop","qualname":"<ParserState>::stack_match_pop","value":"fn (mut self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Matches the full state of the stack. This method will clear the stack as it evaluates.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":108617,"byte_end":108626,"line_start":1017,"line_end":1017,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":109832,"byte_end":109842,"line_start":1056,"line_end":1056,"column_start":12,"column_end":22},"name":"stack_drop","qualname":"<ParserState>::stack_drop","value":"fn (mut self: Box<Self>) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Drops the top of the stack. Returns `Ok(Box<ParserState>)` if there was a value to drop, or\n `Err(Box<ParserState>)` otherwise.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":109811,"byte_end":109820,"line_start":1055,"line_end":1055,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":110945,"byte_end":110959,"line_start":1087,"line_end":1087,"column_start":12,"column_end":26},"name":"restore_on_err","qualname":"<ParserState>::restore_on_err","value":"fn <F> (self: Box<Self>, f: F) -> ParseResult<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Restores the original state of the `ParserState` when `f` returns an `Err`. Currently,\n this method only restores the stack.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":110924,"byte_end":110933,"line_start":1086,"line_end":1086,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":687},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":113639,"byte_end":113647,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"Position","qualname":"::position::Position","value":"Position {  }","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"decl_id":null,"docs":" A cursor position in a `&str` which provides useful methods to manually parse that string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":114749,"byte_end":114752,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"fn (input: &str, pos: usize) -> Option<Position>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new `Position` at the given position. If the specified position is\n an invalid index, or the specified position is not a valid UTF8 boundary, then None is\n returned.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":114704,"byte_end":114737,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":115116,"byte_end":115126,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_start","qualname":"<Position>::from_start","value":"fn (input: &'i str) -> Position<'i>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Position` at the start of a `&str`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":115095,"byte_end":115104,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":115586,"byte_end":115589,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"pos","qualname":"<Position>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte position of this `Position` as a `usize`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":115565,"byte_end":115574,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":116088,"byte_end":116092,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"span","qualname":"<Position>::span","value":"fn (&self, other: &Position<'i>) -> span::Span<'i>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Span` from two `Position`s.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":116067,"byte_end":116076,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":117185,"byte_end":117193,"line_start":135,"line_end":135,"column_start":12,"column_end":20},"name":"line_col","qualname":"<Position>::line_col","value":"fn (&self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Returns the line and column number of this `Position`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":117164,"byte_end":117173,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":119071,"byte_end":119078,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"line_of","qualname":"<Position>::line_of","value":"fn (&self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Returns the entire line of the input that contains this `Position`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":119050,"byte_end":119059,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":391},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prec_climber","qualname":"::prec_climber","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":694},{"krate":0,"index":706},{"krate":0,"index":705},{"krate":0,"index":703},{"krate":0,"index":701},{"krate":0,"index":699},{"krate":0,"index":708},{"krate":0,"index":713},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":716},{"krate":0,"index":719},{"krate":0,"index":406}],"decl_id":null,"docs":" Constructs useful in infix operator parsing with the precedence climbing method.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":695},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":132376,"byte_end":132380,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Left","qualname":"::prec_climber::Assoc::Left","value":"Assoc::Left","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Left `Operator` associativity\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":697},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":132425,"byte_end":132430,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Right","qualname":"::prec_climber::Assoc::Right","value":"Assoc::Right","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Right `Operator` associativity\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":694},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":132326,"byte_end":132331,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Assoc","qualname":"::prec_climber::Assoc","value":"Assoc::{Left, Right}","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":697}],"decl_id":null,"docs":" Associativity of an [`Operator`].","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":708},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":132556,"byte_end":132564,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"Operator","qualname":"::prec_climber::Operator","value":"Operator {  }","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"decl_id":null,"docs":" Infix operator used in [`PrecClimber`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":133179,"byte_end":133182,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<Operator<R>>::new","value":"fn (rule: R, assoc: Assoc) -> Operator<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Operator` from a `Rule` and `Assoc`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":134200,"byte_end":134211,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"PrecClimber","qualname":"::prec_climber::PrecClimber","value":"PrecClimber {  }","parent":null,"children":[{"krate":0,"index":718}],"decl_id":null,"docs":" List of operators and precedences, which can perform [precedence climbing][1] on infix\n expressions contained in a [`Pairs`]. The token pairs contained in the `Pairs` should start\n with a *primary* pair and then alternate between an *operator* and a *primary*.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":135251,"byte_end":135254,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<PrecClimber<R>>::new","value":"fn (ops: Vec<Operator<R>>) -> PrecClimber<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PrecClimber` from the `Operator`s contained in `ops`. Every entry in the\n `Vec` has precedence *index + 1*. In order to have operators with same precedence, they need\n to be chained with `|` between them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":136956,"byte_end":136961,"line_start":172,"line_end":172,"column_start":12,"column_end":17},"name":"climb","qualname":"<PrecClimber<R>>::climb","value":"fn <'i, P, F, G, T> (&self, mut pairs: P, mut primary: F, mut infix: G) -> T","parent":null,"children":[],"decl_id":null,"docs":" Performs the precedence climbing algorithm on the `pairs` in a similar manner to map-reduce.\n *Primary* pairs are mapped with `primary` and then reduced to one single result with\n `infix`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":139718,"byte_end":139722,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"Span","qualname":"::span::Span","value":"Span {  }","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"decl_id":null,"docs":" A span over a `&str`. It is created from either [two `Position`s] or from a [`Pair`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":140788,"byte_end":140791,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"fn (input: &str, start: usize, end: usize) -> Option<Span>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a new span. Will return `None` if `input[start..end]` is an invalid index\n into `input`.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":140743,"byte_end":140776,"line_start":56,"line_end":56,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":141357,"byte_end":141362,"line_start":79,"line_end":79,"column_start":12,"column_end":17},"name":"start","qualname":"<Span>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start byte position as a `usize`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":141336,"byte_end":141345,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":141770,"byte_end":141773,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"end","qualname":"<Span>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end byte position as a `usize`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":141749,"byte_end":141758,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":142183,"byte_end":142192,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"start_pos","qualname":"<Span>::start_pos","value":"fn (&self) -> position::Position<'i>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s start `Position`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":142162,"byte_end":142171,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":142724,"byte_end":142731,"line_start":134,"line_end":134,"column_start":12,"column_end":19},"name":"end_pos","qualname":"<Span>::end_pos","value":"fn (&self) -> position::Position<'i>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Span`'s end `Position`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":142703,"byte_end":142712,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":143283,"byte_end":143288,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"split","qualname":"<Span>::split","value":"fn (self) -> (position::Position<'i>, position::Position<'i>)","parent":null,"children":[],"decl_id":null,"docs":" Splits the `Span` into a pair of `Position`s.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":143262,"byte_end":143271,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":144271,"byte_end":144277,"line_start":179,"line_end":179,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Span>::as_str","value":"fn (&self) -> &'i str","parent":null,"children":[],"decl_id":null,"docs":" Captures a slice from the `&str` defined by the `Span`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":144250,"byte_end":144259,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145105,"byte_end":145110,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"lines","qualname":"<Span>::lines","value":"fn (&self) -> Lines","parent":null,"children":[],"decl_id":null,"docs":" Iterates over all lines (partially) covered by this span.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145084,"byte_end":145093,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":146103,"byte_end":146108,"line_start":241,"line_end":241,"column_start":12,"column_end":17},"name":"Lines","qualname":"::span::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" Line iterator for Spans, created by [`Span::lines()`].","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":752},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/token.rs","byte_start":153770,"byte_end":153775,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"name":"Start","qualname":"::token::Token::Start","value":"Token::Start { rule, pos }","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" The starting `Position` of a matched `Rule`\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":755},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/token.rs","byte_start":153862,"byte_end":153865,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"End","qualname":"::token::Token::End","value":"Token::End { rule, pos }","parent":{"krate":0,"index":749},"children":[],"decl_id":null,"docs":" The ending `Position` of a matched `Rule`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":749},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/token.rs","byte_start":153699,"byte_end":153704,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Token","qualname":"::token::Token","value":"Token::{Start, End}","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":755}],"decl_id":null,"docs":" A token generated by a `Parser`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":484},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unicode","qualname":"::unicode","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":780},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":486}],"decl_id":null,"docs":" Character inclusion in binary or General_Category value Unicode sets.","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154058,"byte_end":154078,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"allow(clippy :: all)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154079,"byte_end":154101,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":835},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154560,"byte_end":154570,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"name":"ALPHABETIC","qualname":"::unicode::ALPHABETIC","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":836},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154572,"byte_end":154584,"line_start":27,"line_end":27,"column_start":21,"column_end":33},"name":"BIDI_CONTROL","qualname":"::unicode::BIDI_CONTROL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":837},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154586,"byte_end":154600,"line_start":27,"line_end":27,"column_start":35,"column_end":49},"name":"CASE_IGNORABLE","qualname":"::unicode::CASE_IGNORABLE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154602,"byte_end":154607,"line_start":27,"line_end":27,"column_start":51,"column_end":56},"name":"CASED","qualname":"::unicode::CASED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":839},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154609,"byte_end":154632,"line_start":27,"line_end":27,"column_start":58,"column_end":81},"name":"CHANGES_WHEN_CASEFOLDED","qualname":"::unicode::CHANGES_WHEN_CASEFOLDED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":840},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154642,"byte_end":154665,"line_start":28,"line_end":28,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_CASEMAPPED","qualname":"::unicode::CHANGES_WHEN_CASEMAPPED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":841},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154667,"byte_end":154690,"line_start":28,"line_end":28,"column_start":34,"column_end":57},"name":"CHANGES_WHEN_LOWERCASED","qualname":"::unicode::CHANGES_WHEN_LOWERCASED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":842},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154692,"byte_end":154715,"line_start":28,"line_end":28,"column_start":59,"column_end":82},"name":"CHANGES_WHEN_TITLECASED","qualname":"::unicode::CHANGES_WHEN_TITLECASED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":843},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154725,"byte_end":154748,"line_start":29,"line_end":29,"column_start":9,"column_end":32},"name":"CHANGES_WHEN_UPPERCASED","qualname":"::unicode::CHANGES_WHEN_UPPERCASED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":844},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154750,"byte_end":154754,"line_start":29,"line_end":29,"column_start":34,"column_end":38},"name":"DASH","qualname":"::unicode::DASH","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":845},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154756,"byte_end":154784,"line_start":29,"line_end":29,"column_start":40,"column_end":68},"name":"DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::DEFAULT_IGNORABLE_CODE_POINT","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":846},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154786,"byte_end":154796,"line_start":29,"line_end":29,"column_start":70,"column_end":80},"name":"DEPRECATED","qualname":"::unicode::DEPRECATED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":847},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154798,"byte_end":154807,"line_start":29,"line_end":29,"column_start":82,"column_end":91},"name":"DIACRITIC","qualname":"::unicode::DIACRITIC","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":848},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154817,"byte_end":154825,"line_start":30,"line_end":30,"column_start":9,"column_end":17},"name":"EXTENDER","qualname":"::unicode::EXTENDER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":849},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154827,"byte_end":154840,"line_start":30,"line_end":30,"column_start":19,"column_end":32},"name":"GRAPHEME_BASE","qualname":"::unicode::GRAPHEME_BASE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":850},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154842,"byte_end":154857,"line_start":30,"line_end":30,"column_start":34,"column_end":49},"name":"GRAPHEME_EXTEND","qualname":"::unicode::GRAPHEME_EXTEND","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":851},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154859,"byte_end":154872,"line_start":30,"line_end":30,"column_start":51,"column_end":64},"name":"GRAPHEME_LINK","qualname":"::unicode::GRAPHEME_LINK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":852},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154874,"byte_end":154883,"line_start":30,"line_end":30,"column_start":66,"column_end":75},"name":"HEX_DIGIT","qualname":"::unicode::HEX_DIGIT","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":853},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154885,"byte_end":154891,"line_start":30,"line_end":30,"column_start":77,"column_end":83},"name":"HYPHEN","qualname":"::unicode::HYPHEN","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":854},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154901,"byte_end":154920,"line_start":31,"line_end":31,"column_start":9,"column_end":28},"name":"IDS_BINARY_OPERATOR","qualname":"::unicode::IDS_BINARY_OPERATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":855},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154922,"byte_end":154942,"line_start":31,"line_end":31,"column_start":30,"column_end":50},"name":"IDS_TRINARY_OPERATOR","qualname":"::unicode::IDS_TRINARY_OPERATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":856},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154944,"byte_end":154955,"line_start":31,"line_end":31,"column_start":52,"column_end":63},"name":"ID_CONTINUE","qualname":"::unicode::ID_CONTINUE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":857},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154957,"byte_end":154965,"line_start":31,"line_end":31,"column_start":65,"column_end":73},"name":"ID_START","qualname":"::unicode::ID_START","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":858},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154967,"byte_end":154978,"line_start":31,"line_end":31,"column_start":75,"column_end":86},"name":"IDEOGRAPHIC","qualname":"::unicode::IDEOGRAPHIC","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":154980,"byte_end":154992,"line_start":31,"line_end":31,"column_start":88,"column_end":100},"name":"JOIN_CONTROL","qualname":"::unicode::JOIN_CONTROL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":860},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155002,"byte_end":155025,"line_start":32,"line_end":32,"column_start":9,"column_end":32},"name":"LOGICAL_ORDER_EXCEPTION","qualname":"::unicode::LOGICAL_ORDER_EXCEPTION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":861},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155027,"byte_end":155036,"line_start":32,"line_end":32,"column_start":34,"column_end":43},"name":"LOWERCASE","qualname":"::unicode::LOWERCASE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155038,"byte_end":155042,"line_start":32,"line_end":32,"column_start":45,"column_end":49},"name":"MATH","qualname":"::unicode::MATH","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":863},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155044,"byte_end":155067,"line_start":32,"line_end":32,"column_start":51,"column_end":74},"name":"NONCHARACTER_CODE_POINT","qualname":"::unicode::NONCHARACTER_CODE_POINT","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":864},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155069,"byte_end":155085,"line_start":32,"line_end":32,"column_start":76,"column_end":92},"name":"OTHER_ALPHABETIC","qualname":"::unicode::OTHER_ALPHABETIC","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":865},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155095,"byte_end":155129,"line_start":33,"line_end":33,"column_start":9,"column_end":43},"name":"OTHER_DEFAULT_IGNORABLE_CODE_POINT","qualname":"::unicode::OTHER_DEFAULT_IGNORABLE_CODE_POINT","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":866},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155131,"byte_end":155152,"line_start":33,"line_end":33,"column_start":45,"column_end":66},"name":"OTHER_GRAPHEME_EXTEND","qualname":"::unicode::OTHER_GRAPHEME_EXTEND","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":867},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155154,"byte_end":155171,"line_start":33,"line_end":33,"column_start":68,"column_end":85},"name":"OTHER_ID_CONTINUE","qualname":"::unicode::OTHER_ID_CONTINUE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":868},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155181,"byte_end":155195,"line_start":34,"line_end":34,"column_start":9,"column_end":23},"name":"OTHER_ID_START","qualname":"::unicode::OTHER_ID_START","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":869},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155197,"byte_end":155212,"line_start":34,"line_end":34,"column_start":25,"column_end":40},"name":"OTHER_LOWERCASE","qualname":"::unicode::OTHER_LOWERCASE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":870},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155214,"byte_end":155224,"line_start":34,"line_end":34,"column_start":42,"column_end":52},"name":"OTHER_MATH","qualname":"::unicode::OTHER_MATH","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":871},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155226,"byte_end":155241,"line_start":34,"line_end":34,"column_start":54,"column_end":69},"name":"OTHER_UPPERCASE","qualname":"::unicode::OTHER_UPPERCASE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":872},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155243,"byte_end":155257,"line_start":34,"line_end":34,"column_start":71,"column_end":85},"name":"PATTERN_SYNTAX","qualname":"::unicode::PATTERN_SYNTAX","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":873},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155267,"byte_end":155286,"line_start":35,"line_end":35,"column_start":9,"column_end":28},"name":"PATTERN_WHITE_SPACE","qualname":"::unicode::PATTERN_WHITE_SPACE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":874},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155288,"byte_end":155316,"line_start":35,"line_end":35,"column_start":30,"column_end":58},"name":"PREPENDED_CONCATENATION_MARK","qualname":"::unicode::PREPENDED_CONCATENATION_MARK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":875},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155318,"byte_end":155332,"line_start":35,"line_end":35,"column_start":60,"column_end":74},"name":"QUOTATION_MARK","qualname":"::unicode::QUOTATION_MARK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":876},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155334,"byte_end":155341,"line_start":35,"line_end":35,"column_start":76,"column_end":83},"name":"RADICAL","qualname":"::unicode::RADICAL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":877},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155351,"byte_end":155369,"line_start":36,"line_end":36,"column_start":9,"column_end":27},"name":"REGIONAL_INDICATOR","qualname":"::unicode::REGIONAL_INDICATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":878},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155371,"byte_end":155388,"line_start":36,"line_end":36,"column_start":29,"column_end":46},"name":"SENTENCE_TERMINAL","qualname":"::unicode::SENTENCE_TERMINAL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":879},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155390,"byte_end":155401,"line_start":36,"line_end":36,"column_start":48,"column_end":59},"name":"SOFT_DOTTED","qualname":"::unicode::SOFT_DOTTED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":880},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155403,"byte_end":155423,"line_start":36,"line_end":36,"column_start":61,"column_end":81},"name":"TERMINAL_PUNCTUATION","qualname":"::unicode::TERMINAL_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":881},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155425,"byte_end":155442,"line_start":36,"line_end":36,"column_start":83,"column_end":100},"name":"UNIFIED_IDEOGRAPH","qualname":"::unicode::UNIFIED_IDEOGRAPH","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":882},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155452,"byte_end":155461,"line_start":37,"line_end":37,"column_start":9,"column_end":18},"name":"UPPERCASE","qualname":"::unicode::UPPERCASE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":883},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155463,"byte_end":155481,"line_start":37,"line_end":37,"column_start":20,"column_end":38},"name":"VARIATION_SELECTOR","qualname":"::unicode::VARIATION_SELECTOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":884},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155483,"byte_end":155494,"line_start":37,"line_end":37,"column_start":40,"column_end":51},"name":"WHITE_SPACE","qualname":"::unicode::WHITE_SPACE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":885},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155496,"byte_end":155508,"line_start":37,"line_end":37,"column_start":53,"column_end":65},"name":"XID_CONTINUE","qualname":"::unicode::XID_CONTINUE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":886},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155510,"byte_end":155519,"line_start":37,"line_end":37,"column_start":67,"column_end":76},"name":"XID_START","qualname":"::unicode::XID_START","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":927},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155561,"byte_end":155573,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"CASED_LETTER","qualname":"::unicode::CASED_LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":928},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155575,"byte_end":155592,"line_start":42,"line_end":42,"column_start":23,"column_end":40},"name":"CLOSE_PUNCTUATION","qualname":"::unicode::CLOSE_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":929},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155594,"byte_end":155615,"line_start":42,"line_end":42,"column_start":42,"column_end":63},"name":"CONNECTOR_PUNCTUATION","qualname":"::unicode::CONNECTOR_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":930},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155617,"byte_end":155624,"line_start":42,"line_end":42,"column_start":65,"column_end":72},"name":"CONTROL","qualname":"::unicode::CONTROL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155626,"byte_end":155641,"line_start":42,"line_end":42,"column_start":74,"column_end":89},"name":"CURRENCY_SYMBOL","qualname":"::unicode::CURRENCY_SYMBOL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":932},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155651,"byte_end":155667,"line_start":43,"line_end":43,"column_start":9,"column_end":25},"name":"DASH_PUNCTUATION","qualname":"::unicode::DASH_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155669,"byte_end":155683,"line_start":43,"line_end":43,"column_start":27,"column_end":41},"name":"DECIMAL_NUMBER","qualname":"::unicode::DECIMAL_NUMBER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":934},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155685,"byte_end":155699,"line_start":43,"line_end":43,"column_start":43,"column_end":57},"name":"ENCLOSING_MARK","qualname":"::unicode::ENCLOSING_MARK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155701,"byte_end":155718,"line_start":43,"line_end":43,"column_start":59,"column_end":76},"name":"FINAL_PUNCTUATION","qualname":"::unicode::FINAL_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155720,"byte_end":155726,"line_start":43,"line_end":43,"column_start":78,"column_end":84},"name":"FORMAT","qualname":"::unicode::FORMAT","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":937},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155736,"byte_end":155755,"line_start":44,"line_end":44,"column_start":9,"column_end":28},"name":"INITIAL_PUNCTUATION","qualname":"::unicode::INITIAL_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155757,"byte_end":155763,"line_start":44,"line_end":44,"column_start":30,"column_end":36},"name":"LETTER","qualname":"::unicode::LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":939},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155765,"byte_end":155778,"line_start":44,"line_end":44,"column_start":38,"column_end":51},"name":"LETTER_NUMBER","qualname":"::unicode::LETTER_NUMBER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":940},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155780,"byte_end":155794,"line_start":44,"line_end":44,"column_start":53,"column_end":67},"name":"LINE_SEPARATOR","qualname":"::unicode::LINE_SEPARATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":941},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155796,"byte_end":155812,"line_start":44,"line_end":44,"column_start":69,"column_end":85},"name":"LOWERCASE_LETTER","qualname":"::unicode::LOWERCASE_LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":942},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155814,"byte_end":155818,"line_start":44,"line_end":44,"column_start":87,"column_end":91},"name":"MARK","qualname":"::unicode::MARK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":943},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155828,"byte_end":155839,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"MATH_SYMBOL","qualname":"::unicode::MATH_SYMBOL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":944},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155841,"byte_end":155856,"line_start":45,"line_end":45,"column_start":22,"column_end":37},"name":"MODIFIER_LETTER","qualname":"::unicode::MODIFIER_LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":945},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155858,"byte_end":155873,"line_start":45,"line_end":45,"column_start":39,"column_end":54},"name":"MODIFIER_SYMBOL","qualname":"::unicode::MODIFIER_SYMBOL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":946},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155875,"byte_end":155890,"line_start":45,"line_end":45,"column_start":56,"column_end":71},"name":"NONSPACING_MARK","qualname":"::unicode::NONSPACING_MARK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":947},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155892,"byte_end":155898,"line_start":45,"line_end":45,"column_start":73,"column_end":79},"name":"NUMBER","qualname":"::unicode::NUMBER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155900,"byte_end":155916,"line_start":45,"line_end":45,"column_start":81,"column_end":97},"name":"OPEN_PUNCTUATION","qualname":"::unicode::OPEN_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":949},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155926,"byte_end":155931,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"OTHER","qualname":"::unicode::OTHER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":950},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155933,"byte_end":155945,"line_start":46,"line_end":46,"column_start":16,"column_end":28},"name":"OTHER_LETTER","qualname":"::unicode::OTHER_LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":951},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155947,"byte_end":155959,"line_start":46,"line_end":46,"column_start":30,"column_end":42},"name":"OTHER_NUMBER","qualname":"::unicode::OTHER_NUMBER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":952},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155961,"byte_end":155978,"line_start":46,"line_end":46,"column_start":44,"column_end":61},"name":"OTHER_PUNCTUATION","qualname":"::unicode::OTHER_PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":953},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155980,"byte_end":155992,"line_start":46,"line_end":46,"column_start":63,"column_end":75},"name":"OTHER_SYMBOL","qualname":"::unicode::OTHER_SYMBOL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":954},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":155994,"byte_end":156013,"line_start":46,"line_end":46,"column_start":77,"column_end":96},"name":"PARAGRAPH_SEPARATOR","qualname":"::unicode::PARAGRAPH_SEPARATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":955},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156023,"byte_end":156034,"line_start":47,"line_end":47,"column_start":9,"column_end":20},"name":"PRIVATE_USE","qualname":"::unicode::PRIVATE_USE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":956},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156036,"byte_end":156047,"line_start":47,"line_end":47,"column_start":22,"column_end":33},"name":"PUNCTUATION","qualname":"::unicode::PUNCTUATION","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":957},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156049,"byte_end":156058,"line_start":47,"line_end":47,"column_start":35,"column_end":44},"name":"SEPARATOR","qualname":"::unicode::SEPARATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":958},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156060,"byte_end":156075,"line_start":47,"line_end":47,"column_start":46,"column_end":61},"name":"SPACE_SEPARATOR","qualname":"::unicode::SPACE_SEPARATOR","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":959},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156077,"byte_end":156089,"line_start":47,"line_end":47,"column_start":63,"column_end":75},"name":"SPACING_MARK","qualname":"::unicode::SPACING_MARK","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":960},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156091,"byte_end":156100,"line_start":47,"line_end":47,"column_start":77,"column_end":86},"name":"SURROGATE","qualname":"::unicode::SURROGATE","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":961},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156102,"byte_end":156108,"line_start":47,"line_end":47,"column_start":88,"column_end":94},"name":"SYMBOL","qualname":"::unicode::SYMBOL","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":962},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156118,"byte_end":156134,"line_start":48,"line_end":48,"column_start":9,"column_end":25},"name":"TITLECASE_LETTER","qualname":"::unicode::TITLECASE_LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":963},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156136,"byte_end":156146,"line_start":48,"line_end":48,"column_start":27,"column_end":37},"name":"UNASSIGNED","qualname":"::unicode::UNASSIGNED","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":964},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156148,"byte_end":156164,"line_start":48,"line_end":48,"column_start":39,"column_end":55},"name":"UPPERCASE_LETTER","qualname":"::unicode::UPPERCASE_LETTER","value":"fn (c: char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":486},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/unicode/mod.rs","byte_start":156183,"byte_end":156190,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"by_name","qualname":"::unicode::by_name","value":"fn (name: &str) -> Option<Box<Fn(char) -> bool>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":489},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3319,"byte_end":3327,"line_start":101,"line_end":101,"column_start":11,"column_end":19},"name":"RuleType","qualname":"::RuleType","value":"RuleType: Copy + Debug + Eq + Hash + Ord","parent":null,"children":[],"decl_id":null,"docs":" A trait which parser rules must implement.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":5443,"byte_end":5448,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":17063,"byte_end":17068,"line_start":434,"line_end":434,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":17220,"byte_end":17225,"line_start":440,"line_end":440,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":29007,"byte_end":29016,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":30362,"byte_end":30371,"line_start":101,"line_end":101,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":30722,"byte_end":30731,"line_start":117,"line_end":117,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":31055,"byte_end":31064,"line_start":131,"line_end":131,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":31292,"byte_end":31301,"line_start":139,"line_end":139,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":33976,"byte_end":33980,"line_start":59,"line_end":59,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":39702,"byte_end":39707,"line_start":258,"line_end":258,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":39974,"byte_end":39978,"line_start":266,"line_end":266,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":40312,"byte_end":40316,"line_start":276,"line_end":276,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":41036,"byte_end":41040,"line_start":301,"line_end":301,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":41265,"byte_end":41269,"line_start":309,"line_end":309,"column_start":24,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":41308,"byte_end":41312,"line_start":311,"line_end":311,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":44417,"byte_end":44422,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":49583,"byte_end":49588,"line_start":221,"line_end":221,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":49820,"byte_end":49825,"line_start":231,"line_end":231,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50154,"byte_end":50159,"line_start":245,"line_end":245,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50330,"byte_end":50335,"line_start":251,"line_end":251,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50650,"byte_end":50655,"line_start":264,"line_end":264,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50918,"byte_end":50923,"line_start":273,"line_end":273,"column_start":24,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50962,"byte_end":50967,"line_start":275,"line_end":275,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":57087,"byte_end":57093,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":58122,"byte_end":58128,"line_start":94,"line_end":94,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":58441,"byte_end":58447,"line_start":110,"line_end":110,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":58725,"byte_end":58731,"line_start":124,"line_end":124,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":78352,"byte_end":78363,"line_start":103,"line_end":103,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":113825,"byte_end":113833,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125123,"byte_end":125131,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125297,"byte_end":125305,"line_start":396,"line_end":396,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125452,"byte_end":125460,"line_start":402,"line_end":402,"column_start":17,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125493,"byte_end":125501,"line_start":404,"line_end":404,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125739,"byte_end":125747,"line_start":414,"line_end":414,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125935,"byte_end":125943,"line_start":421,"line_end":421,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":132668,"byte_end":132676,"line_start":40,"line_end":40,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":133350,"byte_end":133358,"line_start":65,"line_end":65,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":134283,"byte_end":134294,"line_start":93,"line_end":93,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":139971,"byte_end":139975,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145241,"byte_end":145245,"line_start":210,"line_end":210,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145516,"byte_end":145520,"line_start":220,"line_end":220,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145692,"byte_end":145696,"line_start":226,"line_end":226,"column_start":17,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145723,"byte_end":145727,"line_start":228,"line_end":228,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":146180,"byte_end":146185,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/stack.rs","byte_start":148343,"byte_end":148348,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/stack.rs","byte_start":150586,"byte_end":150591,"line_start":103,"line_end":103,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3417,"byte_end":3418,"line_start":103,"line_end":103,"column_start":54,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2790,"byte_end":2795,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":28}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2805,"byte_end":2814,"line_start":82,"line_end":82,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2880,"byte_end":2892,"line_start":87,"line_end":87,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":391}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":2949,"byte_end":2956,"line_start":92,"line_end":92,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":484}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":5443,"byte_end":5448,"line_start":70,"line_end":70,"column_start":19,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":17063,"byte_end":17068,"line_start":434,"line_end":434,"column_start":36,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":492},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/error.rs","byte_start":17220,"byte_end":17225,"line_start":440,"line_end":440,"column_start":40,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":492},"to":{"krate":1,"index":1558}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":29007,"byte_end":29016,"line_start":49,"line_end":49,"column_start":23,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":75},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":30362,"byte_end":30371,"line_start":101,"line_end":101,"column_start":36,"column_end":45},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":30722,"byte_end":30731,"line_start":117,"line_end":117,"column_start":47,"column_end":56},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":31055,"byte_end":31064,"line_start":131,"line_end":131,"column_start":38,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/flat_pairs.rs","byte_start":31292,"byte_end":31301,"line_start":139,"line_end":139,"column_start":30,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":75},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":33976,"byte_end":33980,"line_start":59,"line_end":59,"column_start":23,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":39702,"byte_end":39707,"line_start":258,"line_end":258,"column_start":23,"column_end":28},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":39974,"byte_end":39978,"line_start":266,"line_end":266,"column_start":38,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":40312,"byte_end":40316,"line_start":276,"line_end":276,"column_start":40,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":41036,"byte_end":41040,"line_start":301,"line_end":301,"column_start":38,"column_end":42},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":41265,"byte_end":41269,"line_start":309,"line_end":309,"column_start":24,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pair.rs","byte_start":41308,"byte_end":41312,"line_start":311,"line_end":311,"column_start":28,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":580},"to":{"krate":2,"index":7084}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":44417,"byte_end":44422,"line_start":52,"line_end":52,"column_start":23,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":49583,"byte_end":49588,"line_start":221,"line_end":221,"column_start":36,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":49820,"byte_end":49825,"line_start":231,"line_end":231,"column_start":47,"column_end":52},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50154,"byte_end":50159,"line_start":245,"line_end":245,"column_start":38,"column_end":43},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50330,"byte_end":50335,"line_start":251,"line_end":251,"column_start":40,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50650,"byte_end":50655,"line_start":264,"line_end":264,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50918,"byte_end":50923,"line_start":273,"line_end":273,"column_start":24,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/pairs.rs","byte_start":50962,"byte_end":50967,"line_start":275,"line_end":275,"column_start":28,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":591},"to":{"krate":2,"index":7084}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":57087,"byte_end":57093,"line_start":63,"line_end":63,"column_start":23,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":58122,"byte_end":58128,"line_start":94,"line_end":94,"column_start":36,"column_end":42},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":58441,"byte_end":58447,"line_start":110,"line_end":110,"column_start":47,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/iterators/tokens.rs","byte_start":58725,"byte_end":58731,"line_start":124,"line_end":124,"column_start":38,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":615},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/parser_state.rs","byte_start":78352,"byte_end":78363,"line_start":103,"line_end":103,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":113825,"byte_end":113833,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125123,"byte_end":125131,"line_start":390,"line_end":390,"column_start":25,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125297,"byte_end":125305,"line_start":396,"line_end":396,"column_start":24,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125452,"byte_end":125460,"line_start":402,"line_end":402,"column_start":17,"column_end":25},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125493,"byte_end":125501,"line_start":404,"line_end":404,"column_start":25,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125739,"byte_end":125747,"line_start":414,"line_end":414,"column_start":18,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/position.rs","byte_start":125935,"byte_end":125943,"line_start":421,"line_end":421,"column_start":19,"column_end":27},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":687},"to":{"krate":2,"index":7084}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":132668,"byte_end":132676,"line_start":40,"line_end":40,"column_start":19,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":133350,"byte_end":133358,"line_start":65,"line_end":65,"column_start":29,"column_end":37},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":708},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/prec_climber.rs","byte_start":134283,"byte_end":134294,"line_start":93,"line_end":93,"column_start":19,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":139971,"byte_end":139975,"line_start":34,"line_end":34,"column_start":10,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145241,"byte_end":145245,"line_start":210,"line_end":210,"column_start":25,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145516,"byte_end":145520,"line_start":220,"line_end":220,"column_start":24,"column_end":28},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145692,"byte_end":145696,"line_start":226,"line_end":226,"column_start":17,"column_end":21},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":145723,"byte_end":145727,"line_start":228,"line_end":228,"column_start":19,"column_end":23},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":722},"to":{"krate":2,"index":7084}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/span.rs","byte_start":146180,"byte_end":146185,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":454},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/stack.rs","byte_start":148343,"byte_end":148348,"line_start":21,"line_end":21,"column_start":16,"column_end":21},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/stack.rs","byte_start":150586,"byte_end":150591,"line_start":103,"line_end":103,"column_start":40,"column_end":45},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":730},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3329,"byte_end":3333,"line_start":101,"line_end":101,"column_start":21,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1542},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3336,"byte_end":3341,"line_start":101,"line_end":101,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":7442},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3344,"byte_end":3346,"line_start":101,"line_end":101,"column_start":36,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":2044},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3349,"byte_end":3353,"line_start":101,"line_end":101,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":7084},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3356,"byte_end":3359,"line_start":101,"line_end":101,"column_start":48,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":2065},"to":{"krate":0,"index":489}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/pest-2.1.2/src/lib.rs","byte_start":3417,"byte_end":3418,"line_start":103,"line_end":103,"column_start":54,"column_end":55},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":491},"to":{"krate":0,"index":489}}]}