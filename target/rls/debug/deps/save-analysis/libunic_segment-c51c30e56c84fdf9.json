{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","unic_segment","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=c51c30e56c84fdf9","-C","extra-filename=-c51c30e56c84fdf9","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--extern","unic_ucd_segment=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libunic_ucd_segment-55e0b0a956efffbf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libunic_segment-c51c30e56c84fdf9.rmeta"},"prelude":{"crate_id":{"name":"unic_segment","disambiguator":[3233993213743043105,13707962305641969594]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":15,"id":{"name":"unic_ucd_segment","disambiguator":[11792525015691725285,6351744568215740989]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":16,"id":{"name":"unic_char_property","disambiguator":[12679837634336423972,13801099218943451881]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":17,"id":{"name":"unic_char_range","disambiguator":[7959199748288694421,11757982635690883334]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":18,"id":{"name":"unic_ucd_version","disambiguator":[1933193199106920936,5444207993132429203]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":19,"id":{"name":"unic_common","disambiguator":[709598175939983431,16656611501706083850]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":481,"byte_end":2874,"line_start":12,"line_end":89,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":64},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2620,"byte_end":2635,"line_start":80,"line_end":80,"column_start":27,"column_end":42},"alias_span":null,"name":"UNICODE_VERSION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":17},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2671,"byte_end":2686,"line_start":83,"line_end":83,"column_start":20,"column_end":35},"alias_span":null,"name":"PKG_DESCRIPTION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2688,"byte_end":2696,"line_start":83,"line_end":83,"column_start":37,"column_end":45},"alias_span":null,"name":"PKG_NAME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2698,"byte_end":2709,"line_start":83,"line_end":83,"column_start":47,"column_end":58},"alias_span":null,"name":"PKG_VERSION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":168},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2746,"byte_end":2760,"line_start":86,"line_end":86,"column_start":20,"column_end":34},"alias_span":null,"name":"GraphemeCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2762,"byte_end":2780,"line_start":86,"line_end":86,"column_start":36,"column_end":54},"alias_span":null,"name":"GraphemeIncomplete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2782,"byte_end":2797,"line_start":86,"line_end":86,"column_start":56,"column_end":71},"alias_span":null,"name":"GraphemeIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":143},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2799,"byte_end":2808,"line_start":86,"line_end":86,"column_start":73,"column_end":82},"alias_span":null,"name":"Graphemes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2837,"byte_end":2853,"line_start":89,"line_end":89,"column_start":16,"column_end":32},"alias_span":null,"name":"WordBoundIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":212},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2855,"byte_end":2865,"line_start":89,"line_end":89,"column_start":34,"column_end":44},"alias_span":null,"name":"WordBounds","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2867,"byte_end":2872,"line_start":89,"line_end":89,"column_start":46,"column_end":51},"alias_span":null,"name":"Words","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":481,"byte_end":2874,"line_start":12,"line_end":89,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":74},{"krate":0,"index":79},{"krate":0,"index":132}],"decl_id":null,"docs":" # UNIC â€” Unicode Text Segmentation Algorithms","sig":null,"attributes":[{"value":"forbid(unsafe_code, missing_docs)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","byte_start":2479,"byte_end":2516,"line_start":73,"line_end":73,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":15},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/pkg_info.rs","byte_start":3368,"byte_end":3379,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"PKG_VERSION","qualname":"::pkg_info::PKG_VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" UNIC component version.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/pkg_info.rs","byte_start":3451,"byte_end":3459,"line_start":17,"line_end":17,"column_start":11,"column_end":19},"name":"PKG_NAME","qualname":"::pkg_info::PKG_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" UNIC component name.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":17},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/pkg_info.rs","byte_start":3535,"byte_end":3550,"line_start":20,"line_end":20,"column_start":11,"column_end":26},"name":"PKG_DESCRIPTION","qualname":"::pkg_info::PKG_DESCRIPTION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" UNIC component description.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":136},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4373,"byte_end":4388,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"GraphemeIndices","qualname":"::grapheme::GraphemeIndices","value":"GraphemeIndices {  }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"decl_id":null,"docs":" External iterator for grapheme clusters and byte offsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4566,"byte_end":4569,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphemeIndices>::new","value":"fn <'b> (s: &'b str) -> GraphemeIndices<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *extended grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4545,"byte_end":4554,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4823,"byte_end":4833,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"new_legacy","qualname":"<GraphemeIndices>::new_legacy","value":"fn <'b> (s: &'b str) -> GraphemeIndices<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *legacy grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4802,"byte_end":4811,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":5450,"byte_end":5456,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"as_str","qualname":"<GraphemeIndices>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":5013,"byte_end":5022,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":143},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6279,"byte_end":6288,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"Graphemes","qualname":"::grapheme::Graphemes","value":"Graphemes {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147}],"decl_id":null,"docs":" External iterator for a string's\n [grapheme clusters](https://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6492,"byte_end":6495,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Graphemes>::new","value":"fn <'b> (s: &'b str) -> Graphemes<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *extended grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6471,"byte_end":6480,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6808,"byte_end":6818,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"new_legacy","qualname":"<Graphemes>::new_legacy","value":"fn <'b> (s: &'b str) -> Graphemes<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *legacy grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6787,"byte_end":6796,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":7489,"byte_end":7495,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Graphemes>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":7064,"byte_end":7073,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":9273,"byte_end":9287,"line_start":196,"line_end":196,"column_start":12,"column_end":26},"name":"GraphemeCursor","qualname":"::grapheme::GraphemeCursor","value":"GraphemeCursor {  }","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"decl_id":null,"docs":" Cursor-based segmenter for grapheme clusters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":10861,"byte_end":10871,"line_start":236,"line_end":236,"column_start":5,"column_end":15},"name":"PreContext","qualname":"::grapheme::GraphemeIncomplete::PreContext","value":"GraphemeIncomplete::PreContext(usize)","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" More pre-context is needed. The caller should call `provide_context`\n with a chunk ending at the offset given, then retry the query. This\n will only be returned if the `chunk_start` parameter is nonzero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":11113,"byte_end":11122,"line_start":241,"line_end":241,"column_start":5,"column_end":14},"name":"PrevChunk","qualname":"::grapheme::GraphemeIncomplete::PrevChunk","value":"GraphemeIncomplete::PrevChunk","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" When requesting `prev_boundary`, the cursor is moving past the beginning\n of the current chunk, so the chunk before that is requested. This will\n only be returned if the `chunk_start` parameter is nonzero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":186},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":11396,"byte_end":11405,"line_start":247,"line_end":247,"column_start":5,"column_end":14},"name":"NextChunk","qualname":"::grapheme::GraphemeIncomplete::NextChunk","value":"GraphemeIncomplete::NextChunk","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" When requesting `next_boundary`, the cursor is moving past the end of the\n current chunk, so the chunk after that is requested. This will only be\n returned if the chunk ends before the `len` parameter provided on\n creation of the cursor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":188},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":11541,"byte_end":11554,"line_start":250,"line_end":250,"column_start":5,"column_end":18},"name":"InvalidOffset","qualname":"::grapheme::GraphemeIncomplete::InvalidOffset","value":"GraphemeIncomplete::InvalidOffset","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":" An error returned when the chunk given does not contain the cursor position.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":180},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":10610,"byte_end":10628,"line_start":232,"line_end":232,"column_start":10,"column_end":28},"name":"GraphemeIncomplete","qualname":"::grapheme::GraphemeIncomplete","value":"GraphemeIncomplete::{PreContext, PrevChunk, NextChunk, InvalidOffset}","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188}],"decl_id":null,"docs":" An error return indicating that not enough content was available in the\n provided chunk to satisfy the query, and that more content must be provided.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":14638,"byte_end":14641,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphemeCursor>::new","value":"fn (offset: usize, len: usize) -> GraphemeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new cursor. The string and initial offset are given at creation\n time, but the contents of the string are not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":15615,"byte_end":15625,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"name":"new_legacy","qualname":"<GraphemeCursor>::new_legacy","value":"fn (offset: usize, len: usize) -> GraphemeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new cursor. The string and initial offset are given at creation\n time, but the contents of the string are not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":16561,"byte_end":16571,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<GraphemeCursor>::set_cursor","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor to a new location in the same string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":17666,"byte_end":17676,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"cur_cursor","qualname":"<GraphemeCursor>::cur_cursor","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The current offset of the cursor. Equal to the last value provided to\n `new()` or `set_cursor()`, or returned from `next_boundary()` or\n `prev_boundary()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":18902,"byte_end":18917,"line_start":450,"line_end":450,"column_start":12,"column_end":27},"name":"provide_context","qualname":"<GraphemeCursor>::provide_context","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provide additional pre-context when it is needed to decide a boundary.\n The end of the chunk must coincide with the value given in the\n `GraphemeIncomplete::PreContext` request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":22792,"byte_end":22803,"line_start":554,"line_end":554,"column_start":12,"column_end":23},"name":"is_boundary","qualname":"<GraphemeCursor>::is_boundary","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> Result<bool, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the current cursor location is a grapheme cluster boundary.\n Only a part of the string need be supplied. If `chunk_start` is nonzero or\n the length of `chunk` is not equal to `len` on creation, then this method\n may return `GraphemeIncomplete::PreContext`. The caller should then\n call `provide_context` with the requested chunk, then retry calling this\n method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":26934,"byte_end":26947,"line_start":647,"line_end":647,"column_start":12,"column_end":25},"name":"next_boundary","qualname":"<GraphemeCursor>::next_boundary","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> Result<Option<usize>, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Find the next boundary after the current cursor position. Only a part of\n the string need be supplied. If the chunk is incomplete, then this\n method might return `GraphemeIncomplete::PreContext` or\n `GraphemeIncomplete::NextChunk`. In the former case, the caller should\n call `provide_context` with the requested chunk, then retry. In the\n latter case, the caller should provide the chunk following the one\n given, then retry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":30316,"byte_end":30329,"line_start":726,"line_end":726,"column_start":12,"column_end":25},"name":"prev_boundary","qualname":"<GraphemeCursor>::prev_boundary","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> Result<Option<usize>, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Find the previous boundary after the current cursor position. Only a part\n of the string need be supplied. If the chunk is incomplete, then this\n method might return `GraphemeIncomplete::PreContext` or\n `GraphemeIncomplete::PrevChunk`. In the former case, the caller should\n call `provide_context` with the requested chunk, then retry. In the\n latter case, the caller should provide the chunk preceding the one\n given, then retry.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34521,"byte_end":34526,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Words","qualname":"::word::Words","value":"Words {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" An iterator over the substrings of a string which, after splitting the string on [word\n boundaries](https://www.unicode.org/reports/tr29/#Word_Boundaries), contain any characters with\n the [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic) property, or with\n [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34978,"byte_end":34981,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Words>::new","value":"fn <'b> (s: &'b str, filter: fn(&&str) -> bool) -> Words<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *words*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34957,"byte_end":34966,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":212},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35272,"byte_end":35282,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"WordBounds","qualname":"::word::WordBounds","value":"WordBounds {  }","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216}],"decl_id":null,"docs":" External iterator for a string's\n [word boundaries](https://www.unicode.org/reports/tr29/#Word_Boundaries).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35444,"byte_end":35460,"line_start":68,"line_end":68,"column_start":12,"column_end":28},"name":"WordBoundIndices","qualname":"::word::WordBoundIndices","value":"WordBoundIndices {  }","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":223}],"decl_id":null,"docs":" External iterator for word boundaries and byte offsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35646,"byte_end":35649,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<WordBoundIndices>::new","value":"fn <'b> (s: &'b str) -> WordBoundIndices<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *word boundries and their indices*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35625,"byte_end":35634,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":36284,"byte_end":36290,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"as_str","qualname":"<WordBoundIndices>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35825,"byte_end":35834,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":57301,"byte_end":57304,"line_start":628,"line_end":628,"column_start":12,"column_end":15},"name":"new","qualname":"<WordBounds>::new","value":"fn (s: &str) -> WordBounds","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *word boundries*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":57280,"byte_end":57289,"line_start":627,"line_end":627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":57889,"byte_end":57895,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_str","qualname":"<WordBounds>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":57442,"byte_end":57451,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4457,"byte_end":4472,"line_start":29,"line_end":29,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":5535,"byte_end":5550,"line_start":66,"line_end":66,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":5909,"byte_end":5924,"line_start":82,"line_end":82,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6389,"byte_end":6398,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":7625,"byte_end":7634,"line_start":141,"line_end":141,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":8210,"byte_end":8219,"line_start":161,"line_end":161,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":56}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":14149,"byte_end":14163,"line_start":322,"line_end":322,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34612,"byte_end":34617,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34776,"byte_end":34781,"line_start":40,"line_end":40,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34900,"byte_end":34905,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35530,"byte_end":35546,"line_start":73,"line_end":73,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":36369,"byte_end":36385,"line_start":102,"line_end":102,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":36744,"byte_end":36760,"line_start":118,"line_end":118,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":37595,"byte_end":37605,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":47888,"byte_end":47898,"line_start":400,"line_end":400,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":57209,"byte_end":57219,"line_start":625,"line_end":625,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":4457,"byte_end":4472,"line_start":29,"line_end":29,"column_start":10,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":5535,"byte_end":5550,"line_start":66,"line_end":66,"column_start":23,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":5909,"byte_end":5924,"line_start":82,"line_end":82,"column_start":34,"column_end":49},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":136},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":6389,"byte_end":6398,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":7625,"byte_end":7634,"line_start":141,"line_end":141,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":8210,"byte_end":8219,"line_start":161,"line_end":161,"column_start":34,"column_end":43},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":143},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/grapheme.rs","byte_start":14149,"byte_end":14163,"line_start":322,"line_end":322,"column_start":6,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34612,"byte_end":34617,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34776,"byte_end":34781,"line_start":40,"line_end":40,"column_start":34,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":34900,"byte_end":34905,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":35530,"byte_end":35546,"line_start":73,"line_end":73,"column_start":10,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":36369,"byte_end":36385,"line_start":102,"line_end":102,"column_start":23,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":36744,"byte_end":36760,"line_start":118,"line_end":118,"column_start":34,"column_end":50},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":37595,"byte_end":37605,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":47888,"byte_end":47898,"line_start":400,"line_end":400,"column_start":34,"column_end":44},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":212},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/word.rs","byte_start":57209,"byte_end":57219,"line_start":625,"line_end":625,"column_start":10,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":212},"to":{"krate":4294967295,"index":4294967295}}]}