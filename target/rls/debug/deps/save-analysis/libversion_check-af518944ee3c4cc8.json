{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","version_check","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata,link","-C","debuginfo=2","-C","metadata=af518944ee3c4cc8","-C","extra-filename=-af518944ee3c4cc8","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libversion_check-af518944ee3c4cc8.rmeta"},"prelude":{"crate_id":{"name":"version_check","disambiguator":[653270338846716452,978325113239043197]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":0,"byte_end":10896,"line_start":1,"line_end":288,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":2666,"byte_end":2667,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"Version","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":2666,"byte_end":2667,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"Channel","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":2666,"byte_end":2667,"line_start":82,"line_end":82,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"Date","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":0,"byte_end":10896,"line_start":1,"line_end":288,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":29},{"krate":0,"index":44},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83}],"decl_id":null,"docs":" This tiny crate checks that the running or installed `rustc` meets some\n version requirements. The version is queried by calling the Rust compiler\n with `--version`. The path to the compiler is determined first via the\n `RUSTC` environment variable. If it is not set, then `rustc` is used. If\n that fails, no determination is made, and calls return `None`.","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":2532,"byte_end":2553,"line_start":73,"line_end":73,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":85},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":11053,"byte_end":11060,"line_start":5,"line_end":5,"column_start":12,"column_end":19},"name":"Version","qualname":"::version::Version","value":"","parent":null,"children":[],"decl_id":null,"docs":" Version number: `major.minor.patch`, ignoring release channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":11719,"byte_end":11723,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"read","qualname":"<Version>::read","value":"fn () -> Option<Version>","parent":null,"children":[],"decl_id":null,"docs":" Reads the version of the running compiler. If it cannot be determined\n (see the [top-level documentation](crate)), returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":12756,"byte_end":12761,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"parse","qualname":"<Version>::parse","value":"fn (version: &str) -> Option<Version>","parent":null,"children":[],"decl_id":null,"docs":" Parse a Rust release version (of the form\n `major[.minor[.patch[-channel]]]`), ignoring the release channel, if\n any. Returns `None` if `version` is not a valid Rust version string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":13887,"byte_end":13895,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"at_least","qualname":"<Version>::at_least","value":"fn (&self, version: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is greater than or equal to `version`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":14650,"byte_end":14657,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"at_most","qualname":"<Version>::at_most","value":"fn (&self, version: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is less than or equal to `version`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":15367,"byte_end":15374,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"exactly","qualname":"<Version>::exactly","value":"fn (&self, version: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` is exactly equal to `version`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":18597,"byte_end":18604,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"Channel","qualname":"::channel::Channel","value":"","parent":null,"children":[],"decl_id":null,"docs":" Release channel: \"dev\", \"nightly\", \"beta\", or \"stable\".\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":19066,"byte_end":19070,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"read","qualname":"<Channel>::read","value":"fn () -> Option<Channel>","parent":null,"children":[],"decl_id":null,"docs":" Reads the release channel of the running compiler. If it cannot be\n determined (see the [top-level documentation](crate)), returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":19955,"byte_end":19960,"line_start":56,"line_end":56,"column_start":12,"column_end":17},"name":"parse","qualname":"<Channel>::parse","value":"fn (version: &str) -> Option<Channel>","parent":null,"children":[],"decl_id":null,"docs":" Parse a Rust release channel from a Rust release version string (of the\n form `major[.minor[.patch[-channel]]]`). Returns `None` if `version` is\n not a valid Rust version string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":21353,"byte_end":21370,"line_start":100,"line_end":100,"column_start":12,"column_end":29},"name":"supports_features","qualname":"<Channel>::supports_features","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this channel supports feature flags. In other words,\n returns `true` if the channel is either `dev` or `nightly`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":21895,"byte_end":21901,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"is_dev","qualname":"<Channel>::is_dev","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this channel is `dev` and `false` otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":22410,"byte_end":22420,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"is_nightly","qualname":"<Channel>::is_nightly","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this channel is `nightly` and `false` otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":22915,"byte_end":22922,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"is_beta","qualname":"<Channel>::is_beta","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this channel is `beta` and `false` otherwise.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":23420,"byte_end":23429,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"is_stable","qualname":"<Channel>::is_stable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this channel is `stable` and `false` otherwise.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":137},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":23877,"byte_end":23881,"line_start":6,"line_end":6,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"","parent":null,"children":[],"decl_id":null,"docs":" Release date including year, month, and day.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":24332,"byte_end":24336,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"read","qualname":"<Date>::read","value":"fn () -> Option<Date>","parent":null,"children":[],"decl_id":null,"docs":" Reads the release date of the running compiler. If it cannot be\n determined (see the [top-level documentation](crate)), returns `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":25266,"byte_end":25271,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn (date: &str) -> Option<Date>","parent":null,"children":[],"decl_id":null,"docs":" Parse a release date of the form `%Y-%m-%d`. Returns `None` if `date` is\n not in `%Y-%m-%d` format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":26195,"byte_end":26203,"line_start":85,"line_end":85,"column_start":12,"column_end":20},"name":"at_least","qualname":"<Date>::at_least","value":"fn (&self, date: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` occurs on or after `date`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":26922,"byte_end":26929,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"at_most","qualname":"<Date>::at_most","value":"fn (&self, date: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` occurs on or before `date`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":27650,"byte_end":27657,"line_start":135,"line_end":135,"column_start":12,"column_end":19},"name":"exactly","qualname":"<Date>::exactly","value":"fn (&self, date: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` occurs exactly on `date`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":76},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":4039,"byte_end":4045,"line_start":113,"line_end":113,"column_start":8,"column_end":14},"name":"triple","qualname":"::triple","value":"fn () -> Option<(Version, Channel, Date)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the triple of [`Version`], [`Channel`], and [`Date`] of the installed\n or running `rustc`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":77},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":5050,"byte_end":5061,"line_start":141,"line_end":141,"column_start":8,"column_end":19},"name":"is_min_date","qualname":"::is_min_date","value":"fn (min_date: &str) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the running or installed `rustc` was released **on or after**\n some date.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":78},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":5673,"byte_end":5684,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"is_max_date","qualname":"::is_max_date","value":"fn (max_date: &str) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the running or installed `rustc` was released **on or before**\n some date.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":79},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":6272,"byte_end":6285,"line_start":173,"line_end":173,"column_start":8,"column_end":21},"name":"is_exact_date","qualname":"::is_exact_date","value":"fn (date: &str) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the running or installed `rustc` was released **exactly** on\n some date.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":6893,"byte_end":6907,"line_start":189,"line_end":189,"column_start":8,"column_end":22},"name":"is_min_version","qualname":"::is_min_version","value":"fn (min_version: &str) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the running or installed `rustc` is **at least** some minimum\n version.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":81},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":7537,"byte_end":7551,"line_start":205,"line_end":205,"column_start":8,"column_end":22},"name":"is_max_version","qualname":"::is_max_version","value":"fn (max_version: &str) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the running or installed `rustc` is **at most** some maximum\n version.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":8157,"byte_end":8173,"line_start":220,"line_end":220,"column_start":8,"column_end":24},"name":"is_exact_version","qualname":"::is_exact_version","value":"fn (version: &str) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks that the running or installed `rustc` is **exactly** some version.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/lib.rs","byte_start":8675,"byte_end":8695,"line_start":233,"line_end":233,"column_start":8,"column_end":28},"name":"is_feature_flaggable","qualname":"::is_feature_flaggable","value":"fn () -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the running or installed `rustc` supports feature flags.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":11073,"byte_end":11080,"line_start":7,"line_end":7,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":15545,"byte_end":15552,"line_start":154,"line_end":154,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":18618,"byte_end":18625,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":23568,"byte_end":23575,"line_start":188,"line_end":188,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":23894,"byte_end":23898,"line_start":8,"line_end":8,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":27813,"byte_end":27817,"line_start":142,"line_end":142,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":11073,"byte_end":11080,"line_start":7,"line_end":7,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/version.rs","byte_start":15545,"byte_end":15552,"line_start":154,"line_end":154,"column_start":23,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":85},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":18618,"byte_end":18625,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/channel.rs","byte_start":23568,"byte_end":23575,"line_start":188,"line_end":188,"column_start":23,"column_end":30},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":124},"to":{"krate":2,"index":7447}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":23894,"byte_end":23898,"line_start":8,"line_end":8,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/version_check-0.9.1/src/date.rs","byte_start":27813,"byte_end":27817,"line_start":142,"line_end":142,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":137},"to":{"krate":2,"index":7447}}]}