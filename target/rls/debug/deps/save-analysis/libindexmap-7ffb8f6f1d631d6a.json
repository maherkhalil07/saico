{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0","program":"/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","indexmap","/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7ffb8f6f1d631d6a","-C","extra-filename=-7ffb8f6f1d631d6a","--out-dir","/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","-L","dependency=/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/maher/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":"/media/maher/extra/rust/rust_book/projects/saico/target/rls/debug/deps/libindexmap-7ffb8f6f1d631d6a.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[2800041353741556846,13787611938293833366]},"crate_root":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src","external_crates":[{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9902403135723647906,13386767543071232481]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[11084759748579122753,331259447350553395]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[10334573234263526370,15124368822339432299]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14334910640567835583,16383906083420296689]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[2325222112993198573,7218132784046677573]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3780916609979109909,16903510087619566546]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[2700180830346525411,13207631472992251605]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15494082000562377316,4211084154039150358]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[18440110158562979543,4031693720150709737]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14823596869361043936,14129213990579107964]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[12380515256761884203,9571001690916885438]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[14805985327799230378,1171782038774919243]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[39451995444264635,1837861505147808155]}},{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[17629778803583171172,9035238153663691878]}}],"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1,"byte_end":2482,"line_start":2,"line_end":93,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":48228,"byte_end":48239,"line_start":4,"line_end":4,"column_start":23,"column_end":34},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":435}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1033,"byte_end":1043,"line_start":40,"line_end":40,"column_start":21,"column_end":31},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1074},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1058,"byte_end":1066,"line_start":41,"line_end":41,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1033},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1081,"byte_end":1089,"line_start":42,"line_end":42,"column_start":14,"column_end":22},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1,"byte_end":2482,"line_start":2,"line_end":93,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":17},{"krate":0,"index":28},{"krate":0,"index":37},{"krate":0,"index":63},{"krate":0,"index":435},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1145},{"krate":0,"index":1150},{"krate":0,"index":1148},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1151},{"krate":0,"index":1165},{"krate":0,"index":1161},{"krate":0,"index":1157},{"krate":0,"index":1015},{"krate":0,"index":1026}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1,"byte_end":22,"line_start":2,"line_end":2,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/equivalent.rs","byte_start":6524,"byte_end":6534,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":32}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/equivalent.rs","byte_start":6622,"byte_end":6632,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"fn (&self, key: &K) -> bool","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":6947,"byte_end":6960,"line_start":7,"line_end":7,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":7509,"byte_end":7520,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":45},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":7532,"byte_end":7535,"line_start":22,"line_end":22,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":7546,"byte_end":7551,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":7627,"byte_end":7640,"line_start":26,"line_end":26,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &mut Self::Key, &mut Self::Value)>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":8057,"byte_end":8064,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"fn <F> (&mut self, keep: F) -> ()","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":8352,"byte_end":8368,"line_start":43,"line_end":43,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"fn (&self) -> PrivateMarker","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":85},{"krate":0,"index":1033},{"krate":0,"index":1037},{"krate":0,"index":87},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":113},{"krate":0,"index":169},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":195},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":226},{"krate":0,"index":233},{"krate":0,"index":239},{"krate":0,"index":245},{"krate":0,"index":251},{"krate":0,"index":258},{"krate":0,"index":262},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":282},{"krate":0,"index":288},{"krate":0,"index":295},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":310},{"krate":0,"index":316},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":333},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":355},{"krate":0,"index":361},{"krate":0,"index":367},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":403},{"krate":0,"index":411},{"krate":0,"index":419},{"krate":0,"index":427}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":11095,"byte_end":11103,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":1036}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12148,"byte_end":12151,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12368,"byte_end":12381,"line_start":112,"line_end":112,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12647,"byte_end":12671,"line_start":122,"line_end":122,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12931,"byte_end":12934,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13091,"byte_end":13099,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13208,"byte_end":13219,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13415,"byte_end":13421,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13549,"byte_end":13557,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13816,"byte_end":13821,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13919,"byte_end":13926,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" FIXME Not implemented fully yet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":14360,"byte_end":14366,"line_start":186,"line_end":186,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"fn (&mut self, value: T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":14904,"byte_end":14915,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"fn (&mut self, value: T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":15314,"byte_end":15318,"line_start":213,"line_end":213,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":15582,"byte_end":15592,"line_start":222,"line_end":222,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Difference<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":16043,"byte_end":16063,"line_start":236,"line_end":236,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> SymmetricDifference<'a, T, S, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":16483,"byte_end":16495,"line_start":248,"line_end":248,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Intersection<'a, T, S2>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":16939,"byte_end":16944,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"fn <'a, S2> (&'a self, other: &'a IndexSet<T, S2>) -> Union<'a, T, S>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":17273,"byte_end":17281,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"fn <Q> (&self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":17570,"byte_end":17573,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"fn <Q> (&self, value: &Q) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":17770,"byte_end":17778,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"fn <Q> (&self, value: &Q) -> Option<(usize, &T)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":18145,"byte_end":18152,"line_start":299,"line_end":299,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"fn (&mut self, value: T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one. Returns the replaced value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":18481,"byte_end":18487,"line_start":312,"line_end":312,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_remove","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":19028,"byte_end":19039,"line_start":327,"line_end":327,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"fn <Q> (&mut self, value: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":19276,"byte_end":19280,"line_start":336,"line_end":336,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" FIXME Same as .swap_take","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":19845,"byte_end":19854,"line_start":352,"line_end":352,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"fn <Q> (&mut self, value: &Q) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":20369,"byte_end":20385,"line_start":365,"line_end":365,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"fn <Q> (&mut self, value: &Q) -> Option<(usize, T)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":20653,"byte_end":20656,"line_start":374,"line_end":374,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"fn (&mut self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":21001,"byte_end":21007,"line_start":385,"line_end":385,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":21248,"byte_end":21252,"line_start":394,"line_end":394,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":21509,"byte_end":21516,"line_start":403,"line_end":403,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"fn <F> (&mut self, mut compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `compare`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":21815,"byte_end":21824,"line_start":413,"line_end":413,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"fn <F> (self, mut cmp: F) -> IntoIter<T>","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by value iterator of\n the values with the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":22152,"byte_end":22157,"line_start":423,"line_end":423,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet`, returning all values as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":22453,"byte_end":22462,"line_start":436,"line_end":436,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"fn (&self, index: usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":22726,"byte_end":22743,"line_start":445,"line_end":445,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":176},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23172,"byte_end":23180,"line_start":458,"line_end":458,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":178}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":191},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24070,"byte_end":24074,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":194}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25067,"byte_end":25072,"line_start":536,"line_end":536,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":218}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":27350,"byte_end":27361,"line_start":637,"line_end":637,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":27731,"byte_end":27740,"line_start":648,"line_end":648,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":28003,"byte_end":28014,"line_start":655,"line_end":655,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"fn <S2> (&self, other: &IndexSet<T, S2>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":28436,"byte_end":28446,"line_start":670,"line_end":670,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":310},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29999,"byte_end":30011,"line_start":732,"line_end":732,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":338},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":31605,"byte_end":31624,"line_start":794,"line_end":794,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":343}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33173,"byte_end":33178,"line_start":854,"line_end":854,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":377}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":435},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":459},{"krate":0,"index":1063},{"krate":0,"index":1068},{"krate":0,"index":462},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":1071},{"krate":0,"index":1073},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":502},{"krate":0,"index":1074},{"krate":0,"index":1080},{"krate":0,"index":1085},{"krate":0,"index":1091},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":529},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":554},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":578},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":603},{"krate":0,"index":616},{"krate":0,"index":621},{"krate":0,"index":629},{"krate":0,"index":639},{"krate":0,"index":644},{"krate":0,"index":703},{"krate":0,"index":706},{"krate":0,"index":714},{"krate":0,"index":757},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":767},{"krate":0,"index":772},{"krate":0,"index":777},{"krate":0,"index":782},{"krate":0,"index":787},{"krate":0,"index":792},{"krate":0,"index":797},{"krate":0,"index":802},{"krate":0,"index":807},{"krate":0,"index":812},{"krate":0,"index":817},{"krate":0,"index":822},{"krate":0,"index":827},{"krate":0,"index":832},{"krate":0,"index":837},{"krate":0,"index":842},{"krate":0,"index":847},{"krate":0,"index":852},{"krate":0,"index":857},{"krate":0,"index":862},{"krate":0,"index":867},{"krate":0,"index":872},{"krate":0,"index":877},{"krate":0,"index":882},{"krate":0,"index":887},{"krate":0,"index":892},{"krate":0,"index":896},{"krate":0,"index":900},{"krate":0,"index":905},{"krate":0,"index":909},{"krate":0,"index":913},{"krate":0,"index":918},{"krate":0,"index":923},{"krate":0,"index":927},{"krate":0,"index":935},{"krate":0,"index":943},{"krate":0,"index":950},{"krate":0,"index":953},{"krate":0,"index":961},{"krate":0,"index":968},{"krate":0,"index":974},{"krate":0,"index":980},{"krate":0,"index":988},{"krate":0,"index":993},{"krate":0,"index":1002}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1074},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":55643,"byte_end":55651,"line_start":267,"line_end":267,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":58861,"byte_end":58864,"line_start":384,"line_end":384,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":59077,"byte_end":59090,"line_start":392,"line_end":392,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"fn (n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":59374,"byte_end":59398,"line_start":403,"line_end":403,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"fn (n: usize, hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":60324,"byte_end":60327,"line_start":432,"line_end":432,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":60473,"byte_end":60481,"line_start":437,"line_end":437,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":60574,"byte_end":60585,"line_start":440,"line_end":440,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"fn (hash_builder: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":60775,"byte_end":60781,"line_start":447,"line_end":447,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"fn (&self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":60910,"byte_end":60918,"line_start":454,"line_end":454,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":572},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63482,"byte_end":63490,"line_start":545,"line_end":545,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry<'a, K, V>)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":575},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63573,"byte_end":63579,"line_start":547,"line_end":547,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry<'a, K, V>)","parent":{"krate":0,"index":568},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":568},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63409,"byte_end":63414,"line_start":543,"line_end":543,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::Entry","value":"Entry::{Occupied, Vacant}","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":575}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63706,"byte_end":63715,"line_start":552,"line_end":552,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn (self, default: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63968,"byte_end":63982,"line_start":560,"line_end":560,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn <F> (self, call: F) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time (amortized average).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":64215,"byte_end":64218,"line_start":569,"line_end":569,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":64470,"byte_end":64475,"line_start":577,"line_end":577,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":64702,"byte_end":64712,"line_start":585,"line_end":585,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn <F> (self, f: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":65220,"byte_end":65230,"line_start":601,"line_end":601,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":595},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66062,"byte_end":66075,"line_start":632,"line_end":632,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66236,"byte_end":66239,"line_start":640,"line_end":640,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66278,"byte_end":66281,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn (&self) -> &V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66358,"byte_end":66365,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn (&mut self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66705,"byte_end":66710,"line_start":655,"line_end":655,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66765,"byte_end":66773,"line_start":658,"line_end":658,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn (self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66944,"byte_end":66950,"line_start":663,"line_end":663,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn (&mut self, value: V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67036,"byte_end":67042,"line_start":667,"line_end":667,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn (self) -> V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67183,"byte_end":67195,"line_start":672,"line_end":672,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn (self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67707,"byte_end":67718,"line_start":690,"line_end":690,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67880,"byte_end":67883,"line_start":698,"line_end":698,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> &K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67922,"byte_end":67930,"line_start":699,"line_end":699,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn (self) -> K","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":68034,"byte_end":68039,"line_start":701,"line_end":701,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":68086,"byte_end":68092,"line_start":702,"line_end":702,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, value: V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":69387,"byte_end":69392,"line_start":744,"line_end":744,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":69564,"byte_end":69571,"line_start":751,"line_end":751,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":71139,"byte_end":71145,"line_start":793,"line_end":793,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"fn (&mut self, key: K, value: V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":72697,"byte_end":72708,"line_start":829,"line_end":829,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"fn (&mut self, key: K, value: V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":73258,"byte_end":73263,"line_start":846,"line_end":846,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"fn (&mut self, key: K) -> Entry<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":73478,"byte_end":73482,"line_start":853,"line_end":853,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"fn (&self) -> Iter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":73671,"byte_end":73679,"line_start":860,"line_end":860,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"fn (&mut self) -> IterMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":73871,"byte_end":73875,"line_start":867,"line_end":867,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"fn (&self) -> Keys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":74055,"byte_end":74061,"line_start":874,"line_end":874,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"fn (&self) -> Values<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":74279,"byte_end":74289,"line_start":882,"line_end":882,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"fn (&mut self) -> ValuesMut<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the the values of the map,\n in their order\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":74537,"byte_end":74549,"line_start":891,"line_end":891,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"fn <Q> (&self, key: &Q) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":74831,"byte_end":74834,"line_start":901,"line_end":901,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"fn <Q> (&self, key: &Q) -> Option<&V>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":75018,"byte_end":75026,"line_start":908,"line_end":908,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"fn <Q> (&self, key: &Q) -> Option<(usize, &K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":75342,"byte_end":75349,"line_start":919,"line_end":919,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<&mut V>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":75504,"byte_end":75516,"line_start":925,"line_end":925,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, &K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":76544,"byte_end":76550,"line_start":958,"line_end":958,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" NOTE: Same as .swap_remove","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":77091,"byte_end":77102,"line_start":974,"line_end":974,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"fn <Q> (&mut self, key: &Q) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":77620,"byte_end":77636,"line_start":988,"line_end":988,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"fn <Q> (&mut self, key: &Q) -> Option<(usize, K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":78057,"byte_end":78060,"line_start":1002,"line_end":1002,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"fn (&mut self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":78408,"byte_end":78414,"line_start":1013,"line_end":1013,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"fn <F> (&mut self, mut keep: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":79040,"byte_end":79049,"line_start":1035,"line_end":1035,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":79554,"byte_end":79561,"line_start":1049,"line_end":1049,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"fn <F> (&mut self, compare: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `compare`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":79858,"byte_end":79867,"line_start":1059,"line_end":1059,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"fn <F> (mut self, mut cmp: F) -> IntoIter<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":80227,"byte_end":80232,"line_start":1068,"line_end":1068,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"fn (&mut self, range: RangeFull) -> Drain<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap`, returning all key-value pairs as a drain iterator.\n Keeps the allocated memory for reuse.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":80692,"byte_end":80701,"line_start":1089,"line_end":1089,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"fn (&self, index: usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":80959,"byte_end":80972,"line_start":1098,"line_end":1098,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"fn (&mut self, index: usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":81261,"byte_end":81278,"line_start":1107,"line_end":1107,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"fn (&mut self, index: usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":762},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":97644,"byte_end":97648,"line_start":1540,"line_end":1540,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":766}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":792},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98772,"byte_end":98778,"line_start":1584,"line_end":1584,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":796}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":822},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99933,"byte_end":99942,"line_start":1628,"line_end":1628,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":826}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":842},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100687,"byte_end":100691,"line_start":1657,"line_end":1657,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":846}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":872},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101838,"byte_end":101845,"line_start":1701,"line_end":1701,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":876}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102650,"byte_end":102658,"line_start":1730,"line_end":1730,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":895}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":913},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103629,"byte_end":103634,"line_start":1766,"line_end":1766,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":917}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":2242,"byte_end":2247,"line_start":87,"line_end":87,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/equivalent.rs","byte_start":6706,"byte_end":6707,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":8536,"byte_end":8544,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":11181,"byte_end":11189,"line_start":66,"line_end":66,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":11653,"byte_end":11661,"line_start":88,"line_end":88,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12076,"byte_end":12084,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12475,"byte_end":12483,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13624,"byte_end":13632,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":22293,"byte_end":22301,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23246,"byte_end":23254,"line_start":462,"line_end":462,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23351,"byte_end":23359,"line_start":468,"line_end":468,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23503,"byte_end":23511,"line_start":474,"line_end":474,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23614,"byte_end":23622,"line_start":480,"line_end":480,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24154,"byte_end":24158,"line_start":499,"line_end":499,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24271,"byte_end":24275,"line_start":505,"line_end":505,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24431,"byte_end":24435,"line_start":511,"line_end":511,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24529,"byte_end":24533,"line_start":517,"line_end":517,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24662,"byte_end":24666,"line_start":523,"line_end":523,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25151,"byte_end":25156,"line_start":540,"line_end":540,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":222},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25261,"byte_end":25266,"line_start":546,"line_end":546,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25588,"byte_end":25596,"line_start":562,"line_end":562,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25865,"byte_end":25873,"line_start":576,"line_end":576,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26151,"byte_end":26159,"line_start":586,"line_end":586,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26414,"byte_end":26422,"line_start":596,"line_end":596,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26670,"byte_end":26678,"line_start":607,"line_end":607,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26887,"byte_end":26895,"line_start":616,"line_end":616,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":27120,"byte_end":27128,"line_start":626,"line_end":626,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":27200,"byte_end":27208,"line_start":632,"line_end":632,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":28552,"byte_end":28562,"line_start":675,"line_end":675,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29005,"byte_end":29015,"line_start":695,"line_end":695,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29334,"byte_end":29344,"line_start":709,"line_end":709,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29482,"byte_end":29492,"line_start":715,"line_end":715,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":30117,"byte_end":30129,"line_start":737,"line_end":737,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":30571,"byte_end":30583,"line_start":757,"line_end":757,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":30901,"byte_end":30913,"line_start":771,"line_end":771,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":31053,"byte_end":31065,"line_start":777,"line_end":777,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":31753,"byte_end":31772,"line_start":798,"line_end":798,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":32238,"byte_end":32257,"line_start":820,"line_end":820,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":32474,"byte_end":32493,"line_start":830,"line_end":830,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":32641,"byte_end":32660,"line_start":836,"line_end":836,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33282,"byte_end":33287,"line_start":858,"line_end":858,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33715,"byte_end":33720,"line_start":879,"line_end":879,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33899,"byte_end":33904,"line_start":888,"line_end":888,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":34028,"byte_end":34033,"line_start":894,"line_end":894,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":48990,"byte_end":48999,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49316,"byte_end":49325,"line_start":51,"line_end":51,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49353,"byte_end":49362,"line_start":52,"line_end":52,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49447,"byte_end":49456,"line_start":57,"line_end":57,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49684,"byte_end":49693,"line_start":66,"line_end":66,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49952,"byte_end":49961,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":50859,"byte_end":50862,"line_start":101,"line_end":101,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":50948,"byte_end":50951,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":51175,"byte_end":51178,"line_start":115,"line_end":115,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":53728,"byte_end":53742,"line_start":207,"line_end":207,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":56194,"byte_end":56202,"line_start":287,"line_end":287,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":57133,"byte_end":57141,"line_start":326,"line_end":326,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":58786,"byte_end":58794,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":59192,"byte_end":59200,"line_start":397,"line_end":397,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":61191,"byte_end":61203,"line_start":469,"line_end":469,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63622,"byte_end":63627,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":65505,"byte_end":65510,"line_start":611,"line_end":611,"column_start":65,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66199,"byte_end":66212,"line_start":639,"line_end":639,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67341,"byte_end":67354,"line_start":677,"line_end":677,"column_start":65,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67845,"byte_end":67856,"line_start":697,"line_end":697,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":68728,"byte_end":68739,"line_start":721,"line_end":721,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":68924,"byte_end":68932,"line_start":729,"line_end":729,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":648},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":702}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":80520,"byte_end":80528,"line_start":1083,"line_end":1083,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":81858,"byte_end":81870,"line_start":1124,"line_end":1124,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":724},{"krate":0,"index":727},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":97750,"byte_end":97754,"line_start":1544,"line_end":1544,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":97873,"byte_end":97877,"line_start":1550,"line_end":1550,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98034,"byte_end":98038,"line_start":1556,"line_end":1556,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98193,"byte_end":98197,"line_start":1563,"line_end":1563,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98342,"byte_end":98346,"line_start":1569,"line_end":1569,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98869,"byte_end":98875,"line_start":1588,"line_end":1588,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":801},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98996,"byte_end":99002,"line_start":1594,"line_end":1594,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99166,"byte_end":99172,"line_start":1600,"line_end":1600,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99327,"byte_end":99333,"line_start":1607,"line_end":1607,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99482,"byte_end":99488,"line_start":1613,"line_end":1613,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100036,"byte_end":100045,"line_start":1632,"line_end":1632,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100170,"byte_end":100179,"line_start":1638,"line_end":1638,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100343,"byte_end":100352,"line_start":1644,"line_end":1644,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100782,"byte_end":100786,"line_start":1661,"line_end":1661,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100911,"byte_end":100915,"line_start":1667,"line_end":1667,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101074,"byte_end":101078,"line_start":1673,"line_end":1673,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101233,"byte_end":101237,"line_start":1680,"line_end":1680,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101394,"byte_end":101398,"line_start":1686,"line_end":1686,"column_start":55,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101939,"byte_end":101946,"line_start":1705,"line_end":1705,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102078,"byte_end":102085,"line_start":1711,"line_end":1711,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102247,"byte_end":102254,"line_start":1717,"line_end":1717,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102742,"byte_end":102750,"line_start":1734,"line_end":1734,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102868,"byte_end":102876,"line_start":1740,"line_end":1740,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103032,"byte_end":103040,"line_start":1746,"line_end":1746,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103161,"byte_end":103169,"line_start":1752,"line_end":1752,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103754,"byte_end":103759,"line_start":1770,"line_end":1770,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103881,"byte_end":103886,"line_start":1776,"line_end":1776,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":104502,"byte_end":104510,"line_start":1803,"line_end":1803,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":104842,"byte_end":104850,"line_start":1818,"line_end":1818,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":959},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":105433,"byte_end":105441,"line_start":1839,"line_end":1839,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":105827,"byte_end":105835,"line_start":1854,"line_end":1854,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":106423,"byte_end":106431,"line_start":1872,"line_end":1872,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":978}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":107145,"byte_end":107153,"line_start":1890,"line_end":1890,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":107559,"byte_end":107567,"line_start":1903,"line_end":1903,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":107801,"byte_end":107809,"line_start":1912,"line_end":1912,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":108178,"byte_end":108186,"line_start":1927,"line_end":1927,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1286,"byte_end":1295,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1375,"byte_end":1384,"line_start":56,"line_end":56,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":60,"line_end":60,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1671,"byte_end":1677,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":842,"byte_end":845,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":855,"byte_end":858,"line_start":33,"line_end":33,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":435}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/equivalent.rs","byte_start":6706,"byte_end":6707,"line_start":19,"line_end":19,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":30}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/mutable_keys.rs","byte_start":8536,"byte_end":8544,"line_start":49,"line_end":49,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":44}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":11181,"byte_end":11189,"line_start":66,"line_end":66,"column_start":24,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1033},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":11653,"byte_end":11661,"line_start":88,"line_end":88,"column_start":27,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12076,"byte_end":12084,"line_start":102,"line_end":102,"column_start":9,"column_end":17},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":12475,"byte_end":12483,"line_start":117,"line_end":117,"column_start":12,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":13624,"byte_end":13632,"line_start":162,"line_end":162,"column_start":12,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":22293,"byte_end":22301,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23246,"byte_end":23254,"line_start":462,"line_end":462,"column_start":22,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":176},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23351,"byte_end":23359,"line_start":468,"line_end":468,"column_start":33,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":176},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23503,"byte_end":23511,"line_start":474,"line_end":474,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":176},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":23614,"byte_end":23622,"line_start":480,"line_end":480,"column_start":36,"column_end":44},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":176},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24154,"byte_end":24158,"line_start":499,"line_end":499,"column_start":26,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":191},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24271,"byte_end":24275,"line_start":505,"line_end":505,"column_start":37,"column_end":41},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":191},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24431,"byte_end":24435,"line_start":511,"line_end":511,"column_start":35,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":191},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24529,"byte_end":24533,"line_start":517,"line_end":517,"column_start":23,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":191},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":24662,"byte_end":24666,"line_start":523,"line_end":523,"column_start":40,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":191},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25151,"byte_end":25156,"line_start":540,"line_end":540,"column_start":26,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25261,"byte_end":25266,"line_start":546,"line_end":546,"column_start":37,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25588,"byte_end":25596,"line_start":562,"line_end":562,"column_start":29,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3785}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":25865,"byte_end":25873,"line_start":576,"line_end":576,"column_start":32,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3781}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26151,"byte_end":26159,"line_start":586,"line_end":586,"column_start":26,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3794}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26414,"byte_end":26422,"line_start":596,"line_end":596,"column_start":34,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3794}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26670,"byte_end":26678,"line_start":607,"line_end":607,"column_start":24,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":26887,"byte_end":26895,"line_start":616,"line_end":616,"column_start":48,"column_end":56},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":27120,"byte_end":27128,"line_start":626,"line_end":626,"column_start":19,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":27200,"byte_end":27208,"line_start":632,"line_end":632,"column_start":12,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":28552,"byte_end":28562,"line_start":675,"line_end":675,"column_start":29,"column_end":39},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29005,"byte_end":29015,"line_start":695,"line_end":695,"column_start":40,"column_end":50},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29334,"byte_end":29344,"line_start":709,"line_end":709,"column_start":26,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":29482,"byte_end":29492,"line_start":715,"line_end":715,"column_start":31,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":30117,"byte_end":30129,"line_start":737,"line_end":737,"column_start":29,"column_end":41},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":30571,"byte_end":30583,"line_start":757,"line_end":757,"column_start":40,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":30901,"byte_end":30913,"line_start":771,"line_end":771,"column_start":26,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":31053,"byte_end":31065,"line_start":777,"line_end":777,"column_start":31,"column_end":43},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":310},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":31753,"byte_end":31772,"line_start":798,"line_end":798,"column_start":34,"column_end":53},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":32238,"byte_end":32257,"line_start":820,"line_end":820,"column_start":45,"column_end":64},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":32474,"byte_end":32493,"line_start":830,"line_end":830,"column_start":31,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":32641,"byte_end":32660,"line_start":836,"line_end":836,"column_start":36,"column_end":55},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":338},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33282,"byte_end":33287,"line_start":858,"line_end":858,"column_start":29,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33715,"byte_end":33720,"line_start":879,"line_end":879,"column_start":40,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":33899,"byte_end":33904,"line_start":888,"line_end":888,"column_start":26,"column_end":31},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/set.rs","byte_start":34028,"byte_end":34033,"line_start":894,"line_end":894,"column_start":31,"column_end":36},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":48990,"byte_end":48999,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1063},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49316,"byte_end":49325,"line_start":51,"line_end":51,"column_start":19,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":1542}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49353,"byte_end":49362,"line_start":52,"line_end":52,"column_start":20,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49447,"byte_end":49456,"line_start":57,"line_end":57,"column_start":24,"column_end":33},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49684,"byte_end":49693,"line_start":66,"line_end":66,"column_start":35,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1063},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":49952,"byte_end":49961,"line_start":76,"line_end":76,"column_start":34,"column_end":43},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":2205}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":50859,"byte_end":50862,"line_start":101,"line_end":101,"column_start":16,"column_end":19},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1071},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":50948,"byte_end":50951,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1071},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":51175,"byte_end":51178,"line_start":115,"line_end":115,"column_start":6,"column_end":9},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1071},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":53728,"byte_end":53742,"line_start":207,"line_end":207,"column_start":10,"column_end":24},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":56194,"byte_end":56202,"line_start":287,"line_end":287,"column_start":27,"column_end":35},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":1026}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":57133,"byte_end":57141,"line_start":326,"line_end":326,"column_start":30,"column_end":38},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":58786,"byte_end":58794,"line_start":382,"line_end":382,"column_start":12,"column_end":20},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":59192,"byte_end":59200,"line_start":397,"line_end":397,"column_start":15,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":61191,"byte_end":61203,"line_start":469,"line_end":469,"column_start":12,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":63622,"byte_end":63627,"line_start":550,"line_end":550,"column_start":16,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":65505,"byte_end":65510,"line_start":611,"line_end":611,"column_start":65,"column_end":70},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":66199,"byte_end":66212,"line_start":639,"line_end":639,"column_start":16,"column_end":29},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67341,"byte_end":67354,"line_start":677,"line_end":677,"column_start":65,"column_end":78},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":595},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":67845,"byte_end":67856,"line_start":697,"line_end":697,"column_start":16,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":68728,"byte_end":68739,"line_start":721,"line_end":721,"column_start":52,"column_end":63},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":68924,"byte_end":68932,"line_start":729,"line_end":729,"column_start":15,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":80520,"byte_end":80528,"line_start":1083,"line_end":1083,"column_start":15,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1074},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":81858,"byte_end":81870,"line_start":1124,"line_end":1124,"column_start":12,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1085},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":97750,"byte_end":97754,"line_start":1544,"line_end":1544,"column_start":29,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":97873,"byte_end":97877,"line_start":1550,"line_end":1550,"column_start":40,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98034,"byte_end":98038,"line_start":1556,"line_end":1556,"column_start":38,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98193,"byte_end":98197,"line_start":1563,"line_end":1563,"column_start":26,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98342,"byte_end":98346,"line_start":1569,"line_end":1569,"column_start":43,"column_end":47},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98869,"byte_end":98875,"line_start":1588,"line_end":1588,"column_start":29,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":98996,"byte_end":99002,"line_start":1594,"line_end":1594,"column_start":40,"column_end":46},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99166,"byte_end":99172,"line_start":1600,"line_end":1600,"column_start":38,"column_end":44},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99327,"byte_end":99333,"line_start":1607,"line_end":1607,"column_start":26,"column_end":32},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":99482,"byte_end":99488,"line_start":1613,"line_end":1613,"column_start":43,"column_end":49},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":792},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100036,"byte_end":100045,"line_start":1632,"line_end":1632,"column_start":29,"column_end":38},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":822},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100170,"byte_end":100179,"line_start":1638,"line_end":1638,"column_start":40,"column_end":49},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":822},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100343,"byte_end":100352,"line_start":1644,"line_end":1644,"column_start":38,"column_end":47},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":822},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100782,"byte_end":100786,"line_start":1661,"line_end":1661,"column_start":29,"column_end":33},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":100911,"byte_end":100915,"line_start":1667,"line_end":1667,"column_start":40,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101074,"byte_end":101078,"line_start":1673,"line_end":1673,"column_start":38,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101233,"byte_end":101237,"line_start":1680,"line_end":1680,"column_start":26,"column_end":30},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101394,"byte_end":101398,"line_start":1686,"line_end":1686,"column_start":55,"column_end":59},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":842},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":101939,"byte_end":101946,"line_start":1705,"line_end":1705,"column_start":29,"column_end":36},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":872},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102078,"byte_end":102085,"line_start":1711,"line_end":1711,"column_start":40,"column_end":47},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":872},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102247,"byte_end":102254,"line_start":1717,"line_end":1717,"column_start":38,"column_end":45},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":872},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102742,"byte_end":102750,"line_start":1734,"line_end":1734,"column_start":25,"column_end":33},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":102868,"byte_end":102876,"line_start":1740,"line_end":1740,"column_start":40,"column_end":48},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103032,"byte_end":103040,"line_start":1746,"line_end":1746,"column_start":34,"column_end":42},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3773}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103161,"byte_end":103169,"line_start":1752,"line_end":1752,"column_start":51,"column_end":59},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":7442}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103754,"byte_end":103759,"line_start":1770,"line_end":1770,"column_start":29,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":3494}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":103881,"byte_end":103886,"line_start":1776,"line_end":1776,"column_start":40,"column_end":45},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":913},"to":{"krate":2,"index":3744}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":104502,"byte_end":104510,"line_start":1803,"line_end":1803,"column_start":32,"column_end":40},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":3785}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":104842,"byte_end":104850,"line_start":1818,"line_end":1818,"column_start":47,"column_end":55},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":1779}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":105433,"byte_end":105441,"line_start":1839,"line_end":1839,"column_start":50,"column_end":58},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":1783}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":105827,"byte_end":105835,"line_start":1854,"line_end":1854,"column_start":40,"column_end":48},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":3781}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":106423,"byte_end":106431,"line_start":1872,"line_end":1872,"column_start":34,"column_end":42},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":3794}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":107145,"byte_end":107153,"line_start":1890,"line_end":1890,"column_start":46,"column_end":54},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":3794}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":107559,"byte_end":107567,"line_start":1903,"line_end":1903,"column_start":27,"column_end":35},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":2188}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":107801,"byte_end":107809,"line_start":1912,"line_end":1912,"column_start":60,"column_end":68},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/map.rs","byte_start":108178,"byte_end":108186,"line_start":1927,"line_end":1927,"column_start":22,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1074},"to":{"krate":2,"index":2044}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1286,"byte_end":1295,"line_start":51,"line_end":51,"column_start":6,"column_end":15},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1375,"byte_end":1384,"line_start":56,"line_end":56,"column_start":16,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1460,"byte_end":1469,"line_start":60,"line_end":60,"column_start":20,"column_end":29},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1145},"to":{"krate":2,"index":2039}},{"span":{"file_name":"/home/maher/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.1.0/src/lib.rs","byte_start":1671,"byte_end":1677,"line_start":74,"line_end":74,"column_start":12,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1151},"to":{"krate":4294967295,"index":4294967295}}]}